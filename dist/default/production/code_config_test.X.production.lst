

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Mar 13 23:07:17 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	text0,local,class=CODE,merge=1,delta=2
     6                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	swtext1,local,class=CONST,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x620,48
    61                           	dabs	1,0x5A0,80
    62                           	dabs	1,0x569,7
    63                           	dabs	1,0x520,73
    64                           	dabs	1,0x4B2,62
    65                           	dabs	1,0x22E2,0,_PACKET_pkt
    66                           	dabs	1,0x2369,0,_PACKET_RxPacket
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 1.44
    70                           ; Generated 14/09/2017 GMT
    71                           ; 
    72                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F1829 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0115                     	;# 
   159  0116                     	;# 
   160  0117                     	;# 
   161  0118                     	;# 
   162  0119                     	;# 
   163  011A                     	;# 
   164  011B                     	;# 
   165  011D                     	;# 
   166  011E                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  018E                     	;# 
   170  0191                     	;# 
   171  0191                     	;# 
   172  0192                     	;# 
   173  0193                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0194                     	;# 
   177  0195                     	;# 
   178  0196                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019C                     	;# 
   184  019D                     	;# 
   185  019E                     	;# 
   186  019F                     	;# 
   187  020C                     	;# 
   188  020D                     	;# 
   189  020E                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  0219                     	;# 
   206  021A                     	;# 
   207  021B                     	;# 
   208  021C                     	;# 
   209  021D                     	;# 
   210  021E                     	;# 
   211  021F                     	;# 
   212  0291                     	;# 
   213  0291                     	;# 
   214  0292                     	;# 
   215  0293                     	;# 
   216  0294                     	;# 
   217  0295                     	;# 
   218  0295                     	;# 
   219  0296                     	;# 
   220  0298                     	;# 
   221  0298                     	;# 
   222  0299                     	;# 
   223  029A                     	;# 
   224  029B                     	;# 
   225  029C                     	;# 
   226  029D                     	;# 
   227  029E                     	;# 
   228  0311                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0318                     	;# 
   233  0318                     	;# 
   234  0319                     	;# 
   235  031A                     	;# 
   236  038C                     	;# 
   237  038D                     	;# 
   238  038E                     	;# 
   239  0391                     	;# 
   240  0392                     	;# 
   241  0393                     	;# 
   242  0394                     	;# 
   243  0395                     	;# 
   244  0396                     	;# 
   245  039A                     	;# 
   246  039C                     	;# 
   247  039D                     	;# 
   248  039E                     	;# 
   249  039F                     	;# 
   250  0415                     	;# 
   251  0416                     	;# 
   252  0417                     	;# 
   253  041C                     	;# 
   254  041D                     	;# 
   255  041E                     	;# 
   256  0FE4                     	;# 
   257  0FE5                     	;# 
   258  0FE6                     	;# 
   259  0FE7                     	;# 
   260  0FE8                     	;# 
   261  0FE9                     	;# 
   262  0FEA                     	;# 
   263  0FEB                     	;# 
   264  0FED                     	;# 
   265  0FEE                     	;# 
   266  0FEF                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0008                     	;# 
   276  0009                     	;# 
   277  000A                     	;# 
   278  000B                     	;# 
   279  000C                     	;# 
   280  000D                     	;# 
   281  000E                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  008E                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  0111                     	;# 
   319  0112                     	;# 
   320  0113                     	;# 
   321  0114                     	;# 
   322  0115                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  0118                     	;# 
   326  0119                     	;# 
   327  011A                     	;# 
   328  011B                     	;# 
   329  011D                     	;# 
   330  011E                     	;# 
   331  018C                     	;# 
   332  018D                     	;# 
   333  018E                     	;# 
   334  0191                     	;# 
   335  0191                     	;# 
   336  0192                     	;# 
   337  0193                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0194                     	;# 
   341  0195                     	;# 
   342  0196                     	;# 
   343  0199                     	;# 
   344  019A                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019C                     	;# 
   348  019D                     	;# 
   349  019E                     	;# 
   350  019F                     	;# 
   351  020C                     	;# 
   352  020D                     	;# 
   353  020E                     	;# 
   354  0211                     	;# 
   355  0211                     	;# 
   356  0212                     	;# 
   357  0212                     	;# 
   358  0213                     	;# 
   359  0213                     	;# 
   360  0214                     	;# 
   361  0214                     	;# 
   362  0215                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0216                     	;# 
   366  0216                     	;# 
   367  0217                     	;# 
   368  0217                     	;# 
   369  0219                     	;# 
   370  021A                     	;# 
   371  021B                     	;# 
   372  021C                     	;# 
   373  021D                     	;# 
   374  021E                     	;# 
   375  021F                     	;# 
   376  0291                     	;# 
   377  0291                     	;# 
   378  0292                     	;# 
   379  0293                     	;# 
   380  0294                     	;# 
   381  0295                     	;# 
   382  0295                     	;# 
   383  0296                     	;# 
   384  0298                     	;# 
   385  0298                     	;# 
   386  0299                     	;# 
   387  029A                     	;# 
   388  029B                     	;# 
   389  029C                     	;# 
   390  029D                     	;# 
   391  029E                     	;# 
   392  0311                     	;# 
   393  0311                     	;# 
   394  0312                     	;# 
   395  0313                     	;# 
   396  0318                     	;# 
   397  0318                     	;# 
   398  0319                     	;# 
   399  031A                     	;# 
   400  038C                     	;# 
   401  038D                     	;# 
   402  038E                     	;# 
   403  0391                     	;# 
   404  0392                     	;# 
   405  0393                     	;# 
   406  0394                     	;# 
   407  0395                     	;# 
   408  0396                     	;# 
   409  039A                     	;# 
   410  039C                     	;# 
   411  039D                     	;# 
   412  039E                     	;# 
   413  039F                     	;# 
   414  0415                     	;# 
   415  0416                     	;# 
   416  0417                     	;# 
   417  041C                     	;# 
   418  041D                     	;# 
   419  041E                     	;# 
   420  0FE4                     	;# 
   421  0FE5                     	;# 
   422  0FE6                     	;# 
   423  0FE7                     	;# 
   424  0FE8                     	;# 
   425  0FE9                     	;# 
   426  0FEA                     	;# 
   427  0FEB                     	;# 
   428  0FED                     	;# 
   429  0FEE                     	;# 
   430  0FEF                     	;# 
   431  0000                     	;# 
   432  0001                     	;# 
   433  0002                     	;# 
   434  0003                     	;# 
   435  0004                     	;# 
   436  0005                     	;# 
   437  0006                     	;# 
   438  0007                     	;# 
   439  0008                     	;# 
   440  0009                     	;# 
   441  000A                     	;# 
   442  000B                     	;# 
   443  000C                     	;# 
   444  000D                     	;# 
   445  000E                     	;# 
   446  0011                     	;# 
   447  0012                     	;# 
   448  0013                     	;# 
   449  0014                     	;# 
   450  0015                     	;# 
   451  0016                     	;# 
   452  0016                     	;# 
   453  0017                     	;# 
   454  0018                     	;# 
   455  0019                     	;# 
   456  001A                     	;# 
   457  001B                     	;# 
   458  001C                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0091                     	;# 
   465  0092                     	;# 
   466  0093                     	;# 
   467  0094                     	;# 
   468  0095                     	;# 
   469  0096                     	;# 
   470  0097                     	;# 
   471  0098                     	;# 
   472  0099                     	;# 
   473  009A                     	;# 
   474  009B                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  0111                     	;# 
   483  0112                     	;# 
   484  0113                     	;# 
   485  0114                     	;# 
   486  0115                     	;# 
   487  0116                     	;# 
   488  0117                     	;# 
   489  0118                     	;# 
   490  0119                     	;# 
   491  011A                     	;# 
   492  011B                     	;# 
   493  011D                     	;# 
   494  011E                     	;# 
   495  018C                     	;# 
   496  018D                     	;# 
   497  018E                     	;# 
   498  0191                     	;# 
   499  0191                     	;# 
   500  0192                     	;# 
   501  0193                     	;# 
   502  0193                     	;# 
   503  0193                     	;# 
   504  0194                     	;# 
   505  0195                     	;# 
   506  0196                     	;# 
   507  0199                     	;# 
   508  019A                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019C                     	;# 
   512  019D                     	;# 
   513  019E                     	;# 
   514  019F                     	;# 
   515  020C                     	;# 
   516  020D                     	;# 
   517  020E                     	;# 
   518  0211                     	;# 
   519  0211                     	;# 
   520  0212                     	;# 
   521  0212                     	;# 
   522  0213                     	;# 
   523  0213                     	;# 
   524  0214                     	;# 
   525  0214                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0215                     	;# 
   529  0216                     	;# 
   530  0216                     	;# 
   531  0217                     	;# 
   532  0217                     	;# 
   533  0219                     	;# 
   534  021A                     	;# 
   535  021B                     	;# 
   536  021C                     	;# 
   537  021D                     	;# 
   538  021E                     	;# 
   539  021F                     	;# 
   540  0291                     	;# 
   541  0291                     	;# 
   542  0292                     	;# 
   543  0293                     	;# 
   544  0294                     	;# 
   545  0295                     	;# 
   546  0295                     	;# 
   547  0296                     	;# 
   548  0298                     	;# 
   549  0298                     	;# 
   550  0299                     	;# 
   551  029A                     	;# 
   552  029B                     	;# 
   553  029C                     	;# 
   554  029D                     	;# 
   555  029E                     	;# 
   556  0311                     	;# 
   557  0311                     	;# 
   558  0312                     	;# 
   559  0313                     	;# 
   560  0318                     	;# 
   561  0318                     	;# 
   562  0319                     	;# 
   563  031A                     	;# 
   564  038C                     	;# 
   565  038D                     	;# 
   566  038E                     	;# 
   567  0391                     	;# 
   568  0392                     	;# 
   569  0393                     	;# 
   570  0394                     	;# 
   571  0395                     	;# 
   572  0396                     	;# 
   573  039A                     	;# 
   574  039C                     	;# 
   575  039D                     	;# 
   576  039E                     	;# 
   577  039F                     	;# 
   578  0415                     	;# 
   579  0416                     	;# 
   580  0417                     	;# 
   581  041C                     	;# 
   582  041D                     	;# 
   583  041E                     	;# 
   584  0FE4                     	;# 
   585  0FE5                     	;# 
   586  0FE6                     	;# 
   587  0FE7                     	;# 
   588  0FE8                     	;# 
   589  0FE9                     	;# 
   590  0FEA                     	;# 
   591  0FEB                     	;# 
   592  0FED                     	;# 
   593  0FEE                     	;# 
   594  0FEF                     	;# 
   595  0000                     	;# 
   596  0001                     	;# 
   597  0002                     	;# 
   598  0003                     	;# 
   599  0004                     	;# 
   600  0005                     	;# 
   601  0006                     	;# 
   602  0007                     	;# 
   603  0008                     	;# 
   604  0009                     	;# 
   605  000A                     	;# 
   606  000B                     	;# 
   607  000C                     	;# 
   608  000D                     	;# 
   609  000E                     	;# 
   610  0011                     	;# 
   611  0012                     	;# 
   612  0013                     	;# 
   613  0014                     	;# 
   614  0015                     	;# 
   615  0016                     	;# 
   616  0016                     	;# 
   617  0017                     	;# 
   618  0018                     	;# 
   619  0019                     	;# 
   620  001A                     	;# 
   621  001B                     	;# 
   622  001C                     	;# 
   623  001E                     	;# 
   624  001F                     	;# 
   625  008C                     	;# 
   626  008D                     	;# 
   627  008E                     	;# 
   628  0091                     	;# 
   629  0092                     	;# 
   630  0093                     	;# 
   631  0094                     	;# 
   632  0095                     	;# 
   633  0096                     	;# 
   634  0097                     	;# 
   635  0098                     	;# 
   636  0099                     	;# 
   637  009A                     	;# 
   638  009B                     	;# 
   639  009B                     	;# 
   640  009C                     	;# 
   641  009D                     	;# 
   642  009E                     	;# 
   643  010C                     	;# 
   644  010D                     	;# 
   645  010E                     	;# 
   646  0111                     	;# 
   647  0112                     	;# 
   648  0113                     	;# 
   649  0114                     	;# 
   650  0115                     	;# 
   651  0116                     	;# 
   652  0117                     	;# 
   653  0118                     	;# 
   654  0119                     	;# 
   655  011A                     	;# 
   656  011B                     	;# 
   657  011D                     	;# 
   658  011E                     	;# 
   659  018C                     	;# 
   660  018D                     	;# 
   661  018E                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0193                     	;# 
   668  0194                     	;# 
   669  0195                     	;# 
   670  0196                     	;# 
   671  0199                     	;# 
   672  019A                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019C                     	;# 
   676  019D                     	;# 
   677  019E                     	;# 
   678  019F                     	;# 
   679  020C                     	;# 
   680  020D                     	;# 
   681  020E                     	;# 
   682  0211                     	;# 
   683  0211                     	;# 
   684  0212                     	;# 
   685  0212                     	;# 
   686  0213                     	;# 
   687  0213                     	;# 
   688  0214                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0216                     	;# 
   695  0217                     	;# 
   696  0217                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021C                     	;# 
   701  021D                     	;# 
   702  021E                     	;# 
   703  021F                     	;# 
   704  0291                     	;# 
   705  0291                     	;# 
   706  0292                     	;# 
   707  0293                     	;# 
   708  0294                     	;# 
   709  0295                     	;# 
   710  0295                     	;# 
   711  0296                     	;# 
   712  0298                     	;# 
   713  0298                     	;# 
   714  0299                     	;# 
   715  029A                     	;# 
   716  029B                     	;# 
   717  029C                     	;# 
   718  029D                     	;# 
   719  029E                     	;# 
   720  0311                     	;# 
   721  0311                     	;# 
   722  0312                     	;# 
   723  0313                     	;# 
   724  0318                     	;# 
   725  0318                     	;# 
   726  0319                     	;# 
   727  031A                     	;# 
   728  038C                     	;# 
   729  038D                     	;# 
   730  038E                     	;# 
   731  0391                     	;# 
   732  0392                     	;# 
   733  0393                     	;# 
   734  0394                     	;# 
   735  0395                     	;# 
   736  0396                     	;# 
   737  039A                     	;# 
   738  039C                     	;# 
   739  039D                     	;# 
   740  039E                     	;# 
   741  039F                     	;# 
   742  0415                     	;# 
   743  0416                     	;# 
   744  0417                     	;# 
   745  041C                     	;# 
   746  041D                     	;# 
   747  041E                     	;# 
   748  0FE4                     	;# 
   749  0FE5                     	;# 
   750  0FE6                     	;# 
   751  0FE7                     	;# 
   752  0FE8                     	;# 
   753  0FE9                     	;# 
   754  0FEA                     	;# 
   755  0FEB                     	;# 
   756  0FED                     	;# 
   757  0FEE                     	;# 
   758  0FEF                     	;# 
   759  0000                     	;# 
   760  0001                     	;# 
   761  0002                     	;# 
   762  0003                     	;# 
   763  0004                     	;# 
   764  0005                     	;# 
   765  0006                     	;# 
   766  0007                     	;# 
   767  0008                     	;# 
   768  0009                     	;# 
   769  000A                     	;# 
   770  000B                     	;# 
   771  000C                     	;# 
   772  000D                     	;# 
   773  000E                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0013                     	;# 
   777  0014                     	;# 
   778  0015                     	;# 
   779  0016                     	;# 
   780  0016                     	;# 
   781  0017                     	;# 
   782  0018                     	;# 
   783  0019                     	;# 
   784  001A                     	;# 
   785  001B                     	;# 
   786  001C                     	;# 
   787  001E                     	;# 
   788  001F                     	;# 
   789  008C                     	;# 
   790  008D                     	;# 
   791  008E                     	;# 
   792  0091                     	;# 
   793  0092                     	;# 
   794  0093                     	;# 
   795  0094                     	;# 
   796  0095                     	;# 
   797  0096                     	;# 
   798  0097                     	;# 
   799  0098                     	;# 
   800  0099                     	;# 
   801  009A                     	;# 
   802  009B                     	;# 
   803  009B                     	;# 
   804  009C                     	;# 
   805  009D                     	;# 
   806  009E                     	;# 
   807  010C                     	;# 
   808  010D                     	;# 
   809  010E                     	;# 
   810  0111                     	;# 
   811  0112                     	;# 
   812  0113                     	;# 
   813  0114                     	;# 
   814  0115                     	;# 
   815  0116                     	;# 
   816  0117                     	;# 
   817  0118                     	;# 
   818  0119                     	;# 
   819  011A                     	;# 
   820  011B                     	;# 
   821  011D                     	;# 
   822  011E                     	;# 
   823  018C                     	;# 
   824  018D                     	;# 
   825  018E                     	;# 
   826  0191                     	;# 
   827  0191                     	;# 
   828  0192                     	;# 
   829  0193                     	;# 
   830  0193                     	;# 
   831  0193                     	;# 
   832  0194                     	;# 
   833  0195                     	;# 
   834  0196                     	;# 
   835  0199                     	;# 
   836  019A                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019C                     	;# 
   840  019D                     	;# 
   841  019E                     	;# 
   842  019F                     	;# 
   843  020C                     	;# 
   844  020D                     	;# 
   845  020E                     	;# 
   846  0211                     	;# 
   847  0211                     	;# 
   848  0212                     	;# 
   849  0212                     	;# 
   850  0213                     	;# 
   851  0213                     	;# 
   852  0214                     	;# 
   853  0214                     	;# 
   854  0215                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0216                     	;# 
   858  0216                     	;# 
   859  0217                     	;# 
   860  0217                     	;# 
   861  0219                     	;# 
   862  021A                     	;# 
   863  021B                     	;# 
   864  021C                     	;# 
   865  021D                     	;# 
   866  021E                     	;# 
   867  021F                     	;# 
   868  0291                     	;# 
   869  0291                     	;# 
   870  0292                     	;# 
   871  0293                     	;# 
   872  0294                     	;# 
   873  0295                     	;# 
   874  0295                     	;# 
   875  0296                     	;# 
   876  0298                     	;# 
   877  0298                     	;# 
   878  0299                     	;# 
   879  029A                     	;# 
   880  029B                     	;# 
   881  029C                     	;# 
   882  029D                     	;# 
   883  029E                     	;# 
   884  0311                     	;# 
   885  0311                     	;# 
   886  0312                     	;# 
   887  0313                     	;# 
   888  0318                     	;# 
   889  0318                     	;# 
   890  0319                     	;# 
   891  031A                     	;# 
   892  038C                     	;# 
   893  038D                     	;# 
   894  038E                     	;# 
   895  0391                     	;# 
   896  0392                     	;# 
   897  0393                     	;# 
   898  0394                     	;# 
   899  0395                     	;# 
   900  0396                     	;# 
   901  039A                     	;# 
   902  039C                     	;# 
   903  039D                     	;# 
   904  039E                     	;# 
   905  039F                     	;# 
   906  0415                     	;# 
   907  0416                     	;# 
   908  0417                     	;# 
   909  041C                     	;# 
   910  041D                     	;# 
   911  041E                     	;# 
   912  0FE4                     	;# 
   913  0FE5                     	;# 
   914  0FE6                     	;# 
   915  0FE7                     	;# 
   916  0FE8                     	;# 
   917  0FE9                     	;# 
   918  0FEA                     	;# 
   919  0FEB                     	;# 
   920  0FED                     	;# 
   921  0FEE                     	;# 
   922  0FEF                     	;# 
   923  0000                     	;# 
   924  0001                     	;# 
   925  0002                     	;# 
   926  0003                     	;# 
   927  0004                     	;# 
   928  0005                     	;# 
   929  0006                     	;# 
   930  0007                     	;# 
   931  0008                     	;# 
   932  0009                     	;# 
   933  000A                     	;# 
   934  000B                     	;# 
   935  000C                     	;# 
   936  000D                     	;# 
   937  000E                     	;# 
   938  0011                     	;# 
   939  0012                     	;# 
   940  0013                     	;# 
   941  0014                     	;# 
   942  0015                     	;# 
   943  0016                     	;# 
   944  0016                     	;# 
   945  0017                     	;# 
   946  0018                     	;# 
   947  0019                     	;# 
   948  001A                     	;# 
   949  001B                     	;# 
   950  001C                     	;# 
   951  001E                     	;# 
   952  001F                     	;# 
   953  008C                     	;# 
   954  008D                     	;# 
   955  008E                     	;# 
   956  0091                     	;# 
   957  0092                     	;# 
   958  0093                     	;# 
   959  0094                     	;# 
   960  0095                     	;# 
   961  0096                     	;# 
   962  0097                     	;# 
   963  0098                     	;# 
   964  0099                     	;# 
   965  009A                     	;# 
   966  009B                     	;# 
   967  009B                     	;# 
   968  009C                     	;# 
   969  009D                     	;# 
   970  009E                     	;# 
   971  010C                     	;# 
   972  010D                     	;# 
   973  010E                     	;# 
   974  0111                     	;# 
   975  0112                     	;# 
   976  0113                     	;# 
   977  0114                     	;# 
   978  0115                     	;# 
   979  0116                     	;# 
   980  0117                     	;# 
   981  0118                     	;# 
   982  0119                     	;# 
   983  011A                     	;# 
   984  011B                     	;# 
   985  011D                     	;# 
   986  011E                     	;# 
   987  018C                     	;# 
   988  018D                     	;# 
   989  018E                     	;# 
   990  0191                     	;# 
   991  0191                     	;# 
   992  0192                     	;# 
   993  0193                     	;# 
   994  0193                     	;# 
   995  0193                     	;# 
   996  0194                     	;# 
   997  0195                     	;# 
   998  0196                     	;# 
   999  0199                     	;# 
  1000  019A                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019C                     	;# 
  1004  019D                     	;# 
  1005  019E                     	;# 
  1006  019F                     	;# 
  1007  020C                     	;# 
  1008  020D                     	;# 
  1009  020E                     	;# 
  1010  0211                     	;# 
  1011  0211                     	;# 
  1012  0212                     	;# 
  1013  0212                     	;# 
  1014  0213                     	;# 
  1015  0213                     	;# 
  1016  0214                     	;# 
  1017  0214                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0215                     	;# 
  1021  0216                     	;# 
  1022  0216                     	;# 
  1023  0217                     	;# 
  1024  0217                     	;# 
  1025  0219                     	;# 
  1026  021A                     	;# 
  1027  021B                     	;# 
  1028  021C                     	;# 
  1029  021D                     	;# 
  1030  021E                     	;# 
  1031  021F                     	;# 
  1032  0291                     	;# 
  1033  0291                     	;# 
  1034  0292                     	;# 
  1035  0293                     	;# 
  1036  0294                     	;# 
  1037  0295                     	;# 
  1038  0295                     	;# 
  1039  0296                     	;# 
  1040  0298                     	;# 
  1041  0298                     	;# 
  1042  0299                     	;# 
  1043  029A                     	;# 
  1044  029B                     	;# 
  1045  029C                     	;# 
  1046  029D                     	;# 
  1047  029E                     	;# 
  1048  0311                     	;# 
  1049  0311                     	;# 
  1050  0312                     	;# 
  1051  0313                     	;# 
  1052  0318                     	;# 
  1053  0318                     	;# 
  1054  0319                     	;# 
  1055  031A                     	;# 
  1056  038C                     	;# 
  1057  038D                     	;# 
  1058  038E                     	;# 
  1059  0391                     	;# 
  1060  0392                     	;# 
  1061  0393                     	;# 
  1062  0394                     	;# 
  1063  0395                     	;# 
  1064  0396                     	;# 
  1065  039A                     	;# 
  1066  039C                     	;# 
  1067  039D                     	;# 
  1068  039E                     	;# 
  1069  039F                     	;# 
  1070  0415                     	;# 
  1071  0416                     	;# 
  1072  0417                     	;# 
  1073  041C                     	;# 
  1074  041D                     	;# 
  1075  041E                     	;# 
  1076  0FE4                     	;# 
  1077  0FE5                     	;# 
  1078  0FE6                     	;# 
  1079  0FE7                     	;# 
  1080  0FE8                     	;# 
  1081  0FE9                     	;# 
  1082  0FEA                     	;# 
  1083  0FEB                     	;# 
  1084  0FED                     	;# 
  1085  0FEE                     	;# 
  1086  0FEF                     	;# 
  1087  0000                     	;# 
  1088  0001                     	;# 
  1089  0002                     	;# 
  1090  0003                     	;# 
  1091  0004                     	;# 
  1092  0005                     	;# 
  1093  0006                     	;# 
  1094  0007                     	;# 
  1095  0008                     	;# 
  1096  0009                     	;# 
  1097  000A                     	;# 
  1098  000B                     	;# 
  1099  000C                     	;# 
  1100  000D                     	;# 
  1101  000E                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0014                     	;# 
  1106  0015                     	;# 
  1107  0016                     	;# 
  1108  0016                     	;# 
  1109  0017                     	;# 
  1110  0018                     	;# 
  1111  0019                     	;# 
  1112  001A                     	;# 
  1113  001B                     	;# 
  1114  001C                     	;# 
  1115  001E                     	;# 
  1116  001F                     	;# 
  1117  008C                     	;# 
  1118  008D                     	;# 
  1119  008E                     	;# 
  1120  0091                     	;# 
  1121  0092                     	;# 
  1122  0093                     	;# 
  1123  0094                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0098                     	;# 
  1128  0099                     	;# 
  1129  009A                     	;# 
  1130  009B                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  0111                     	;# 
  1139  0112                     	;# 
  1140  0113                     	;# 
  1141  0114                     	;# 
  1142  0115                     	;# 
  1143  0116                     	;# 
  1144  0117                     	;# 
  1145  0118                     	;# 
  1146  0119                     	;# 
  1147  011A                     	;# 
  1148  011B                     	;# 
  1149  011D                     	;# 
  1150  011E                     	;# 
  1151  018C                     	;# 
  1152  018D                     	;# 
  1153  018E                     	;# 
  1154  0191                     	;# 
  1155  0191                     	;# 
  1156  0192                     	;# 
  1157  0193                     	;# 
  1158  0193                     	;# 
  1159  0193                     	;# 
  1160  0194                     	;# 
  1161  0195                     	;# 
  1162  0196                     	;# 
  1163  0199                     	;# 
  1164  019A                     	;# 
  1165  019B                     	;# 
  1166  019B                     	;# 
  1167  019C                     	;# 
  1168  019D                     	;# 
  1169  019E                     	;# 
  1170  019F                     	;# 
  1171  020C                     	;# 
  1172  020D                     	;# 
  1173  020E                     	;# 
  1174  0211                     	;# 
  1175  0211                     	;# 
  1176  0212                     	;# 
  1177  0212                     	;# 
  1178  0213                     	;# 
  1179  0213                     	;# 
  1180  0214                     	;# 
  1181  0214                     	;# 
  1182  0215                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0216                     	;# 
  1186  0216                     	;# 
  1187  0217                     	;# 
  1188  0217                     	;# 
  1189  0219                     	;# 
  1190  021A                     	;# 
  1191  021B                     	;# 
  1192  021C                     	;# 
  1193  021D                     	;# 
  1194  021E                     	;# 
  1195  021F                     	;# 
  1196  0291                     	;# 
  1197  0291                     	;# 
  1198  0292                     	;# 
  1199  0293                     	;# 
  1200  0294                     	;# 
  1201  0295                     	;# 
  1202  0295                     	;# 
  1203  0296                     	;# 
  1204  0298                     	;# 
  1205  0298                     	;# 
  1206  0299                     	;# 
  1207  029A                     	;# 
  1208  029B                     	;# 
  1209  029C                     	;# 
  1210  029D                     	;# 
  1211  029E                     	;# 
  1212  0311                     	;# 
  1213  0311                     	;# 
  1214  0312                     	;# 
  1215  0313                     	;# 
  1216  0318                     	;# 
  1217  0318                     	;# 
  1218  0319                     	;# 
  1219  031A                     	;# 
  1220  038C                     	;# 
  1221  038D                     	;# 
  1222  038E                     	;# 
  1223  0391                     	;# 
  1224  0392                     	;# 
  1225  0393                     	;# 
  1226  0394                     	;# 
  1227  0395                     	;# 
  1228  0396                     	;# 
  1229  039A                     	;# 
  1230  039C                     	;# 
  1231  039D                     	;# 
  1232  039E                     	;# 
  1233  039F                     	;# 
  1234  0415                     	;# 
  1235  0416                     	;# 
  1236  0417                     	;# 
  1237  041C                     	;# 
  1238  041D                     	;# 
  1239  041E                     	;# 
  1240  0FE4                     	;# 
  1241  0FE5                     	;# 
  1242  0FE6                     	;# 
  1243  0FE7                     	;# 
  1244  0FE8                     	;# 
  1245  0FE9                     	;# 
  1246  0FEA                     	;# 
  1247  0FEB                     	;# 
  1248  0FED                     	;# 
  1249  0FEE                     	;# 
  1250  0FEF                     	;# 
  1251  0000                     	;# 
  1252  0001                     	;# 
  1253  0002                     	;# 
  1254  0003                     	;# 
  1255  0004                     	;# 
  1256  0005                     	;# 
  1257  0006                     	;# 
  1258  0007                     	;# 
  1259  0008                     	;# 
  1260  0009                     	;# 
  1261  000A                     	;# 
  1262  000B                     	;# 
  1263  000C                     	;# 
  1264  000D                     	;# 
  1265  000E                     	;# 
  1266  0011                     	;# 
  1267  0012                     	;# 
  1268  0013                     	;# 
  1269  0014                     	;# 
  1270  0015                     	;# 
  1271  0016                     	;# 
  1272  0016                     	;# 
  1273  0017                     	;# 
  1274  0018                     	;# 
  1275  0019                     	;# 
  1276  001A                     	;# 
  1277  001B                     	;# 
  1278  001C                     	;# 
  1279  001E                     	;# 
  1280  001F                     	;# 
  1281  008C                     	;# 
  1282  008D                     	;# 
  1283  008E                     	;# 
  1284  0091                     	;# 
  1285  0092                     	;# 
  1286  0093                     	;# 
  1287  0094                     	;# 
  1288  0095                     	;# 
  1289  0096                     	;# 
  1290  0097                     	;# 
  1291  0098                     	;# 
  1292  0099                     	;# 
  1293  009A                     	;# 
  1294  009B                     	;# 
  1295  009B                     	;# 
  1296  009C                     	;# 
  1297  009D                     	;# 
  1298  009E                     	;# 
  1299  010C                     	;# 
  1300  010D                     	;# 
  1301  010E                     	;# 
  1302  0111                     	;# 
  1303  0112                     	;# 
  1304  0113                     	;# 
  1305  0114                     	;# 
  1306  0115                     	;# 
  1307  0116                     	;# 
  1308  0117                     	;# 
  1309  0118                     	;# 
  1310  0119                     	;# 
  1311  011A                     	;# 
  1312  011B                     	;# 
  1313  011D                     	;# 
  1314  011E                     	;# 
  1315  018C                     	;# 
  1316  018D                     	;# 
  1317  018E                     	;# 
  1318  0191                     	;# 
  1319  0191                     	;# 
  1320  0192                     	;# 
  1321  0193                     	;# 
  1322  0193                     	;# 
  1323  0193                     	;# 
  1324  0194                     	;# 
  1325  0195                     	;# 
  1326  0196                     	;# 
  1327  0199                     	;# 
  1328  019A                     	;# 
  1329  019B                     	;# 
  1330  019B                     	;# 
  1331  019C                     	;# 
  1332  019D                     	;# 
  1333  019E                     	;# 
  1334  019F                     	;# 
  1335  020C                     	;# 
  1336  020D                     	;# 
  1337  020E                     	;# 
  1338  0211                     	;# 
  1339  0211                     	;# 
  1340  0212                     	;# 
  1341  0212                     	;# 
  1342  0213                     	;# 
  1343  0213                     	;# 
  1344  0214                     	;# 
  1345  0214                     	;# 
  1346  0215                     	;# 
  1347  0215                     	;# 
  1348  0215                     	;# 
  1349  0216                     	;# 
  1350  0216                     	;# 
  1351  0217                     	;# 
  1352  0217                     	;# 
  1353  0219                     	;# 
  1354  021A                     	;# 
  1355  021B                     	;# 
  1356  021C                     	;# 
  1357  021D                     	;# 
  1358  021E                     	;# 
  1359  021F                     	;# 
  1360  0291                     	;# 
  1361  0291                     	;# 
  1362  0292                     	;# 
  1363  0293                     	;# 
  1364  0294                     	;# 
  1365  0295                     	;# 
  1366  0295                     	;# 
  1367  0296                     	;# 
  1368  0298                     	;# 
  1369  0298                     	;# 
  1370  0299                     	;# 
  1371  029A                     	;# 
  1372  029B                     	;# 
  1373  029C                     	;# 
  1374  029D                     	;# 
  1375  029E                     	;# 
  1376  0311                     	;# 
  1377  0311                     	;# 
  1378  0312                     	;# 
  1379  0313                     	;# 
  1380  0318                     	;# 
  1381  0318                     	;# 
  1382  0319                     	;# 
  1383  031A                     	;# 
  1384  038C                     	;# 
  1385  038D                     	;# 
  1386  038E                     	;# 
  1387  0391                     	;# 
  1388  0392                     	;# 
  1389  0393                     	;# 
  1390  0394                     	;# 
  1391  0395                     	;# 
  1392  0396                     	;# 
  1393  039A                     	;# 
  1394  039C                     	;# 
  1395  039D                     	;# 
  1396  039E                     	;# 
  1397  039F                     	;# 
  1398  0415                     	;# 
  1399  0416                     	;# 
  1400  0417                     	;# 
  1401  041C                     	;# 
  1402  041D                     	;# 
  1403  041E                     	;# 
  1404  0FE4                     	;# 
  1405  0FE5                     	;# 
  1406  0FE6                     	;# 
  1407  0FE7                     	;# 
  1408  0FE8                     	;# 
  1409  0FE9                     	;# 
  1410  0FEA                     	;# 
  1411  0FEB                     	;# 
  1412  0FED                     	;# 
  1413  0FEE                     	;# 
  1414  0FEF                     	;# 
  1415  0000                     	;# 
  1416  0001                     	;# 
  1417  0002                     	;# 
  1418  0003                     	;# 
  1419  0004                     	;# 
  1420  0005                     	;# 
  1421  0006                     	;# 
  1422  0007                     	;# 
  1423  0008                     	;# 
  1424  0009                     	;# 
  1425  000A                     	;# 
  1426  000B                     	;# 
  1427  000C                     	;# 
  1428  000D                     	;# 
  1429  000E                     	;# 
  1430  0011                     	;# 
  1431  0012                     	;# 
  1432  0013                     	;# 
  1433  0014                     	;# 
  1434  0015                     	;# 
  1435  0016                     	;# 
  1436  0016                     	;# 
  1437  0017                     	;# 
  1438  0018                     	;# 
  1439  0019                     	;# 
  1440  001A                     	;# 
  1441  001B                     	;# 
  1442  001C                     	;# 
  1443  001E                     	;# 
  1444  001F                     	;# 
  1445  008C                     	;# 
  1446  008D                     	;# 
  1447  008E                     	;# 
  1448  0091                     	;# 
  1449  0092                     	;# 
  1450  0093                     	;# 
  1451  0094                     	;# 
  1452  0095                     	;# 
  1453  0096                     	;# 
  1454  0097                     	;# 
  1455  0098                     	;# 
  1456  0099                     	;# 
  1457  009A                     	;# 
  1458  009B                     	;# 
  1459  009B                     	;# 
  1460  009C                     	;# 
  1461  009D                     	;# 
  1462  009E                     	;# 
  1463  010C                     	;# 
  1464  010D                     	;# 
  1465  010E                     	;# 
  1466  0111                     	;# 
  1467  0112                     	;# 
  1468  0113                     	;# 
  1469  0114                     	;# 
  1470  0115                     	;# 
  1471  0116                     	;# 
  1472  0117                     	;# 
  1473  0118                     	;# 
  1474  0119                     	;# 
  1475  011A                     	;# 
  1476  011B                     	;# 
  1477  011D                     	;# 
  1478  011E                     	;# 
  1479  018C                     	;# 
  1480  018D                     	;# 
  1481  018E                     	;# 
  1482  0191                     	;# 
  1483  0191                     	;# 
  1484  0192                     	;# 
  1485  0193                     	;# 
  1486  0193                     	;# 
  1487  0193                     	;# 
  1488  0194                     	;# 
  1489  0195                     	;# 
  1490  0196                     	;# 
  1491  0199                     	;# 
  1492  019A                     	;# 
  1493  019B                     	;# 
  1494  019B                     	;# 
  1495  019C                     	;# 
  1496  019D                     	;# 
  1497  019E                     	;# 
  1498  019F                     	;# 
  1499  020C                     	;# 
  1500  020D                     	;# 
  1501  020E                     	;# 
  1502  0211                     	;# 
  1503  0211                     	;# 
  1504  0212                     	;# 
  1505  0212                     	;# 
  1506  0213                     	;# 
  1507  0213                     	;# 
  1508  0214                     	;# 
  1509  0214                     	;# 
  1510  0215                     	;# 
  1511  0215                     	;# 
  1512  0215                     	;# 
  1513  0216                     	;# 
  1514  0216                     	;# 
  1515  0217                     	;# 
  1516  0217                     	;# 
  1517  0219                     	;# 
  1518  021A                     	;# 
  1519  021B                     	;# 
  1520  021C                     	;# 
  1521  021D                     	;# 
  1522  021E                     	;# 
  1523  021F                     	;# 
  1524  0291                     	;# 
  1525  0291                     	;# 
  1526  0292                     	;# 
  1527  0293                     	;# 
  1528  0294                     	;# 
  1529  0295                     	;# 
  1530  0295                     	;# 
  1531  0296                     	;# 
  1532  0298                     	;# 
  1533  0298                     	;# 
  1534  0299                     	;# 
  1535  029A                     	;# 
  1536  029B                     	;# 
  1537  029C                     	;# 
  1538  029D                     	;# 
  1539  029E                     	;# 
  1540  0311                     	;# 
  1541  0311                     	;# 
  1542  0312                     	;# 
  1543  0313                     	;# 
  1544  0318                     	;# 
  1545  0318                     	;# 
  1546  0319                     	;# 
  1547  031A                     	;# 
  1548  038C                     	;# 
  1549  038D                     	;# 
  1550  038E                     	;# 
  1551  0391                     	;# 
  1552  0392                     	;# 
  1553  0393                     	;# 
  1554  0394                     	;# 
  1555  0395                     	;# 
  1556  0396                     	;# 
  1557  039A                     	;# 
  1558  039C                     	;# 
  1559  039D                     	;# 
  1560  039E                     	;# 
  1561  039F                     	;# 
  1562  0415                     	;# 
  1563  0416                     	;# 
  1564  0417                     	;# 
  1565  041C                     	;# 
  1566  041D                     	;# 
  1567  041E                     	;# 
  1568  0FE4                     	;# 
  1569  0FE5                     	;# 
  1570  0FE6                     	;# 
  1571  0FE7                     	;# 
  1572  0FE8                     	;# 
  1573  0FE9                     	;# 
  1574  0FEA                     	;# 
  1575  0FEB                     	;# 
  1576  0FED                     	;# 
  1577  0FEE                     	;# 
  1578  0FEF                     	;# 
  1579  0000                     	;# 
  1580  0001                     	;# 
  1581  0002                     	;# 
  1582  0003                     	;# 
  1583  0004                     	;# 
  1584  0005                     	;# 
  1585  0006                     	;# 
  1586  0007                     	;# 
  1587  0008                     	;# 
  1588  0009                     	;# 
  1589  000A                     	;# 
  1590  000B                     	;# 
  1591  000C                     	;# 
  1592  000D                     	;# 
  1593  000E                     	;# 
  1594  0011                     	;# 
  1595  0012                     	;# 
  1596  0013                     	;# 
  1597  0014                     	;# 
  1598  0015                     	;# 
  1599  0016                     	;# 
  1600  0016                     	;# 
  1601  0017                     	;# 
  1602  0018                     	;# 
  1603  0019                     	;# 
  1604  001A                     	;# 
  1605  001B                     	;# 
  1606  001C                     	;# 
  1607  001E                     	;# 
  1608  001F                     	;# 
  1609  008C                     	;# 
  1610  008D                     	;# 
  1611  008E                     	;# 
  1612  0091                     	;# 
  1613  0092                     	;# 
  1614  0093                     	;# 
  1615  0094                     	;# 
  1616  0095                     	;# 
  1617  0096                     	;# 
  1618  0097                     	;# 
  1619  0098                     	;# 
  1620  0099                     	;# 
  1621  009A                     	;# 
  1622  009B                     	;# 
  1623  009B                     	;# 
  1624  009C                     	;# 
  1625  009D                     	;# 
  1626  009E                     	;# 
  1627  010C                     	;# 
  1628  010D                     	;# 
  1629  010E                     	;# 
  1630  0111                     	;# 
  1631  0112                     	;# 
  1632  0113                     	;# 
  1633  0114                     	;# 
  1634  0115                     	;# 
  1635  0116                     	;# 
  1636  0117                     	;# 
  1637  0118                     	;# 
  1638  0119                     	;# 
  1639  011A                     	;# 
  1640  011B                     	;# 
  1641  011D                     	;# 
  1642  011E                     	;# 
  1643  018C                     	;# 
  1644  018D                     	;# 
  1645  018E                     	;# 
  1646  0191                     	;# 
  1647  0191                     	;# 
  1648  0192                     	;# 
  1649  0193                     	;# 
  1650  0193                     	;# 
  1651  0193                     	;# 
  1652  0194                     	;# 
  1653  0195                     	;# 
  1654  0196                     	;# 
  1655  0199                     	;# 
  1656  019A                     	;# 
  1657  019B                     	;# 
  1658  019B                     	;# 
  1659  019C                     	;# 
  1660  019D                     	;# 
  1661  019E                     	;# 
  1662  019F                     	;# 
  1663  020C                     	;# 
  1664  020D                     	;# 
  1665  020E                     	;# 
  1666  0211                     	;# 
  1667  0211                     	;# 
  1668  0212                     	;# 
  1669  0212                     	;# 
  1670  0213                     	;# 
  1671  0213                     	;# 
  1672  0214                     	;# 
  1673  0214                     	;# 
  1674  0215                     	;# 
  1675  0215                     	;# 
  1676  0215                     	;# 
  1677  0216                     	;# 
  1678  0216                     	;# 
  1679  0217                     	;# 
  1680  0217                     	;# 
  1681  0219                     	;# 
  1682  021A                     	;# 
  1683  021B                     	;# 
  1684  021C                     	;# 
  1685  021D                     	;# 
  1686  021E                     	;# 
  1687  021F                     	;# 
  1688  0291                     	;# 
  1689  0291                     	;# 
  1690  0292                     	;# 
  1691  0293                     	;# 
  1692  0294                     	;# 
  1693  0295                     	;# 
  1694  0295                     	;# 
  1695  0296                     	;# 
  1696  0298                     	;# 
  1697  0298                     	;# 
  1698  0299                     	;# 
  1699  029A                     	;# 
  1700  029B                     	;# 
  1701  029C                     	;# 
  1702  029D                     	;# 
  1703  029E                     	;# 
  1704  0311                     	;# 
  1705  0311                     	;# 
  1706  0312                     	;# 
  1707  0313                     	;# 
  1708  0318                     	;# 
  1709  0318                     	;# 
  1710  0319                     	;# 
  1711  031A                     	;# 
  1712  038C                     	;# 
  1713  038D                     	;# 
  1714  038E                     	;# 
  1715  0391                     	;# 
  1716  0392                     	;# 
  1717  0393                     	;# 
  1718  0394                     	;# 
  1719  0395                     	;# 
  1720  0396                     	;# 
  1721  039A                     	;# 
  1722  039C                     	;# 
  1723  039D                     	;# 
  1724  039E                     	;# 
  1725  039F                     	;# 
  1726  0415                     	;# 
  1727  0416                     	;# 
  1728  0417                     	;# 
  1729  041C                     	;# 
  1730  041D                     	;# 
  1731  041E                     	;# 
  1732  0FE4                     	;# 
  1733  0FE5                     	;# 
  1734  0FE6                     	;# 
  1735  0FE7                     	;# 
  1736  0FE8                     	;# 
  1737  0FE9                     	;# 
  1738  0FEA                     	;# 
  1739  0FEB                     	;# 
  1740  0FED                     	;# 
  1741  0FEE                     	;# 
  1742  0FEF                     	;# 
  1743  0000                     	;# 
  1744  0001                     	;# 
  1745  0002                     	;# 
  1746  0003                     	;# 
  1747  0004                     	;# 
  1748  0005                     	;# 
  1749  0006                     	;# 
  1750  0007                     	;# 
  1751  0008                     	;# 
  1752  0009                     	;# 
  1753  000A                     	;# 
  1754  000B                     	;# 
  1755  000C                     	;# 
  1756  000D                     	;# 
  1757  000E                     	;# 
  1758  0011                     	;# 
  1759  0012                     	;# 
  1760  0013                     	;# 
  1761  0014                     	;# 
  1762  0015                     	;# 
  1763  0016                     	;# 
  1764  0016                     	;# 
  1765  0017                     	;# 
  1766  0018                     	;# 
  1767  0019                     	;# 
  1768  001A                     	;# 
  1769  001B                     	;# 
  1770  001C                     	;# 
  1771  001E                     	;# 
  1772  001F                     	;# 
  1773  008C                     	;# 
  1774  008D                     	;# 
  1775  008E                     	;# 
  1776  0091                     	;# 
  1777  0092                     	;# 
  1778  0093                     	;# 
  1779  0094                     	;# 
  1780  0095                     	;# 
  1781  0096                     	;# 
  1782  0097                     	;# 
  1783  0098                     	;# 
  1784  0099                     	;# 
  1785  009A                     	;# 
  1786  009B                     	;# 
  1787  009B                     	;# 
  1788  009C                     	;# 
  1789  009D                     	;# 
  1790  009E                     	;# 
  1791  010C                     	;# 
  1792  010D                     	;# 
  1793  010E                     	;# 
  1794  0111                     	;# 
  1795  0112                     	;# 
  1796  0113                     	;# 
  1797  0114                     	;# 
  1798  0115                     	;# 
  1799  0116                     	;# 
  1800  0117                     	;# 
  1801  0118                     	;# 
  1802  0119                     	;# 
  1803  011A                     	;# 
  1804  011B                     	;# 
  1805  011D                     	;# 
  1806  011E                     	;# 
  1807  018C                     	;# 
  1808  018D                     	;# 
  1809  018E                     	;# 
  1810  0191                     	;# 
  1811  0191                     	;# 
  1812  0192                     	;# 
  1813  0193                     	;# 
  1814  0193                     	;# 
  1815  0193                     	;# 
  1816  0194                     	;# 
  1817  0195                     	;# 
  1818  0196                     	;# 
  1819  0199                     	;# 
  1820  019A                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019C                     	;# 
  1824  019D                     	;# 
  1825  019E                     	;# 
  1826  019F                     	;# 
  1827  020C                     	;# 
  1828  020D                     	;# 
  1829  020E                     	;# 
  1830  0211                     	;# 
  1831  0211                     	;# 
  1832  0212                     	;# 
  1833  0212                     	;# 
  1834  0213                     	;# 
  1835  0213                     	;# 
  1836  0214                     	;# 
  1837  0214                     	;# 
  1838  0215                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0216                     	;# 
  1842  0216                     	;# 
  1843  0217                     	;# 
  1844  0217                     	;# 
  1845  0219                     	;# 
  1846  021A                     	;# 
  1847  021B                     	;# 
  1848  021C                     	;# 
  1849  021D                     	;# 
  1850  021E                     	;# 
  1851  021F                     	;# 
  1852  0291                     	;# 
  1853  0291                     	;# 
  1854  0292                     	;# 
  1855  0293                     	;# 
  1856  0294                     	;# 
  1857  0295                     	;# 
  1858  0295                     	;# 
  1859  0296                     	;# 
  1860  0298                     	;# 
  1861  0298                     	;# 
  1862  0299                     	;# 
  1863  029A                     	;# 
  1864  029B                     	;# 
  1865  029C                     	;# 
  1866  029D                     	;# 
  1867  029E                     	;# 
  1868  0311                     	;# 
  1869  0311                     	;# 
  1870  0312                     	;# 
  1871  0313                     	;# 
  1872  0318                     	;# 
  1873  0318                     	;# 
  1874  0319                     	;# 
  1875  031A                     	;# 
  1876  038C                     	;# 
  1877  038D                     	;# 
  1878  038E                     	;# 
  1879  0391                     	;# 
  1880  0392                     	;# 
  1881  0393                     	;# 
  1882  0394                     	;# 
  1883  0395                     	;# 
  1884  0396                     	;# 
  1885  039A                     	;# 
  1886  039C                     	;# 
  1887  039D                     	;# 
  1888  039E                     	;# 
  1889  039F                     	;# 
  1890  0415                     	;# 
  1891  0416                     	;# 
  1892  0417                     	;# 
  1893  041C                     	;# 
  1894  041D                     	;# 
  1895  041E                     	;# 
  1896  0FE4                     	;# 
  1897  0FE5                     	;# 
  1898  0FE6                     	;# 
  1899  0FE7                     	;# 
  1900  0FE8                     	;# 
  1901  0FE9                     	;# 
  1902  0FEA                     	;# 
  1903  0FEB                     	;# 
  1904  0FED                     	;# 
  1905  0FEE                     	;# 
  1906  0FEF                     	;# 
  1907  0000                     	;# 
  1908  0001                     	;# 
  1909  0002                     	;# 
  1910  0003                     	;# 
  1911  0004                     	;# 
  1912  0005                     	;# 
  1913  0006                     	;# 
  1914  0007                     	;# 
  1915  0008                     	;# 
  1916  0009                     	;# 
  1917  000A                     	;# 
  1918  000B                     	;# 
  1919  000C                     	;# 
  1920  000D                     	;# 
  1921  000E                     	;# 
  1922  0011                     	;# 
  1923  0012                     	;# 
  1924  0013                     	;# 
  1925  0014                     	;# 
  1926  0015                     	;# 
  1927  0016                     	;# 
  1928  0016                     	;# 
  1929  0017                     	;# 
  1930  0018                     	;# 
  1931  0019                     	;# 
  1932  001A                     	;# 
  1933  001B                     	;# 
  1934  001C                     	;# 
  1935  001E                     	;# 
  1936  001F                     	;# 
  1937  008C                     	;# 
  1938  008D                     	;# 
  1939  008E                     	;# 
  1940  0091                     	;# 
  1941  0092                     	;# 
  1942  0093                     	;# 
  1943  0094                     	;# 
  1944  0095                     	;# 
  1945  0096                     	;# 
  1946  0097                     	;# 
  1947  0098                     	;# 
  1948  0099                     	;# 
  1949  009A                     	;# 
  1950  009B                     	;# 
  1951  009B                     	;# 
  1952  009C                     	;# 
  1953  009D                     	;# 
  1954  009E                     	;# 
  1955  010C                     	;# 
  1956  010D                     	;# 
  1957  010E                     	;# 
  1958  0111                     	;# 
  1959  0112                     	;# 
  1960  0113                     	;# 
  1961  0114                     	;# 
  1962  0115                     	;# 
  1963  0116                     	;# 
  1964  0117                     	;# 
  1965  0118                     	;# 
  1966  0119                     	;# 
  1967  011A                     	;# 
  1968  011B                     	;# 
  1969  011D                     	;# 
  1970  011E                     	;# 
  1971  018C                     	;# 
  1972  018D                     	;# 
  1973  018E                     	;# 
  1974  0191                     	;# 
  1975  0191                     	;# 
  1976  0192                     	;# 
  1977  0193                     	;# 
  1978  0193                     	;# 
  1979  0193                     	;# 
  1980  0194                     	;# 
  1981  0195                     	;# 
  1982  0196                     	;# 
  1983  0199                     	;# 
  1984  019A                     	;# 
  1985  019B                     	;# 
  1986  019B                     	;# 
  1987  019C                     	;# 
  1988  019D                     	;# 
  1989  019E                     	;# 
  1990  019F                     	;# 
  1991  020C                     	;# 
  1992  020D                     	;# 
  1993  020E                     	;# 
  1994  0211                     	;# 
  1995  0211                     	;# 
  1996  0212                     	;# 
  1997  0212                     	;# 
  1998  0213                     	;# 
  1999  0213                     	;# 
  2000  0214                     	;# 
  2001  0214                     	;# 
  2002  0215                     	;# 
  2003  0215                     	;# 
  2004  0215                     	;# 
  2005  0216                     	;# 
  2006  0216                     	;# 
  2007  0217                     	;# 
  2008  0217                     	;# 
  2009  0219                     	;# 
  2010  021A                     	;# 
  2011  021B                     	;# 
  2012  021C                     	;# 
  2013  021D                     	;# 
  2014  021E                     	;# 
  2015  021F                     	;# 
  2016  0291                     	;# 
  2017  0291                     	;# 
  2018  0292                     	;# 
  2019  0293                     	;# 
  2020  0294                     	;# 
  2021  0295                     	;# 
  2022  0295                     	;# 
  2023  0296                     	;# 
  2024  0298                     	;# 
  2025  0298                     	;# 
  2026  0299                     	;# 
  2027  029A                     	;# 
  2028  029B                     	;# 
  2029  029C                     	;# 
  2030  029D                     	;# 
  2031  029E                     	;# 
  2032  0311                     	;# 
  2033  0311                     	;# 
  2034  0312                     	;# 
  2035  0313                     	;# 
  2036  0318                     	;# 
  2037  0318                     	;# 
  2038  0319                     	;# 
  2039  031A                     	;# 
  2040  038C                     	;# 
  2041  038D                     	;# 
  2042  038E                     	;# 
  2043  0391                     	;# 
  2044  0392                     	;# 
  2045  0393                     	;# 
  2046  0394                     	;# 
  2047  0395                     	;# 
  2048  0396                     	;# 
  2049  039A                     	;# 
  2050  039C                     	;# 
  2051  039D                     	;# 
  2052  039E                     	;# 
  2053  039F                     	;# 
  2054  0415                     	;# 
  2055  0416                     	;# 
  2056  0417                     	;# 
  2057  041C                     	;# 
  2058  041D                     	;# 
  2059  041E                     	;# 
  2060  0FE4                     	;# 
  2061  0FE5                     	;# 
  2062  0FE6                     	;# 
  2063  0FE7                     	;# 
  2064  0FE8                     	;# 
  2065  0FE9                     	;# 
  2066  0FEA                     	;# 
  2067  0FEB                     	;# 
  2068  0FED                     	;# 
  2069  0FEE                     	;# 
  2070  0FEF                     	;_PACKET_pkt
  2071  0014                     _PIR4bits	set	20
  2072  000B                     _INTCONbits	set	11
  2073  0011                     _PIR1bits	set	17
  2074  005F                     _GIE	set	95
  2075  0018                     _CARRY	set	24
  2076  0094                     _PIE4bits	set	148
  2077  0095                     _OPTION_REGbits	set	149
  2078  008E                     _TRISC	set	142
  2079  008D                     _TRISB	set	141
  2080  008C                     _TRISA	set	140
  2081  0091                     _PIE1bits	set	145
  2082  009D                     _ADCON0bits	set	157
  2083  009C                     _ADRESH	set	156
  2084  009B                     _ADRESL	set	155
  2085  009E                     _ADCON1	set	158
  2086  009D                     _ADCON0	set	157
  2087  0097                     _WDTCON	set	151
  2088  0098                     _OSCTUNE	set	152
  2089  0099                     _OSCCON	set	153
  2090  010E                     _LATCbits	set	270
  2091  0117                     _FVRCONbits	set	279
  2092  0117                     _FVRCON	set	279
  2093  011D                     _APFCON0	set	285
  2094  011E                     _APFCON1	set	286
  2095  010E                     _LATC	set	270
  2096  010D                     _LATB	set	269
  2097  010C                     _LATA	set	268
  2098  0116                     _BORCON	set	278
  2099  0191                     _EEADR	set	401
  2100  0196                     _EECON2	set	406
  2101  0193                     _EEDATA	set	403
  2102  0195                     _EECON1	set	405
  2103  018C                     _ANSELA	set	396
  2104  018D                     _ANSELB	set	397
  2105  018E                     _ANSELC	set	398
  2106  0199                     _RCREG	set	409
  2107  019D                     _RCSTAbits	set	413
  2108  019A                     _TXREG	set	410
  2109  019C                     _SPBRGH	set	412
  2110  019B                     _SPBRGL	set	411
  2111  019E                     _TXSTA	set	414
  2112  019D                     _RCSTA	set	413
  2113  019F                     _BAUDCON	set	415
  2114  0CAA                     _WREN	set	3242
  2115  0CA8                     _RD	set	3240
  2116  0CA9                     _WR	set	3241
  2117  0219                     _SSP2BUF	set	537
  2118  021E                     _SSP2CON2bits	set	542
  2119  021D                     _SSP2CON1bits	set	541
  2120  021A                     _SSP2ADD	set	538
  2121  021F                     _SSP2CON3	set	543
  2122  021D                     _SSP2CON1	set	541
  2123  021C                     _SSP2STAT	set	540
  2124  020E                     _WPUC	set	526
  2125  020C                     _WPUA	set	524
  2126  020D                     _WPUB	set	525
  2127  0214                     _SSP1STATbits	set	532
  2128  0211                     _SSP1BUF	set	529
  2129  0215                     _SSP1CON1bits	set	533
  2130  0212                     _SSP1ADD	set	530
  2131  0215                     _SSP1CON1	set	533
  2132  0214                     _SSP1STAT	set	532
  2133                           
  2134                           ; #config settings
  2135  0000                     
  2136                           	psect	cinit
  2137  002E                     start_initialization:	
  2138  002E                     __initialization:	
  2139                           
  2140                           ; Clear objects allocated to BIGRAM
  2141  002E  30E2               	movlw	low (0+8930)
  2142  002F  0084               	movwf	4
  2143  0030  3022               	movlw	high (0+8930)
  2144  0031  0085               	movwf	5
  2145  0032  300E               	movlw	14
  2146  0033  00FE               	movwf	btemp
  2147  0034  3001               	movlw	1
  2148  0035  00FF               	movwf	btemp+1
  2149  0036  318D  2560  3180   	fcall	clear_ram0
  2150                           
  2151                           ; Clear objects allocated to COMMON
  2152  0039  01F0               	clrf	__pbssCOMMON& (0+127)
  2153  003A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2154  003B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2155  003C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2156  003D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2157  003E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2158                           
  2159                           ; Clear objects allocated to BANK0
  2160  003F  0020               	movlb	0	; select bank0
  2161  0040  01D9               	clrf	__pbssBANK0& (0+127)
  2162  0041  01DA               	clrf	(__pbssBANK0+1)& (0+127)
  2163  0042  01DB               	clrf	(__pbssBANK0+2)& (0+127)
  2164  0043  01DC               	clrf	(__pbssBANK0+3)& (0+127)
  2165  0044  01DD               	clrf	(__pbssBANK0+4)& (0+127)
  2166  0045  01DE               	clrf	(__pbssBANK0+5)& (0+127)
  2167  0046  01DF               	clrf	(__pbssBANK0+6)& (0+127)
  2168                           
  2169                           ; Clear objects allocated to BANK1
  2170  0047  30A0               	movlw	low __pbssBANK1
  2171  0048  0084               	movwf	4
  2172  0049  3000               	movlw	high __pbssBANK1
  2173  004A  0085               	movwf	5
  2174  004B  303F               	movlw	63
  2175  004C  00FE               	movwf	btemp
  2176  004D  3000               	movlw	0
  2177  004E  00FF               	movwf	btemp+1
  2178  004F  318D  2560         	fcall	clear_ram0
  2179  0051                     end_of_initialization:	
  2180                           ;End of C runtime variable initialization code
  2181                           
  2182  0051                     __end_of__initialization:	
  2183  0051  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2184  0052  0020               	movlb	0
  2185  0053  3184  2C31         	ljmp	_main	;jump to C main() function
  2186                           
  2187                           	psect	text0
  2188  0000                     __ptext0:		;BIGRAM
  2189                           
  2190                           	psect	bssEEDATA
  2191  0000                     __pbssEEDATA:	
  2192  0000                     _SETTINGS_stgs:	
  2193  0000  0000               	db	0
  2194  0001  0000               	db	0
  2195  0002  0000               	db	0
  2196  0003  0000               	db	0
  2197                           
  2198                           	psect	bssCOMMON
  2199  0070                     __pbssCOMMON:	
  2200  0070                     _p_i2c2_trb_current:	
  2201  0070                     	ds	1
  2202  0071                     _eusartRxCount:	
  2203  0071                     	ds	1
  2204  0072                     _eusartRxTail:	
  2205  0072                     	ds	1
  2206  0073                     _eusartRxHead:	
  2207  0073                     	ds	1
  2208  0074                     I2C2_ISR@i2c_address:	
  2209  0074                     	ds	2
  2210                           
  2211                           	psect	bssBANK0
  2212  0059                     __pbssBANK0:	
  2213  0059                     _PACKET_RxPtr:	
  2214  0059                     	ds	2
  2215  005B                     _PACKET_RxState:	
  2216  005B                     	ds	1
  2217  005C                     I2C2_ISR@i2c_bytes_left:	
  2218  005C                     	ds	1
  2219  005D                     I2C2_ISR@pi2c_buf_ptr:	
  2220  005D                     	ds	1
  2221  005E                     _i2c2_trb_count:	
  2222  005E                     	ds	1
  2223  005F                     _i2c2_state:	
  2224  005F                     	ds	1
  2225                           
  2226                           	psect	bssBANK1
  2227  00A0                     __pbssBANK1:	
  2228  00A0                     _eusartRxBuffer:	
  2229  00A0                     	ds	32
  2230  00C0                     _i2c2_object:	
  2231  00C0                     	ds	5
  2232  00C5                     _PACKET_Len:	
  2233  00C5                     	ds	2
  2234  00C7                     _curr_temp_f:	
  2235  00C7                     	ds	2
  2236  00C9                     _curr_tank_level:	
  2237  00C9                     	ds	2
  2238  00CB                     I2C2_ISR@i2c_10bit_address_restart:	
  2239  00CB                     	ds	1
  2240  00CC                     _p_i2c2_current:	
  2241  00CC                     	ds	1
  2242  00CD                     I2C2_MasterRead@trBlock:	
  2243  00CD                     	ds	5
  2244  00D2                     I2C2_MasterWrite@trBlock:	
  2245  00D2                     	ds	5
  2246  00D7                     _settings:	
  2247  00D7                     	ds	4
  2248  00DB                     _i2c2_tr_queue:	
  2249  00DB                     	ds	4
  2250                           
  2251                           	psect	clrtext
  2252  0D60                     clear_ram0:	
  2253                           ;	Called with FSR0 containing the base address, and
  2254                           ;	btemp/btemp+1 has the size to clear
  2255                           
  2256  0D60  0064               	clrwdt	;clear the watchdog before getting into this loop
  2257  0D61                     clrloop0:	
  2258  0D61  0180               	clrf	0	;clear RAM location pointed to by FSR
  2259  0D62  3101               	addfsr 0,1
  2260  0D63  3001               	movlw	1
  2261  0D64  02FE               	subwf	126,f
  2262  0D65  3000               	movlw	0
  2263  0D66  3BFF               	subwfb	127,f
  2264  0D67  087F               	movf	127,w
  2265  0D68  047E               	iorwf	126,w
  2266  0D69  1903               	btfsc	3,2
  2267  0D6A  3400               	retlw	0	;all done for this memory range, return
  2268  0D6B  2D61               	goto	clrloop0	;have we reached the end yet?
  2269                           
  2270                           	psect	cstackBANK1
  2271  00DF                     __pcstackBANK1:	
  2272  00DF                     main@send_data:	
  2273                           
  2274                           ; 8 bytes @ 0x0
  2275  00DF                     	ds	8
  2276  00E7                     main@temp_f:	
  2277                           
  2278                           ; 2 bytes @ 0x8
  2279  00E7                     	ds	2
  2280  00E9                     main@level_ft:	
  2281                           
  2282                           ; 2 bytes @ 0xA
  2283  00E9                     	ds	2
  2284  00EB                     main@temp:	
  2285                           
  2286                           ; 2 bytes @ 0xC
  2287  00EB                     	ds	2
  2288  00ED                     main@send_data_ptr:	
  2289                           
  2290                           ; 1 bytes @ 0xE
  2291  00ED                     	ds	1
  2292  00EE                     main@level:	
  2293                           
  2294                           ; 2 bytes @ 0xF
  2295  00EE                     	ds	2
  2296                           
  2297                           	psect	cstackCOMMON
  2298  0076                     __pcstackCOMMON:	
  2299  0076                     ?_PIN_MANAGER_Initialize:	
  2300  0076                     ?_OSCILLATOR_Initialize:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0076                     ?_WDT_Initialize:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0076                     ?_SPI1_Initialize:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0076                     ?_I2C2_Initialize:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0076                     ?_FVR_Initialize:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0076                     ?_ADC_Initialize:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0076                     ?_EUSART_Initialize:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0076                     ?_I2C2_BusCollisionISR:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0076                     ??_I2C2_BusCollisionISR:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0076                     ?_I2C2_ISR:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0076                     ?_I2C2_Stop:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0076                     ??_I2C2_Stop:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0076                     ?_I2C2_FunctionComplete:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0076                     ??_I2C2_FunctionComplete:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0076                     ?_EEPROM_load_all_settings:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0076                     ?_PACKET_Initialize:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0076                     ?_PACKET_Available:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0076                     ?_handle_rx_packet:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0076                     ?_EEPROM_store_all_settings:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0076                     ?_PACKET_EUSART_Bytes_Available:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0076                     ?_PACKET_handle_byte:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0076                     ?_SYSTEM_Initialize:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0076                     ?_EUSART_Read:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0076                     ?_EUSART_RxBytesAvailable:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0076                     ?_EUSART_Write:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0076                     ?_EUSART_Receive_ISR:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0076                     ??_EUSART_Receive_ISR:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0076                     ?_INTERRUPT_InterruptManager:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0076                     ?_main:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0076                     I2C2_Stop@completion_code:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390                           
  2391                           ; 1 bytes @ 0x0
  2392  0076                     	ds	1
  2393  0077                     ??_I2C2_ISR:	
  2394                           
  2395                           ; 1 bytes @ 0x1
  2396  0077                     	ds	4
  2397  007B                     ??_INTERRUPT_InterruptManager:	
  2398                           
  2399                           ; 1 bytes @ 0x5
  2400  007B                     	ds	1
  2401                           
  2402                           	psect	cstackBANK0
  2403  0020                     __pcstackBANK0:	
  2404  0020                     ??_PIN_MANAGER_Initialize:	
  2405  0020                     ??_OSCILLATOR_Initialize:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0020                     ??_WDT_Initialize:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0020                     ??_SPI1_Initialize:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0020                     ??_I2C2_Initialize:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0020                     ??_FVR_Initialize:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0020                     ??_ADC_Initialize:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0020                     ??_EUSART_Initialize:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0020                     ??_PACKET_Initialize:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0020                     ?_SETTINGS_write:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0020                     ?_PACKET_calculate_checksum:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0020                     ??_PACKET_EUSART_Bytes_Available:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0020                     ??_EUSART_Read:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0020                     ??_EUSART_RxBytesAvailable:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0020                     ??_EUSART_Write:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0020                     ?_eecpymem:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0020                     ?_memcpyee:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0020                     ?_PACKET_get_rx_packet_ptr:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0020                     ?_SETTINGS_read:	
  2457                           ; 2 bytes @ 0x0
  2458                           
  2459  0020                     ?_ADC_GetConversion:	
  2460                           ; 2 bytes @ 0x0
  2461                           
  2462  0020                     ?___lwdiv:	
  2463                           ; 2 bytes @ 0x0
  2464                           
  2465  0020                     ?___ftpack:	
  2466                           ; 2 bytes @ 0x0
  2467                           
  2468  0020                     EUSART_Write@txData:	
  2469                           ; 3 bytes @ 0x0
  2470                           
  2471  0020                     SETTINGS_write@setting_num:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0020                     SETTINGS_read@setting_num:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0020                     eecpymem@from:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0020                     memcpyee@from:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0020                     PACKET_calculate_checksum@data:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0020                     ___lwdiv@divisor:	
  2487                           ; 2 bytes @ 0x0
  2488                           
  2489  0020                     ___ftpack@arg:	
  2490                           ; 2 bytes @ 0x0
  2491                           
  2492                           
  2493                           ; 3 bytes @ 0x0
  2494  0020                     	ds	1
  2495  0021                     ?_PACKET_SendPacket:	
  2496  0021                     ??_SYSTEM_Initialize:	
  2497                           ; 1 bytes @ 0x1
  2498                           
  2499  0021                     EUSART_Read@readValue:	
  2500                           ; 1 bytes @ 0x1
  2501                           
  2502  0021                     eecpymem@size:	
  2503                           ; 1 bytes @ 0x1
  2504                           
  2505  0021                     memcpyee@size:	
  2506                           ; 1 bytes @ 0x1
  2507                           
  2508  0021                     PACKET_SendPacket@pkt:	
  2509                           ; 1 bytes @ 0x1
  2510                           
  2511  0021                     SETTINGS_write@setting_val:	
  2512                           ; 2 bytes @ 0x1
  2513                           
  2514                           
  2515                           ; 2 bytes @ 0x1
  2516  0021                     	ds	1
  2517  0022                     ??_PACKET_get_rx_packet_ptr:	
  2518  0022                     ??_SETTINGS_read:	
  2519                           ; 1 bytes @ 0x2
  2520                           
  2521  0022                     ??_ADC_GetConversion:	
  2522                           ; 1 bytes @ 0x2
  2523                           
  2524  0022                     ??_eecpymem:	
  2525                           ; 1 bytes @ 0x2
  2526                           
  2527  0022                     ??_memcpyee:	
  2528                           ; 1 bytes @ 0x2
  2529                           
  2530  0022                     PACKET_calculate_checksum@data_len:	
  2531                           ; 1 bytes @ 0x2
  2532                           
  2533  0022                     ___lwdiv@dividend:	
  2534                           ; 2 bytes @ 0x2
  2535                           
  2536                           
  2537                           ; 2 bytes @ 0x2
  2538  0022                     	ds	1
  2539  0023                     ??_PACKET_SendPacket:	
  2540  0023                     ??_SETTINGS_write:	
  2541                           ; 1 bytes @ 0x3
  2542                           
  2543  0023                     ADC_GetConversion@channel:	
  2544                           ; 1 bytes @ 0x3
  2545                           
  2546  0023                     SETTINGS_read@stgs:	
  2547                           ; 1 bytes @ 0x3
  2548                           
  2549  0023                     ___ftpack@exp:	
  2550                           ; 1 bytes @ 0x3
  2551                           
  2552                           
  2553                           ; 1 bytes @ 0x3
  2554  0023                     	ds	1
  2555  0024                     ??_PACKET_calculate_checksum:	
  2556  0024                     ??___lwdiv:	
  2557                           ; 1 bytes @ 0x4
  2558                           
  2559  0024                     SETTINGS_write@stgs:	
  2560                           ; 1 bytes @ 0x4
  2561                           
  2562  0024                     eecpymem@cp:	
  2563                           ; 1 bytes @ 0x4
  2564                           
  2565  0024                     memcpyee@ptr:	
  2566                           ; 1 bytes @ 0x4
  2567                           
  2568  0024                     ___ftpack@sign:	
  2569                           ; 1 bytes @ 0x4
  2570                           
  2571                           
  2572                           ; 1 bytes @ 0x4
  2573  0024                     	ds	1
  2574  0025                     ??___ftpack:	
  2575  0025                     PACKET_calculate_checksum@checksum:	
  2576                           ; 1 bytes @ 0x5
  2577                           
  2578  0025                     eecpymem@to:	
  2579                           ; 1 bytes @ 0x5
  2580                           
  2581  0025                     memcpyee@to:	
  2582                           ; 1 bytes @ 0x5
  2583                           
  2584  0025                     ___lwdiv@counter:	
  2585                           ; 1 bytes @ 0x5
  2586                           
  2587                           
  2588                           ; 1 bytes @ 0x5
  2589  0025                     	ds	1
  2590  0026                     ?___eetoi:	
  2591  0026                     ?___itoee:	
  2592                           ; 2 bytes @ 0x6
  2593                           
  2594  0026                     PACKET_calculate_checksum@i:	
  2595                           ; 2 bytes @ 0x6
  2596                           
  2597  0026                     ___itoee@data:	
  2598                           ; 2 bytes @ 0x6
  2599                           
  2600  0026                     ___lwdiv@quotient:	
  2601                           ; 2 bytes @ 0x6
  2602                           
  2603                           
  2604                           ; 2 bytes @ 0x6
  2605  0026                     	ds	1
  2606  0027                     PACKET_SendPacket@i:	
  2607                           
  2608                           ; 2 bytes @ 0x7
  2609  0027                     	ds	1
  2610  0028                     ??_PACKET_handle_byte:	
  2611  0028                     ??___eetoi:	
  2612                           ; 1 bytes @ 0x8
  2613                           
  2614  0028                     ??___itoee:	
  2615                           ; 1 bytes @ 0x8
  2616                           
  2617  0028                     ?___lwtoft:	
  2618                           ; 1 bytes @ 0x8
  2619                           
  2620  0028                     ___lwtoft@c:	
  2621                           ; 3 bytes @ 0x8
  2622                           
  2623                           
  2624                           ; 2 bytes @ 0x8
  2625  0028                     	ds	1
  2626  0029                     ?_PACKET_UpdateAndSend:	
  2627  0029                     PACKET_UpdateAndSend@pkt:	
  2628                           ; 1 bytes @ 0x9
  2629                           
  2630                           
  2631                           ; 2 bytes @ 0x9
  2632  0029                     	ds	1
  2633  002A                     ___eetoi@addr:	
  2634  002A                     ___itoee@addr:	
  2635                           ; 1 bytes @ 0xA
  2636                           
  2637                           
  2638                           ; 1 bytes @ 0xA
  2639  002A                     	ds	1
  2640  002B                     ??_PACKET_UpdateAndSend:	
  2641  002B                     ??_EEPROM_store_all_settings:	
  2642                           ; 1 bytes @ 0xB
  2643                           
  2644  002B                     ?_EEPROM_store_setting:	
  2645                           ; 1 bytes @ 0xB
  2646                           
  2647  002B                     ??___lwtoft:	
  2648                           ; 1 bytes @ 0xB
  2649                           
  2650  002B                     EEPROM_store_setting@num:	
  2651                           ; 1 bytes @ 0xB
  2652                           
  2653  002B                     ___eetoi@data:	
  2654                           ; 1 bytes @ 0xB
  2655                           
  2656                           
  2657                           ; 2 bytes @ 0xB
  2658  002B                     	ds	1
  2659  002C                     ??_EEPROM_store_setting:	
  2660  002C                     ?___ftmul:	
  2661                           ; 1 bytes @ 0xC
  2662                           
  2663  002C                     EEPROM_store_all_settings@s:	
  2664                           ; 3 bytes @ 0xC
  2665                           
  2666  002C                     ___ftmul@f1:	
  2667                           ; 1 bytes @ 0xC
  2668                           
  2669                           
  2670                           ; 3 bytes @ 0xC
  2671  002C                     	ds	1
  2672  002D                     ??_EEPROM_load_all_settings:	
  2673  002D                     ?_EEPROM_load_setting:	
  2674                           ; 1 bytes @ 0xD
  2675                           
  2676  002D                     EEPROM_load_setting@num:	
  2677                           ; 1 bytes @ 0xD
  2678                           
  2679  002D                     EEPROM_store_all_settings@i:	
  2680                           ; 1 bytes @ 0xD
  2681                           
  2682  002D                     EEPROM_store_setting@s:	
  2683                           ; 1 bytes @ 0xD
  2684                           
  2685                           
  2686                           ; 1 bytes @ 0xD
  2687  002D                     	ds	1
  2688  002E                     ??_EEPROM_load_setting:	
  2689  002E                     EEPROM_load_all_settings@s:	
  2690                           ; 1 bytes @ 0xE
  2691                           
  2692                           
  2693                           ; 1 bytes @ 0xE
  2694  002E                     	ds	1
  2695  002F                     EEPROM_load_all_settings@i:	
  2696  002F                     EEPROM_load_setting@s:	
  2697                           ; 1 bytes @ 0xF
  2698                           
  2699  002F                     PACKET_handle_byte@len:	
  2700                           ; 1 bytes @ 0xF
  2701                           
  2702  002F                     ___ftmul@f2:	
  2703                           ; 2 bytes @ 0xF
  2704                           
  2705                           
  2706                           ; 3 bytes @ 0xF
  2707  002F                     	ds	1
  2708  0030                     ??_handle_rx_packet:	
  2709                           
  2710                           ; 1 bytes @ 0x10
  2711  0030                     	ds	1
  2712  0031                     PACKET_handle_byte@cksm:	
  2713                           
  2714                           ; 1 bytes @ 0x11
  2715  0031                     	ds	1
  2716  0032                     ??___ftmul:	
  2717  0032                     PACKET_handle_byte@i:	
  2718                           ; 1 bytes @ 0x12
  2719                           
  2720                           
  2721                           ; 2 bytes @ 0x12
  2722  0032                     	ds	1
  2723  0033                     handle_rx_packet@stgs_pld_p:	
  2724                           
  2725                           ; 2 bytes @ 0x13
  2726  0033                     	ds	1
  2727  0034                     PACKET_handle_byte@data_byte:	
  2728                           
  2729                           ; 1 bytes @ 0x14
  2730  0034                     	ds	1
  2731  0035                     ??_PACKET_Available:	
  2732  0035                     handle_rx_packet@pkt_p:	
  2733                           ; 1 bytes @ 0x15
  2734                           
  2735                           
  2736                           ; 2 bytes @ 0x15
  2737  0035                     	ds	1
  2738  0036                     PACKET_Available@b:	
  2739  0036                     ___ftmul@exp:	
  2740                           ; 1 bytes @ 0x16
  2741                           
  2742                           
  2743                           ; 1 bytes @ 0x16
  2744  0036                     	ds	1
  2745  0037                     ___ftmul@f3_as_product:	
  2746                           
  2747                           ; 3 bytes @ 0x17
  2748  0037                     	ds	3
  2749  003A                     ___ftmul@cntr:	
  2750                           
  2751                           ; 1 bytes @ 0x1A
  2752  003A                     	ds	1
  2753  003B                     ___ftmul@sign:	
  2754                           
  2755                           ; 1 bytes @ 0x1B
  2756  003B                     	ds	1
  2757  003C                     ?___ftadd:	
  2758  003C                     ___ftadd@f1:	
  2759                           ; 3 bytes @ 0x1C
  2760                           
  2761                           
  2762                           ; 3 bytes @ 0x1C
  2763  003C                     	ds	3
  2764  003F                     ___ftadd@f2:	
  2765                           
  2766                           ; 3 bytes @ 0x1F
  2767  003F                     	ds	3
  2768  0042                     ??___ftadd:	
  2769                           
  2770                           ; 1 bytes @ 0x22
  2771  0042                     	ds	4
  2772  0046                     ___ftadd@sign:	
  2773                           
  2774                           ; 1 bytes @ 0x26
  2775  0046                     	ds	1
  2776  0047                     ___ftadd@exp2:	
  2777                           
  2778                           ; 1 bytes @ 0x27
  2779  0047                     	ds	1
  2780  0048                     ___ftadd@exp1:	
  2781                           
  2782                           ; 1 bytes @ 0x28
  2783  0048                     	ds	1
  2784  0049                     ?___fttol:	
  2785  0049                     ___fttol@f1:	
  2786                           ; 4 bytes @ 0x29
  2787                           
  2788                           
  2789                           ; 3 bytes @ 0x29
  2790  0049                     	ds	4
  2791  004D                     ??___fttol:	
  2792                           
  2793                           ; 1 bytes @ 0x2D
  2794  004D                     	ds	4
  2795  0051                     ___fttol@sign1:	
  2796                           
  2797                           ; 1 bytes @ 0x31
  2798  0051                     	ds	1
  2799  0052                     ___fttol@lval:	
  2800                           
  2801                           ; 4 bytes @ 0x32
  2802  0052                     	ds	4
  2803  0056                     ___fttol@exp1:	
  2804                           
  2805                           ; 1 bytes @ 0x36
  2806  0056                     	ds	1
  2807  0057                     ??_main:	
  2808                           
  2809                           ; 1 bytes @ 0x37
  2810  0057                     	ds	2
  2811                           
  2812                           	psect	maintext
  2813  0431                     __pmaintext:	
  2814 ;;
  2815 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2816 ;;
  2817 ;; *************** function _main *****************
  2818 ;; Defined at:
  2819 ;;		line 61 in file "main.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  send_packet    32    0        unsigned char [32]
  2824 ;;  send_data       8    0[BANK1 ] unsigned char [8]
  2825 ;;  level           2   15[BANK1 ] unsigned int 
  2826 ;;  temp            2   12[BANK1 ] unsigned int 
  2827 ;;  level_ft        2   10[BANK1 ] unsigned int 
  2828 ;;  temp_f          2    8[BANK1 ] unsigned int 
  2829 ;;  i               2    0        unsigned int 
  2830 ;;  send_packet_    2    0        unsigned int 
  2831 ;;  send_packet_    2    0        PTR unsigned char 
  2832 ;;  send_data_pt    1   14[BANK1 ] PTR unsigned char 
  2833 ;;		 -> main@send_data(8), 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : B1F/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:       19 bytes
  2848 ;; Hardware stack levels required when called:    7
  2849 ;; This function calls:
  2850 ;;		_ADC_GetConversion
  2851 ;;		_EEPROM_load_all_settings
  2852 ;;		_PACKET_Available
  2853 ;;		_PACKET_Initialize
  2854 ;;		_SYSTEM_Initialize
  2855 ;;		___ftadd
  2856 ;;		___ftmul
  2857 ;;		___fttol
  2858 ;;		___lwdiv
  2859 ;;		___lwtoft
  2860 ;;		_handle_rx_packet
  2861 ;; This function is called by:
  2862 ;;		Startup code after reset
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           
  2867                           ;psect for function _main
  2868  0431                     _main:	
  2869                           
  2870                           ;main.c: 63: uint16_t temp, temp_f, level, level_ft;
  2871                           ;main.c: 64: uint8_t send_data[8], *send_data_ptr;
  2872                           ;main.c: 65: uint8_t send_packet[32], *send_packet_ptr;
  2873                           ;main.c: 66: uint16_t send_packet_len;
  2874                           ;main.c: 67: uint16_t i;
  2875                           ;main.c: 71: EEPROM_load_all_settings(&settings);
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2879  0431  30D7               	movlw	(low (_settings| 0))& (0+255)
  2880  0432  318E  2663  3184   	fcall	_EEPROM_load_all_settings
  2881                           
  2882                           ;main.c: 74: SYSTEM_Initialize();
  2883  0435  318E  2615  3184   	fcall	_SYSTEM_Initialize
  2884                           
  2885                           ;main.c: 76: PACKET_Initialize();
  2886  0438  318D  2532  3184   	fcall	_PACKET_Initialize
  2887                           
  2888                           ;main.c: 83: (INTCONbits.GIE = 1);
  2889  043B  178B               	bsf	11,7	;volatile
  2890                           
  2891                           ;main.c: 86: (INTCONbits.PEIE = 1);
  2892  043C  170B               	bsf	11,6	;volatile
  2893  043D                     l3827:	
  2894                           ;main.c: 94: while (1)
  2895                           
  2896                           
  2897                           ;main.c: 95: {
  2898                           ;main.c: 97: temp = ADC_GetConversion(V_Temp);
  2899  043D  3002               	movlw	2
  2900  043E  318E  26D6  3184   	fcall	_ADC_GetConversion
  2901  0441  0020               	movlb	0	; select bank0
  2902  0442  0821               	movf	?_ADC_GetConversion+1,w
  2903  0443  0021               	movlb	1	; select bank1
  2904  0444  00EC               	movwf	(main@temp+1)^(0+128)
  2905  0445  0020               	movlb	0	; select bank0
  2906  0446  0820               	movf	?_ADC_GetConversion,w
  2907  0447  0021               	movlb	1	; select bank1
  2908  0448  00EB               	movwf	main@temp^(0+128)
  2909                           
  2910                           ;main.c: 100: temp = temp * 2;
  2911  0449  356B               	lslf	main@temp^(0+128),w
  2912  044A  00EB               	movwf	main@temp^(0+128)
  2913  044B  0D6C               	rlf	(main@temp+1)^(0+128),w
  2914  044C  00EC               	movwf	(main@temp+1)^(0+128)
  2915                           
  2916                           ;main.c: 103: temp = (temp - 500) / 10;
  2917  044D  300A               	movlw	10
  2918  044E  0020               	movlb	0	; select bank0
  2919  044F  00A0               	movwf	___lwdiv@divisor
  2920  0450  3000               	movlw	0
  2921  0451  00A1               	movwf	___lwdiv@divisor+1
  2922  0452  0021               	movlb	1	; select bank1
  2923  0453  086B               	movf	main@temp^(0+128),w
  2924  0454  3E0C               	addlw	12
  2925  0455  0020               	movlb	0	; select bank0
  2926  0456  00A2               	movwf	___lwdiv@dividend
  2927  0457  30FE               	movlw	254
  2928  0458  0021               	movlb	1	; select bank1
  2929  0459  3D6C               	addwfc	(main@temp+1)^(0+128),w
  2930  045A  0020               	movlb	0	; select bank0
  2931  045B  00A3               	movwf	___lwdiv@dividend+1
  2932  045C  318F  274B  3184   	fcall	___lwdiv
  2933  045F  0020               	movlb	0	; select bank0
  2934  0460  0821               	movf	?___lwdiv+1,w
  2935  0461  0021               	movlb	1	; select bank1
  2936  0462  00EC               	movwf	(main@temp+1)^(0+128)
  2937  0463  0020               	movlb	0	; select bank0
  2938  0464  0820               	movf	?___lwdiv,w
  2939  0465  0021               	movlb	1	; select bank1
  2940  0466  00EB               	movwf	main@temp^(0+128)
  2941                           
  2942                           ;main.c: 106: temp_f = (uint16_t) (temp * (9.0 / 5.0) + 32);
  2943  0467  086C               	movf	(main@temp+1)^(0+128),w
  2944  0468  0020               	movlb	0	; select bank0
  2945  0469  00A9               	movwf	___lwtoft@c+1
  2946  046A  0021               	movlb	1	; select bank1
  2947  046B  086B               	movf	main@temp^(0+128),w
  2948  046C  0020               	movlb	0	; select bank0
  2949  046D  00A8               	movwf	___lwtoft@c
  2950  046E  318E  2600  3184   	fcall	___lwtoft
  2951  0471  0020               	movlb	0	; select bank0
  2952  0472  0828               	movf	?___lwtoft,w
  2953  0473  00AF               	movwf	___ftmul@f2
  2954  0474  0829               	movf	?___lwtoft+1,w
  2955  0475  00B0               	movwf	___ftmul@f2+1
  2956  0476  082A               	movf	?___lwtoft+2,w
  2957  0477  00B1               	movwf	___ftmul@f2+2
  2958  0478  3066               	movlw	102
  2959  0479  00AC               	movwf	___ftmul@f1
  2960  047A  30E6               	movlw	230
  2961  047B  00AD               	movwf	___ftmul@f1+1
  2962  047C  303F               	movlw	63
  2963  047D  00AE               	movwf	___ftmul@f1+2
  2964  047E  3186  263B  3184   	fcall	___ftmul
  2965  0481  0020               	movlb	0	; select bank0
  2966  0482  082C               	movf	?___ftmul,w
  2967  0483  00BF               	movwf	___ftadd@f2
  2968  0484  082D               	movf	?___ftmul+1,w
  2969  0485  00C0               	movwf	___ftadd@f2+1
  2970  0486  082E               	movf	?___ftmul+2,w
  2971  0487  00C1               	movwf	___ftadd@f2+2
  2972  0488  3000               	movlw	0
  2973  0489  00BC               	movwf	___ftadd@f1
  2974  048A  3000               	movlw	0
  2975  048B  00BD               	movwf	___ftadd@f1+1
  2976  048C  3042               	movlw	66
  2977  048D  00BE               	movwf	___ftadd@f1+2
  2978  048E  3185  2545  3184   	fcall	___ftadd
  2979  0491  0020               	movlb	0	; select bank0
  2980  0492  083C               	movf	?___ftadd,w
  2981  0493  00C9               	movwf	___fttol@f1
  2982  0494  083D               	movf	?___ftadd+1,w
  2983  0495  00CA               	movwf	___fttol@f1+1
  2984  0496  083E               	movf	?___ftadd+2,w
  2985  0497  00CB               	movwf	___fttol@f1+2
  2986  0498  3186  26EF  3184   	fcall	___fttol
  2987  049B  0020               	movlb	0	; select bank0
  2988  049C  084A               	movf	?___fttol+1,w
  2989  049D  0021               	movlb	1	; select bank1
  2990  049E  00E8               	movwf	(main@temp_f+1)^(0+128)
  2991  049F  0020               	movlb	0	; select bank0
  2992  04A0  0849               	movf	?___fttol,w
  2993  04A1  0021               	movlb	1	; select bank1
  2994  04A2  00E7               	movwf	main@temp_f^(0+128)
  2995                           
  2996                           ;main.c: 108: curr_temp_f = temp_f;
  2997  04A3  0868               	movf	(main@temp_f+1)^(0+128),w
  2998  04A4  00C8               	movwf	(_curr_temp_f+1)^(0+128)
  2999  04A5  0867               	movf	main@temp_f^(0+128),w
  3000  04A6  00C7               	movwf	_curr_temp_f^(0+128)
  3001                           
  3002                           ;main.c: 113: level = ADC_GetConversion(V_TankLevel);
  3003  04A7  3003               	movlw	3
  3004  04A8  318E  26D6  3184   	fcall	_ADC_GetConversion
  3005  04AB  0020               	movlb	0	; select bank0
  3006  04AC  0821               	movf	?_ADC_GetConversion+1,w
  3007  04AD  0021               	movlb	1	; select bank1
  3008  04AE  00EF               	movwf	(main@level+1)^(0+128)
  3009  04AF  0020               	movlb	0	; select bank0
  3010  04B0  0820               	movf	?_ADC_GetConversion,w
  3011  04B1  0021               	movlb	1	; select bank1
  3012  04B2  00EE               	movwf	main@level^(0+128)
  3013                           
  3014                           ;main.c: 116: level = level * 2;
  3015  04B3  356E               	lslf	main@level^(0+128),w
  3016  04B4  00EE               	movwf	main@level^(0+128)
  3017  04B5  0D6F               	rlf	(main@level+1)^(0+128),w
  3018  04B6  00EF               	movwf	(main@level+1)^(0+128)
  3019                           
  3020                           ;main.c: 119: if (level < 200) {level = 200;}
  3021  04B7  3000               	movlw	0
  3022  04B8  026F               	subwf	(main@level+1)^(0+128),w
  3023  04B9  30C8               	movlw	200
  3024  04BA  1903               	skipnz
  3025  04BB  026E               	subwf	main@level^(0+128),w
  3026  04BC  1803               	skipnc
  3027  04BD  2CC2               	goto	l438
  3028  04BE  30C8               	movlw	200
  3029  04BF  00EE               	movwf	main@level^(0+128)
  3030  04C0  3000               	movlw	0
  3031  04C1  00EF               	movwf	(main@level^(0+128)+1)
  3032  04C2                     l438:	
  3033                           
  3034                           ;main.c: 120: if (level < settings.tank_pump_turn_on_level)
  3035  04C2  0858               	movf	(_settings+1)^(0+128),w
  3036  04C3  026F               	subwf	(main@level+1)^(0+128),w
  3037  04C4  1D03               	skipz
  3038  04C5  2CC8               	goto	u4245
  3039  04C6  0857               	movf	_settings^(0+128),w
  3040  04C7  026E               	subwf	main@level^(0+128),w
  3041  04C8                     u4245:	
  3042  04C8  1803               	skipnc
  3043  04C9  2CCD               	goto	l3845
  3044                           
  3045                           ;main.c: 121: {
  3046                           ;main.c: 123: do { LATCbits.LATC3 = 1; } while(0);
  3047  04CA  0022               	movlb	2	; select bank2
  3048  04CB  158E               	bsf	14,3	;volatile
  3049                           
  3050                           ;main.c: 124: }
  3051  04CC  2CD8               	goto	l3847
  3052  04CD                     l3845:	
  3053                           
  3054                           ;main.c: 125: else if (level > settings.tank_pump_turn_off_level)
  3055  04CD  0021               	movlb	1	; select bank1
  3056  04CE  086F               	movf	(main@level+1)^(0+128),w
  3057  04CF  025A               	subwf	((_settings+1)^(0+128)+2),w
  3058  04D0  1D03               	skipz
  3059  04D1  2CD4               	goto	u4255
  3060  04D2  086E               	movf	main@level^(0+128),w
  3061  04D3  0259               	subwf	(_settings^(0+128)+2),w
  3062  04D4                     u4255:	
  3063  04D4  1803               	skipnc
  3064  04D5  2CD8               	goto	l3847
  3065                           
  3066                           ;main.c: 126: {
  3067                           ;main.c: 127: do { LATCbits.LATC3 = 0; } while(0);
  3068  04D6  0022               	movlb	2	; select bank2
  3069  04D7  118E               	bcf	14,3	;volatile
  3070  04D8                     l3847:	
  3071                           
  3072                           ;main.c: 128: }
  3073                           ;main.c: 131: level_ft = ((level) - 200) / 45 * 4;
  3074  04D8  302D               	movlw	45
  3075  04D9  0020               	movlb	0	; select bank0
  3076  04DA  00A0               	movwf	___lwdiv@divisor
  3077  04DB  3000               	movlw	0
  3078  04DC  00A1               	movwf	___lwdiv@divisor+1
  3079  04DD  0021               	movlb	1	; select bank1
  3080  04DE  086E               	movf	main@level^(0+128),w
  3081  04DF  3E38               	addlw	56
  3082  04E0  0020               	movlb	0	; select bank0
  3083  04E1  00A2               	movwf	___lwdiv@dividend
  3084  04E2  30FF               	movlw	255
  3085  04E3  0021               	movlb	1	; select bank1
  3086  04E4  3D6F               	addwfc	(main@level+1)^(0+128),w
  3087  04E5  0020               	movlb	0	; select bank0
  3088  04E6  00A3               	movwf	___lwdiv@dividend+1
  3089  04E7  318F  274B  3184   	fcall	___lwdiv
  3090  04EA  0020               	movlb	0	; select bank0
  3091  04EB  0820               	movf	?___lwdiv,w
  3092  04EC  00D7               	movwf	??_main
  3093  04ED  0821               	movf	?___lwdiv+1,w
  3094  04EE  00D8               	movwf	??_main+1
  3095  04EF  35D7               	lslf	??_main,f
  3096  04F0  0DD8               	rlf	??_main+1,f
  3097  04F1  35D7               	lslf	??_main,f
  3098  04F2  0DD8               	rlf	??_main+1,f
  3099  04F3  0857               	movf	??_main,w
  3100  04F4  0021               	movlb	1	; select bank1
  3101  04F5  00E9               	movwf	main@level_ft^(0+128)
  3102  04F6  0020               	movlb	0	; select bank0
  3103  04F7  0858               	movf	??_main+1,w
  3104  04F8  0021               	movlb	1	; select bank1
  3105  04F9  00EA               	movwf	(main@level_ft+1)^(0+128)
  3106                           
  3107                           ;main.c: 132: curr_tank_level = level_ft;
  3108  04FA  086A               	movf	(main@level_ft+1)^(0+128),w
  3109  04FB  00CA               	movwf	(_curr_tank_level+1)^(0+128)
  3110  04FC  0869               	movf	main@level_ft^(0+128),w
  3111  04FD  00C9               	movwf	_curr_tank_level^(0+128)
  3112                           
  3113                           ;main.c: 138: send_data_ptr = send_data;
  3114  04FE  30DF               	movlw	(low (main@send_data| 0))& (0+255)
  3115  04FF  0020               	movlb	0	; select bank0
  3116  0500  00D7               	movwf	??_main
  3117  0501  0857               	movf	??_main,w
  3118  0502  0021               	movlb	1	; select bank1
  3119  0503  00ED               	movwf	main@send_data_ptr^(0+128)
  3120                           
  3121                           ;main.c: 139: *send_data_ptr = (temp_f >> 8) & 0xFF;
  3122  0504  0868               	movf	(main@temp_f+1)^(0+128),w
  3123  0505  0020               	movlb	0	; select bank0
  3124  0506  00D7               	movwf	??_main
  3125  0507  0021               	movlb	1	; select bank1
  3126  0508  086D               	movf	main@send_data_ptr^(0+128),w
  3127  0509  0086               	movwf	6
  3128  050A  0187               	clrf	7
  3129  050B  0020               	movlb	0	; select bank0
  3130  050C  0857               	movf	??_main,w
  3131  050D  0081               	movwf	1
  3132                           
  3133                           ;main.c: 140: send_data_ptr++;
  3134  050E  3001               	movlw	1
  3135  050F  00D7               	movwf	??_main
  3136  0510  0857               	movf	??_main,w
  3137  0511  0021               	movlb	1	; select bank1
  3138  0512  07ED               	addwf	main@send_data_ptr^(0+128),f
  3139                           
  3140                           ;main.c: 141: *send_data_ptr = temp_f & 0xFF;
  3141  0513  0867               	movf	main@temp_f^(0+128),w
  3142  0514  0020               	movlb	0	; select bank0
  3143  0515  00D7               	movwf	??_main
  3144  0516  0021               	movlb	1	; select bank1
  3145  0517  086D               	movf	main@send_data_ptr^(0+128),w
  3146  0518  0086               	movwf	6
  3147  0519  0187               	clrf	7
  3148  051A  0020               	movlb	0	; select bank0
  3149  051B  0857               	movf	??_main,w
  3150  051C  0081               	movwf	1
  3151                           
  3152                           ;main.c: 149: send_data_ptr = send_data;
  3153  051D  30DF               	movlw	(low (main@send_data| 0))& (0+255)
  3154  051E  00D7               	movwf	??_main
  3155  051F  0857               	movf	??_main,w
  3156  0520  0021               	movlb	1	; select bank1
  3157  0521  00ED               	movwf	main@send_data_ptr^(0+128)
  3158                           
  3159                           ;main.c: 150: *send_data_ptr = (level_ft >> 8) & 0xFF;
  3160  0522  086A               	movf	(main@level_ft+1)^(0+128),w
  3161  0523  0020               	movlb	0	; select bank0
  3162  0524  00D7               	movwf	??_main
  3163  0525  0021               	movlb	1	; select bank1
  3164  0526  086D               	movf	main@send_data_ptr^(0+128),w
  3165  0527  0086               	movwf	6
  3166  0528  0187               	clrf	7
  3167  0529  0020               	movlb	0	; select bank0
  3168  052A  0857               	movf	??_main,w
  3169  052B  0081               	movwf	1
  3170                           
  3171                           ;main.c: 151: send_data_ptr++;
  3172  052C  3001               	movlw	1
  3173  052D  00D7               	movwf	??_main
  3174  052E  0857               	movf	??_main,w
  3175  052F  0021               	movlb	1	; select bank1
  3176  0530  07ED               	addwf	main@send_data_ptr^(0+128),f
  3177                           
  3178                           ;main.c: 152: *send_data_ptr = level_ft & 0xFF;
  3179  0531  0869               	movf	main@level_ft^(0+128),w
  3180  0532  0020               	movlb	0	; select bank0
  3181  0533  00D7               	movwf	??_main
  3182  0534  0021               	movlb	1	; select bank1
  3183  0535  086D               	movf	main@send_data_ptr^(0+128),w
  3184  0536  0086               	movwf	6
  3185  0537  0187               	clrf	7
  3186  0538  0020               	movlb	0	; select bank0
  3187  0539  0857               	movf	??_main,w
  3188  053A  0081               	movwf	1
  3189                           
  3190                           ;main.c: 161: if (PACKET_Available())
  3191  053B  318D  25DA  3184   	fcall	_PACKET_Available
  3192  053E  3A00               	xorlw	0
  3193  053F  1903               	skipnz
  3194  0540  2C3D               	goto	l3827
  3195                           
  3196                           ;main.c: 165: handle_rx_packet();
  3197                           
  3198                           ;main.c: 162: {
  3199                           ;main.c: 164: do {} while (0);
  3200  0541  3180  2055  3184   	fcall	_handle_rx_packet
  3201  0544  2C3D               	goto	l3827
  3202  0545                     __end_of_main:	
  3203                           
  3204                           	psect	text1
  3205  0055                     __ptext1:	
  3206 ;; *************** function _handle_rx_packet *****************
  3207 ;; Defined at:
  3208 ;;		line 184 in file "main.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  pkt_p           2   21[BANK0 ] PTR struct .
  3213 ;;		 -> PACKET_pkt(135), 
  3214 ;;  stgs_pld_p      2   19[BANK0 ] PTR struct .
  3215 ;;		 -> PACKET_pkt...stgs_payload(4), handle_rx_packet@pkt_p..(128), 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3228 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3229 ;;Total ram usage:        7 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    6
  3232 ;; This function calls:
  3233 ;;		_EEPROM_load_all_settings
  3234 ;;		_EEPROM_load_setting
  3235 ;;		_EEPROM_store_all_settings
  3236 ;;		_EEPROM_store_setting
  3237 ;;		_PACKET_SendPacket
  3238 ;;		_PACKET_UpdateAndSend
  3239 ;;		_PACKET_get_rx_packet_ptr
  3240 ;;		_SETTINGS_read
  3241 ;;		_SETTINGS_write
  3242 ;; This function is called by:
  3243 ;;		_main
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           
  3248                           ;psect for function _handle_rx_packet
  3249  0055                     _handle_rx_packet:	
  3250                           
  3251                           ;main.c: 186: PACKET_pkt_t *pkt_p;
  3252                           ;main.c: 188: SETTINGS_payload_t *stgs_pld_p;
  3253                           ;main.c: 190: pkt_p = PACKET_get_rx_packet_ptr();
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _handle_rx_packet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3257  0055  318D  2543  3180   	fcall	_PACKET_get_rx_packet_ptr
  3258  0058  0020               	movlb	0	; select bank0
  3259  0059  0821               	movf	?_PACKET_get_rx_packet_ptr+1,w
  3260  005A  00B6               	movwf	handle_rx_packet@pkt_p+1
  3261  005B  0820               	movf	?_PACKET_get_rx_packet_ptr,w
  3262  005C  00B5               	movwf	handle_rx_packet@pkt_p
  3263                           
  3264                           ;main.c: 192: if (pkt_p->payload_type == 0x00)
  3265  005D  0835               	movf	handle_rx_packet@pkt_p,w
  3266  005E  0086               	movwf	6
  3267  005F  0836               	movf	handle_rx_packet@pkt_p+1,w
  3268  0060  0087               	movwf	7
  3269  0061  3141               	addfsr 1,1
  3270  0062  0801               	movf	1,w
  3271  0063  1D03               	btfss	3,2
  3272  0064  286C               	goto	l3567
  3273                           
  3274                           ;main.c: 193: {
  3275                           ;main.c: 194: PACKET_SendPacket(pkt_p);
  3276  0065  0836               	movf	handle_rx_packet@pkt_p+1,w
  3277  0066  00A2               	movwf	PACKET_SendPacket@pkt+1
  3278  0067  0835               	movf	handle_rx_packet@pkt_p,w
  3279  0068  00A1               	movwf	PACKET_SendPacket@pkt
  3280  0069  318E  26F5         	fcall	_PACKET_SendPacket
  3281                           
  3282                           ;main.c: 195: }
  3283  006B  0008               	return
  3284  006C                     l3567:	
  3285                           
  3286                           ;main.c: 196: else if (pkt_p->payload_type == 0x01)
  3287  006C  0020               	movlb	0	; select bank0
  3288  006D  0835               	movf	handle_rx_packet@pkt_p,w
  3289  006E  0086               	movwf	6
  3290  006F  0836               	movf	handle_rx_packet@pkt_p+1,w
  3291  0070  0087               	movwf	7
  3292  0071  3141               	addfsr 1,1
  3293  0072  0301               	decf	1,w
  3294  0073  1D03               	btfss	3,2
  3295  0074  2950               	goto	l3603
  3296                           
  3297                           ;main.c: 197: {
  3298                           ;main.c: 198: if (pkt_p->payload_len < 4)
  3299  0075  0835               	movf	handle_rx_packet@pkt_p,w
  3300  0076  0086               	movwf	6
  3301  0077  0836               	movf	handle_rx_packet@pkt_p+1,w
  3302  0078  0087               	movwf	7
  3303  0079  3142               	addfsr 1,2
  3304  007A  3F40               	moviw [0]fsr1
  3305  007B  00B0               	movwf	??_handle_rx_packet
  3306  007C  3F41               	moviw [1]fsr1
  3307  007D  00B1               	movwf	??_handle_rx_packet+1
  3308  007E  3000               	movlw	0
  3309  007F  0231               	subwf	??_handle_rx_packet+1,w
  3310  0080  3004               	movlw	4
  3311  0081  1903               	skipnz
  3312  0082  0230               	subwf	??_handle_rx_packet,w
  3313  0083  1C03               	btfss	3,0
  3314  0084  0008               	return
  3315                           
  3316                           ;main.c: 202: }
  3317                           ;main.c: 204: stgs_pld_p = &(pkt_p->stgs_payload);
  3318                           
  3319                           ;main.c: 199: {
  3320                           ;main.c: 201: return;
  3321  0085  0835               	movf	handle_rx_packet@pkt_p,w
  3322  0086  3E05               	addlw	5
  3323  0087  00B0               	movwf	??_handle_rx_packet
  3324  0088  3000               	movlw	0
  3325  0089  3D36               	addwfc	handle_rx_packet@pkt_p+1,w
  3326  008A  00B1               	movwf	??_handle_rx_packet+1
  3327  008B  0830               	movf	??_handle_rx_packet,w
  3328  008C  00B3               	movwf	handle_rx_packet@stgs_pld_p
  3329  008D  0831               	movf	??_handle_rx_packet+1,w
  3330  008E  00B4               	movwf	handle_rx_packet@stgs_pld_p+1
  3331                           
  3332                           ;main.c: 206: if (stgs_pld_p->operation == 0)
  3333  008F  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3334  0090  0086               	movwf	6
  3335  0091  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3336  0092  0087               	movwf	7
  3337  0093  0801               	movf	1,w
  3338  0094  1D03               	btfss	3,2
  3339  0095  28C8               	goto	l3585
  3340                           
  3341                           ;main.c: 207: {
  3342                           ;main.c: 208: if (stgs_pld_p->load_command == 0)
  3343  0096  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3344  0097  0086               	movwf	6
  3345  0098  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3346  0099  0087               	movwf	7
  3347  009A  3141               	addfsr 1,1
  3348  009B  0801               	movf	1,w
  3349  009C  1D03               	btfss	3,2
  3350  009D  28AA               	goto	l3581
  3351                           
  3352                           ;main.c: 209: {
  3353                           ;main.c: 211: EEPROM_load_all_settings(&settings);
  3354  009E  30D7               	movlw	(low (_settings| 0))& (0+255)
  3355  009F  318E  2663  3180   	fcall	_EEPROM_load_all_settings
  3356                           
  3357                           ;main.c: 215: PACKET_UpdateAndSend(pkt_p);
  3358  00A2  0020               	movlb	0	; select bank0
  3359  00A3  0836               	movf	handle_rx_packet@pkt_p+1,w
  3360  00A4  00AA               	movwf	PACKET_UpdateAndSend@pkt+1
  3361  00A5  0835               	movf	handle_rx_packet@pkt_p,w
  3362  00A6  00A9               	movwf	PACKET_UpdateAndSend@pkt
  3363  00A7  318F  271F  3180   	fcall	_PACKET_UpdateAndSend
  3364  00AA                     l3581:	
  3365                           
  3366                           ;main.c: 216: }
  3367                           ;main.c: 217: if (stgs_pld_p->load_command == 1)
  3368  00AA  0020               	movlb	0	; select bank0
  3369  00AB  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3370  00AC  0086               	movwf	6
  3371  00AD  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3372  00AE  0087               	movwf	7
  3373  00AF  3141               	addfsr 1,1
  3374  00B0  0301               	decf	1,w
  3375  00B1  1D03               	btfss	3,2
  3376  00B2  0008               	return
  3377                           
  3378                           ;main.c: 218: {
  3379                           ;main.c: 220: EEPROM_load_setting(&settings, stgs_pld_p->load_setting_num);
  3380  00B3  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3381  00B4  0086               	movwf	6
  3382  00B5  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3383  00B6  0087               	movwf	7
  3384  00B7  3142               	addfsr 1,2
  3385  00B8  0801               	movf	1,w
  3386  00B9  00B0               	movwf	??_handle_rx_packet
  3387  00BA  0830               	movf	??_handle_rx_packet,w
  3388  00BB  00AD               	movwf	EEPROM_load_setting@num
  3389  00BC  30D7               	movlw	(low (_settings| 0))& (0+255)
  3390  00BD  318D  25C8  3180   	fcall	_EEPROM_load_setting
  3391                           
  3392                           ;main.c: 224: PACKET_UpdateAndSend(pkt_p);
  3393  00C0  0020               	movlb	0	; select bank0
  3394  00C1  0836               	movf	handle_rx_packet@pkt_p+1,w
  3395  00C2  00AA               	movwf	PACKET_UpdateAndSend@pkt+1
  3396  00C3  0835               	movf	handle_rx_packet@pkt_p,w
  3397  00C4  00A9               	movwf	PACKET_UpdateAndSend@pkt
  3398  00C5  318F  271F         	fcall	_PACKET_UpdateAndSend
  3399                           
  3400                           ;main.c: 225: }
  3401                           ;main.c: 226: }
  3402  00C7  0008               	return
  3403  00C8                     l3585:	
  3404                           
  3405                           ;main.c: 227: else if (stgs_pld_p->operation == 1)
  3406  00C8  0020               	movlb	0	; select bank0
  3407  00C9  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3408  00CA  0086               	movwf	6
  3409  00CB  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3410  00CC  0087               	movwf	7
  3411  00CD  0301               	decf	1,w
  3412  00CE  1D03               	btfss	3,2
  3413  00CF  2902               	goto	l3595
  3414                           
  3415                           ;main.c: 228: {
  3416                           ;main.c: 229: if (stgs_pld_p->load_command == 0)
  3417  00D0  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3418  00D1  0086               	movwf	6
  3419  00D2  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3420  00D3  0087               	movwf	7
  3421  00D4  3141               	addfsr 1,1
  3422  00D5  0801               	movf	1,w
  3423  00D6  1D03               	btfss	3,2
  3424  00D7  28E4               	goto	l3591
  3425                           
  3426                           ;main.c: 230: {
  3427                           ;main.c: 232: EEPROM_store_all_settings(&settings);
  3428  00D8  30D7               	movlw	(low (_settings| 0))& (0+255)
  3429  00D9  318E  267F  3180   	fcall	_EEPROM_store_all_settings
  3430                           
  3431                           ;main.c: 236: PACKET_UpdateAndSend(pkt_p);
  3432  00DC  0020               	movlb	0	; select bank0
  3433  00DD  0836               	movf	handle_rx_packet@pkt_p+1,w
  3434  00DE  00AA               	movwf	PACKET_UpdateAndSend@pkt+1
  3435  00DF  0835               	movf	handle_rx_packet@pkt_p,w
  3436  00E0  00A9               	movwf	PACKET_UpdateAndSend@pkt
  3437  00E1  318F  271F  3180   	fcall	_PACKET_UpdateAndSend
  3438  00E4                     l3591:	
  3439                           
  3440                           ;main.c: 237: }
  3441                           ;main.c: 238: if (stgs_pld_p->load_command == 1)
  3442  00E4  0020               	movlb	0	; select bank0
  3443  00E5  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3444  00E6  0086               	movwf	6
  3445  00E7  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3446  00E8  0087               	movwf	7
  3447  00E9  3141               	addfsr 1,1
  3448  00EA  0301               	decf	1,w
  3449  00EB  1D03               	btfss	3,2
  3450  00EC  0008               	return
  3451                           
  3452                           ;main.c: 239: {
  3453                           ;main.c: 241: EEPROM_store_setting(&settings, stgs_pld_p->load_setting_num);
  3454  00ED  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3455  00EE  0086               	movwf	6
  3456  00EF  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3457  00F0  0087               	movwf	7
  3458  00F1  3142               	addfsr 1,2
  3459  00F2  0801               	movf	1,w
  3460  00F3  00B0               	movwf	??_handle_rx_packet
  3461  00F4  0830               	movf	??_handle_rx_packet,w
  3462  00F5  00AB               	movwf	EEPROM_store_setting@num
  3463  00F6  30D7               	movlw	(low (_settings| 0))& (0+255)
  3464  00F7  318D  25A5  3180   	fcall	_EEPROM_store_setting
  3465                           
  3466                           ;main.c: 245: PACKET_UpdateAndSend(pkt_p);
  3467  00FA  0020               	movlb	0	; select bank0
  3468  00FB  0836               	movf	handle_rx_packet@pkt_p+1,w
  3469  00FC  00AA               	movwf	PACKET_UpdateAndSend@pkt+1
  3470  00FD  0835               	movf	handle_rx_packet@pkt_p,w
  3471  00FE  00A9               	movwf	PACKET_UpdateAndSend@pkt
  3472  00FF  318F  271F         	fcall	_PACKET_UpdateAndSend
  3473                           
  3474                           ;main.c: 246: }
  3475                           ;main.c: 248: }
  3476  0101  0008               	return
  3477  0102                     l3595:	
  3478                           
  3479                           ;main.c: 250: else if (stgs_pld_p->operation == 2)
  3480  0102  0020               	movlb	0	; select bank0
  3481  0103  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3482  0104  0086               	movwf	6
  3483  0105  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3484  0106  0087               	movwf	7
  3485  0107  3002               	movlw	2
  3486  0108  0601               	xorwf	1,w
  3487  0109  1D03               	btfss	3,2
  3488  010A  2929               	goto	l3599
  3489                           
  3490                           ;main.c: 251: {
  3491                           ;main.c: 252: SETTINGS_write(&settings, stgs_pld_p->write_setting_num, stgs_pld_p->setti
      +                          ng_value);
  3492  010B  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3493  010C  0086               	movwf	6
  3494  010D  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3495  010E  0087               	movwf	7
  3496  010F  3141               	addfsr 1,1
  3497  0110  0801               	movf	1,w
  3498  0111  00B0               	movwf	??_handle_rx_packet
  3499  0112  0830               	movf	??_handle_rx_packet,w
  3500  0113  00A0               	movwf	SETTINGS_write@setting_num
  3501  0114  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3502  0115  0086               	movwf	6
  3503  0116  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3504  0117  0087               	movwf	7
  3505  0118  3142               	addfsr 1,2
  3506  0119  3F40               	moviw [0]fsr1
  3507  011A  00A1               	movwf	SETTINGS_write@setting_val
  3508  011B  3F41               	moviw [1]fsr1
  3509  011C  00A2               	movwf	SETTINGS_write@setting_val+1
  3510  011D  30D7               	movlw	(low (_settings| 0))& (0+255)
  3511  011E  318D  2579  3180   	fcall	_SETTINGS_write
  3512                           
  3513                           ;main.c: 256: PACKET_UpdateAndSend(pkt_p);
  3514  0121  0020               	movlb	0	; select bank0
  3515  0122  0836               	movf	handle_rx_packet@pkt_p+1,w
  3516  0123  00AA               	movwf	PACKET_UpdateAndSend@pkt+1
  3517  0124  0835               	movf	handle_rx_packet@pkt_p,w
  3518  0125  00A9               	movwf	PACKET_UpdateAndSend@pkt
  3519  0126  318F  271F         	fcall	_PACKET_UpdateAndSend
  3520                           
  3521                           ;main.c: 257: }
  3522  0128  0008               	return
  3523  0129                     l3599:	
  3524                           
  3525                           ;main.c: 258: else if (stgs_pld_p->operation == 3)
  3526  0129  0020               	movlb	0	; select bank0
  3527  012A  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3528  012B  0086               	movwf	6
  3529  012C  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3530  012D  0087               	movwf	7
  3531  012E  3003               	movlw	3
  3532  012F  0601               	xorwf	1,w
  3533  0130  1D03               	btfss	3,2
  3534  0131  0008               	return
  3535                           
  3536                           ;main.c: 259: {
  3537                           ;main.c: 260: stgs_pld_p->setting_value = SETTINGS_read(&settings, stgs_pld_p->read_sett
      +                          ing_num);
  3538  0132  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3539  0133  0086               	movwf	6
  3540  0134  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3541  0135  0087               	movwf	7
  3542  0136  3141               	addfsr 1,1
  3543  0137  0801               	movf	1,w
  3544  0138  00B0               	movwf	??_handle_rx_packet
  3545  0139  0830               	movf	??_handle_rx_packet,w
  3546  013A  00A0               	movwf	SETTINGS_read@setting_num
  3547  013B  30D7               	movlw	(low (_settings| 0))& (0+255)
  3548  013C  318D  256C  3180   	fcall	_SETTINGS_read
  3549  013F  0020               	movlb	0	; select bank0
  3550  0140  0833               	movf	handle_rx_packet@stgs_pld_p,w
  3551  0141  0086               	movwf	6
  3552  0142  0834               	movf	handle_rx_packet@stgs_pld_p+1,w
  3553  0143  0087               	movwf	7
  3554  0144  3142               	addfsr 1,2
  3555  0145  0820               	movf	?_SETTINGS_read,w
  3556  0146  3FC0               	movwi [0]fsr1
  3557  0147  0821               	movf	?_SETTINGS_read+1,w
  3558  0148  3FC1               	movwi [1]fsr1
  3559                           
  3560                           ;main.c: 262: PACKET_UpdateAndSend(pkt_p);
  3561  0149  0836               	movf	handle_rx_packet@pkt_p+1,w
  3562  014A  00AA               	movwf	PACKET_UpdateAndSend@pkt+1
  3563  014B  0835               	movf	handle_rx_packet@pkt_p,w
  3564  014C  00A9               	movwf	PACKET_UpdateAndSend@pkt
  3565  014D  318F  271F         	fcall	_PACKET_UpdateAndSend
  3566                           
  3567                           ;main.c: 263: }
  3568                           ;main.c: 266: }
  3569  014F  0008               	return
  3570  0150                     l3603:	
  3571                           
  3572                           ;main.c: 267: else if (pkt_p->payload_type == 0x02)
  3573  0150  0020               	movlb	0	; select bank0
  3574  0151  0835               	movf	handle_rx_packet@pkt_p,w
  3575  0152  0086               	movwf	6
  3576  0153  0836               	movf	handle_rx_packet@pkt_p+1,w
  3577  0154  0087               	movwf	7
  3578  0155  3141               	addfsr 1,1
  3579  0156  3002               	movlw	2
  3580  0157  0601               	xorwf	1,w
  3581  0158  1D03               	btfss	3,2
  3582  0159  0008               	return
  3583                           
  3584                           ;main.c: 268: {
  3585                           ;main.c: 269: if (pkt_p->packet_arr[5] == 0x00)
  3586  015A  0835               	movf	handle_rx_packet@pkt_p,w
  3587  015B  0086               	movwf	6
  3588  015C  0836               	movf	handle_rx_packet@pkt_p+1,w
  3589  015D  0087               	movwf	7
  3590  015E  3145               	addfsr 1,5
  3591  015F  0801               	movf	1,w
  3592  0160  1D03               	btfss	3,2
  3593  0161  0008               	return
  3594                           
  3595                           ;main.c: 270: {
  3596                           ;main.c: 272: if (pkt_p->packet_arr[6] == 0x00)
  3597  0162  0835               	movf	handle_rx_packet@pkt_p,w
  3598  0163  0086               	movwf	6
  3599  0164  0836               	movf	handle_rx_packet@pkt_p+1,w
  3600  0165  0087               	movwf	7
  3601  0166  3146               	addfsr 1,6
  3602  0167  0801               	movf	1,w
  3603  0168  1D03               	btfss	3,2
  3604  0169  298D               	goto	l3613
  3605                           
  3606                           ;main.c: 273: {
  3607                           ;main.c: 274: pkt_p->packet_arr[7] = curr_temp_f & 0xFF;
  3608  016A  0835               	movf	handle_rx_packet@pkt_p,w
  3609  016B  3E07               	addlw	7
  3610  016C  00B0               	movwf	??_handle_rx_packet
  3611  016D  3000               	movlw	0
  3612  016E  3D36               	addwfc	handle_rx_packet@pkt_p+1,w
  3613  016F  00B1               	movwf	??_handle_rx_packet+1
  3614  0170  0830               	movf	??_handle_rx_packet,w
  3615  0171  0086               	movwf	6
  3616  0172  0831               	movf	??_handle_rx_packet+1,w
  3617  0173  0087               	movwf	7
  3618  0174  0021               	movlb	1	; select bank1
  3619  0175  0847               	movf	_curr_temp_f^(0+128),w
  3620  0176  0081               	movwf	1
  3621                           
  3622                           ;main.c: 275: pkt_p->packet_arr[8] = (curr_temp_f >> 8) & 0xFF;
  3623  0177  0848               	movf	(_curr_temp_f+1)^(0+128),w
  3624  0178  0020               	movlb	0	; select bank0
  3625  0179  00B0               	movwf	??_handle_rx_packet
  3626  017A  0835               	movf	handle_rx_packet@pkt_p,w
  3627  017B  3E08               	addlw	8
  3628  017C  00B1               	movwf	??_handle_rx_packet+1
  3629  017D  3000               	movlw	0
  3630  017E  3D36               	addwfc	handle_rx_packet@pkt_p+1,w
  3631  017F  00B2               	movwf	??_handle_rx_packet+2
  3632  0180  0831               	movf	??_handle_rx_packet+1,w
  3633  0181  0086               	movwf	6
  3634  0182  0832               	movf	??_handle_rx_packet+2,w
  3635  0183  0087               	movwf	7
  3636  0184  0830               	movf	??_handle_rx_packet,w
  3637  0185  0081               	movwf	1
  3638                           
  3639                           ;main.c: 276: PACKET_UpdateAndSend(pkt_p);
  3640  0186  0836               	movf	handle_rx_packet@pkt_p+1,w
  3641  0187  00AA               	movwf	PACKET_UpdateAndSend@pkt+1
  3642  0188  0835               	movf	handle_rx_packet@pkt_p,w
  3643  0189  00A9               	movwf	PACKET_UpdateAndSend@pkt
  3644  018A  318F  271F         	fcall	_PACKET_UpdateAndSend
  3645                           
  3646                           ;main.c: 277: }
  3647  018C  0008               	return
  3648  018D                     l3613:	
  3649                           
  3650                           ;main.c: 278: else if (pkt_p->packet_arr[6] == 0x01)
  3651  018D  0020               	movlb	0	; select bank0
  3652  018E  0835               	movf	handle_rx_packet@pkt_p,w
  3653  018F  0086               	movwf	6
  3654  0190  0836               	movf	handle_rx_packet@pkt_p+1,w
  3655  0191  0087               	movwf	7
  3656  0192  3146               	addfsr 1,6
  3657  0193  0301               	decf	1,w
  3658  0194  1D03               	btfss	3,2
  3659  0195  0008               	return
  3660                           
  3661                           ;main.c: 279: {
  3662                           ;main.c: 280: pkt_p->packet_arr[7] = curr_tank_level & 0xFF;
  3663  0196  0835               	movf	handle_rx_packet@pkt_p,w
  3664  0197  3E07               	addlw	7
  3665  0198  00B0               	movwf	??_handle_rx_packet
  3666  0199  3000               	movlw	0
  3667  019A  3D36               	addwfc	handle_rx_packet@pkt_p+1,w
  3668  019B  00B1               	movwf	??_handle_rx_packet+1
  3669  019C  0830               	movf	??_handle_rx_packet,w
  3670  019D  0086               	movwf	6
  3671  019E  0831               	movf	??_handle_rx_packet+1,w
  3672  019F  0087               	movwf	7
  3673  01A0  0021               	movlb	1	; select bank1
  3674  01A1  0849               	movf	_curr_tank_level^(0+128),w
  3675  01A2  0081               	movwf	1
  3676                           
  3677                           ;main.c: 281: pkt_p->packet_arr[8] = (curr_tank_level >> 8) & 0xFF;
  3678  01A3  084A               	movf	(_curr_tank_level+1)^(0+128),w
  3679  01A4  0020               	movlb	0	; select bank0
  3680  01A5  00B0               	movwf	??_handle_rx_packet
  3681  01A6  0835               	movf	handle_rx_packet@pkt_p,w
  3682  01A7  3E08               	addlw	8
  3683  01A8  00B1               	movwf	??_handle_rx_packet+1
  3684  01A9  3000               	movlw	0
  3685  01AA  3D36               	addwfc	handle_rx_packet@pkt_p+1,w
  3686  01AB  00B2               	movwf	??_handle_rx_packet+2
  3687  01AC  0831               	movf	??_handle_rx_packet+1,w
  3688  01AD  0086               	movwf	6
  3689  01AE  0832               	movf	??_handle_rx_packet+2,w
  3690  01AF  0087               	movwf	7
  3691  01B0  0830               	movf	??_handle_rx_packet,w
  3692  01B1  0081               	movwf	1
  3693                           
  3694                           ;main.c: 282: PACKET_UpdateAndSend(pkt_p);
  3695  01B2  0836               	movf	handle_rx_packet@pkt_p+1,w
  3696  01B3  00AA               	movwf	PACKET_UpdateAndSend@pkt+1
  3697  01B4  0835               	movf	handle_rx_packet@pkt_p,w
  3698  01B5  00A9               	movwf	PACKET_UpdateAndSend@pkt
  3699  01B6  318F  271F         	fcall	_PACKET_UpdateAndSend
  3700  01B8  0008               	return
  3701  01B9                     __end_of_handle_rx_packet:	
  3702                           
  3703                           	psect	text2
  3704  0D79                     __ptext2:	
  3705 ;; *************** function _SETTINGS_write *****************
  3706 ;; Defined at:
  3707 ;;		line 25 in file "settings.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  stgs            1    wreg     PTR struct .
  3710 ;;		 -> settings(4), 
  3711 ;;  setting_num     1    0[BANK0 ] unsigned char 
  3712 ;;  setting_val     2    1[BANK0 ] unsigned int 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  stgs            1    4[BANK0 ] PTR struct .
  3715 ;;		 -> settings(4), 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3725 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3727 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3729 ;;Total ram usage:        5 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    3
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_handle_rx_packet
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           
  3740                           ;psect for function _SETTINGS_write
  3741  0D79                     _SETTINGS_write:	
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in _SETTINGS_write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3745                           ;SETTINGS_write@stgs stored from wreg
  3746  0D79  0020               	movlb	0	; select bank0
  3747  0D7A  00A4               	movwf	SETTINGS_write@stgs
  3748                           
  3749                           ;settings.c: 27: stgs->arr[setting_num] = setting_val;
  3750  0D7B  3520               	lslf	SETTINGS_write@setting_num,w
  3751  0D7C  0724               	addwf	SETTINGS_write@stgs,w
  3752  0D7D  00A3               	movwf	??_SETTINGS_write
  3753  0D7E  0823               	movf	??_SETTINGS_write,w
  3754  0D7F  0086               	movwf	6
  3755  0D80  0187               	clrf	7
  3756  0D81  0821               	movf	SETTINGS_write@setting_val,w
  3757  0D82  3FC0               	movwi [0]fsr1
  3758  0D83  0822               	movf	SETTINGS_write@setting_val+1,w
  3759  0D84  3FC1               	movwi [1]fsr1
  3760  0D85  0008               	return
  3761  0D86                     __end_of_SETTINGS_write:	
  3762                           
  3763                           	psect	text3
  3764  0D6C                     __ptext3:	
  3765 ;; *************** function _SETTINGS_read *****************
  3766 ;; Defined at:
  3767 ;;		line 30 in file "settings.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  stgs            1    wreg     PTR struct .
  3770 ;;		 -> settings(4), 
  3771 ;;  setting_num     1    0[BANK0 ] unsigned char 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  stgs            1    3[BANK0 ] PTR struct .
  3774 ;;		 -> settings(4), 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  2    0[BANK0 ] unsigned int 
  3777 ;; Registers used:
  3778 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3784 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;Total ram usage:        4 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    3
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_handle_rx_packet
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _SETTINGS_read
  3800  0D6C                     _SETTINGS_read:	
  3801                           
  3802                           ;incstack = 0
  3803                           ; Regs used in _SETTINGS_read: [wreg+fsr1l+fsr1h+status,2+status,0]
  3804                           ;SETTINGS_read@stgs stored from wreg
  3805  0D6C  0020               	movlb	0	; select bank0
  3806  0D6D  00A3               	movwf	SETTINGS_read@stgs
  3807                           
  3808                           ;settings.c: 32: return stgs->arr[setting_num];
  3809  0D6E  3520               	lslf	SETTINGS_read@setting_num,w
  3810  0D6F  0723               	addwf	SETTINGS_read@stgs,w
  3811  0D70  00A2               	movwf	??_SETTINGS_read
  3812  0D71  0822               	movf	??_SETTINGS_read,w
  3813  0D72  0086               	movwf	6
  3814  0D73  0187               	clrf	7
  3815  0D74  3F40               	moviw [0]fsr1
  3816  0D75  00A0               	movwf	?_SETTINGS_read
  3817  0D76  3F41               	moviw [1]fsr1
  3818  0D77  00A1               	movwf	?_SETTINGS_read+1
  3819  0D78  0008               	return
  3820  0D79                     __end_of_SETTINGS_read:	
  3821                           
  3822                           	psect	text4
  3823  0D43                     __ptext4:	
  3824 ;; *************** function _PACKET_get_rx_packet_ptr *****************
  3825 ;; Defined at:
  3826 ;;		line 88 in file "packet.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2    0[BANK0 ] PTR struct .
  3833 ;; Registers used:
  3834 ;;		wreg
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3844 ;;Total ram usage:        2 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    3
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_handle_rx_packet
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _PACKET_get_rx_packet_ptr
  3856  0D43                     _PACKET_get_rx_packet_ptr:	
  3857                           
  3858                           ;packet.c: 90: return &PACKET_pkt;
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in _PACKET_get_rx_packet_ptr: [wreg]
  3862  0D43  30E2               	movlw	226
  3863  0D44  0020               	movlb	0	; select bank0
  3864  0D45  00A0               	movwf	?_PACKET_get_rx_packet_ptr
  3865  0D46  3022               	movlw	34
  3866  0D47  00A1               	movwf	?_PACKET_get_rx_packet_ptr+1
  3867  0D48  0008               	return
  3868  0D49                     __end_of_PACKET_get_rx_packet_ptr:	
  3869                           
  3870                           	psect	text5
  3871  0F1F                     __ptext5:	
  3872 ;; *************** function _PACKET_UpdateAndSend *****************
  3873 ;; Defined at:
  3874 ;;		line 35 in file "packet.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  pkt             2    9[BANK0 ] PTR struct .
  3877 ;;		 -> PACKET_pkt(135), 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  cksm            1    0        unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;Total ram usage:        7 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    5
  3896 ;; This function calls:
  3897 ;;		_PACKET_SendPacket
  3898 ;;		_PACKET_calculate_checksum
  3899 ;; This function is called by:
  3900 ;;		_handle_rx_packet
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _PACKET_UpdateAndSend
  3906  0F1F                     _PACKET_UpdateAndSend:	
  3907                           
  3908                           ;packet.c: 39: pkt->checksum = PACKET_calculate_checksum(pkt->packet_arr, pkt->payload_l
      +                          en + 5);
  3909                           
  3910                           ;incstack = 0
  3911                           ; Regs used in _PACKET_UpdateAndSend: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3912                           ;packet.c: 37: uint8_t cksm;
  3913                           ;packet.c: 38: do {} while (0);
  3914  0F1F  0020               	movlb	0	; select bank0
  3915  0F20  082A               	movf	PACKET_UpdateAndSend@pkt+1,w
  3916  0F21  00A1               	movwf	PACKET_calculate_checksum@data+1
  3917  0F22  0829               	movf	PACKET_UpdateAndSend@pkt,w
  3918  0F23  00A0               	movwf	PACKET_calculate_checksum@data
  3919  0F24  0829               	movf	PACKET_UpdateAndSend@pkt,w
  3920  0F25  0086               	movwf	6
  3921  0F26  082A               	movf	PACKET_UpdateAndSend@pkt+1,w
  3922  0F27  0087               	movwf	7
  3923  0F28  3142               	addfsr 1,2
  3924  0F29  3F40               	moviw [0]fsr1
  3925  0F2A  00AB               	movwf	??_PACKET_UpdateAndSend
  3926  0F2B  3F41               	moviw [1]fsr1
  3927  0F2C  00AC               	movwf	??_PACKET_UpdateAndSend+1
  3928  0F2D  082B               	movf	??_PACKET_UpdateAndSend,w
  3929  0F2E  3E05               	addlw	5
  3930  0F2F  00A2               	movwf	PACKET_calculate_checksum@data_len
  3931  0F30  3000               	movlw	0
  3932  0F31  3D2C               	addwfc	??_PACKET_UpdateAndSend+1,w
  3933  0F32  00A3               	movwf	PACKET_calculate_checksum@data_len+1
  3934  0F33  3187  27DB  318F   	fcall	_PACKET_calculate_checksum
  3935  0F36  0020               	movlb	0	; select bank0
  3936  0F37  00AD               	movwf	??_PACKET_UpdateAndSend+2
  3937  0F38  0829               	movf	PACKET_UpdateAndSend@pkt,w
  3938  0F39  3E09               	addlw	9
  3939  0F3A  00AE               	movwf	??_PACKET_UpdateAndSend+3
  3940  0F3B  3000               	movlw	0
  3941  0F3C  3D2A               	addwfc	PACKET_UpdateAndSend@pkt+1,w
  3942  0F3D  00AF               	movwf	??_PACKET_UpdateAndSend+4
  3943  0F3E  082E               	movf	??_PACKET_UpdateAndSend+3,w
  3944  0F3F  0086               	movwf	6
  3945  0F40  082F               	movf	??_PACKET_UpdateAndSend+4,w
  3946  0F41  0087               	movwf	7
  3947  0F42  082D               	movf	??_PACKET_UpdateAndSend+2,w
  3948  0F43  0081               	movwf	1
  3949                           
  3950                           ;packet.c: 41: PACKET_SendPacket(pkt);
  3951  0F44  082A               	movf	PACKET_UpdateAndSend@pkt+1,w
  3952  0F45  00A2               	movwf	PACKET_SendPacket@pkt+1
  3953  0F46  0829               	movf	PACKET_UpdateAndSend@pkt,w
  3954  0F47  00A1               	movwf	PACKET_SendPacket@pkt
  3955  0F48  318E  26F5         	fcall	_PACKET_SendPacket
  3956  0F4A  0008               	return
  3957  0F4B                     __end_of_PACKET_UpdateAndSend:	
  3958                           
  3959                           	psect	text6
  3960  0EF5                     __ptext6:	
  3961 ;; *************** function _PACKET_SendPacket *****************
  3962 ;; Defined at:
  3963 ;;		line 25 in file "packet.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  pkt             2    1[BANK0 ] PTR struct .
  3966 ;;		 -> PACKET_pkt(135), 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  i               2    7[BANK0 ] unsigned int 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;Total ram usage:        8 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    4
  3985 ;; This function calls:
  3986 ;;		_EUSART_Write
  3987 ;; This function is called by:
  3988 ;;		_handle_rx_packet
  3989 ;;		_PACKET_UpdateAndSend
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           
  3994                           ;psect for function _PACKET_SendPacket
  3995  0EF5                     _PACKET_SendPacket:	
  3996                           
  3997                           ;packet.c: 29: for (i = 0; i < 5 + pkt->payload_len + 2; i++)
  3998                           
  3999                           ;incstack = 0
  4000                           ; Regs used in _PACKET_SendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4001                           ;packet.c: 27: uint16_t i;
  4002                           ;packet.c: 28: do {} while (0);
  4003  0EF5  0020               	movlb	0	; select bank0
  4004  0EF6  01A7               	clrf	PACKET_SendPacket@i
  4005  0EF7  01A8               	clrf	PACKET_SendPacket@i+1
  4006  0EF8                     l3201:	
  4007  0EF8  0821               	movf	PACKET_SendPacket@pkt,w
  4008  0EF9  0086               	movwf	6
  4009  0EFA  0822               	movf	PACKET_SendPacket@pkt+1,w
  4010  0EFB  0087               	movwf	7
  4011  0EFC  3142               	addfsr 1,2
  4012  0EFD  3F40               	moviw [0]fsr1
  4013  0EFE  00A3               	movwf	??_PACKET_SendPacket
  4014  0EFF  3F41               	moviw [1]fsr1
  4015  0F00  00A4               	movwf	??_PACKET_SendPacket+1
  4016  0F01  0823               	movf	??_PACKET_SendPacket,w
  4017  0F02  3E07               	addlw	7
  4018  0F03  00A5               	movwf	??_PACKET_SendPacket+2
  4019  0F04  3000               	movlw	0
  4020  0F05  3D24               	addwfc	??_PACKET_SendPacket+1,w
  4021  0F06  00A6               	movwf	??_PACKET_SendPacket+3
  4022  0F07  0826               	movf	??_PACKET_SendPacket+3,w
  4023  0F08  0228               	subwf	PACKET_SendPacket@i+1,w
  4024  0F09  1D03               	skipz
  4025  0F0A  2F0D               	goto	u3195
  4026  0F0B  0825               	movf	??_PACKET_SendPacket+2,w
  4027  0F0C  0227               	subwf	PACKET_SendPacket@i,w
  4028  0F0D                     u3195:	
  4029  0F0D  1803               	btfsc	3,0
  4030  0F0E  0008               	return
  4031                           
  4032                           ;packet.c: 30: {
  4033                           ;packet.c: 31: EUSART_Write(pkt->packet_arr[i]);
  4034  0F0F  0827               	movf	PACKET_SendPacket@i,w
  4035  0F10  0721               	addwf	PACKET_SendPacket@pkt,w
  4036  0F11  0086               	movwf	6
  4037  0F12  0828               	movf	PACKET_SendPacket@i+1,w
  4038  0F13  3D22               	addwfc	PACKET_SendPacket@pkt+1,w
  4039  0F14  0087               	movwf	7
  4040  0F15  0801               	movf	1,w
  4041  0F16  318D  2558  318E   	fcall	_EUSART_Write
  4042  0F19  3001               	movlw	1
  4043  0F1A  0020               	movlb	0	; select bank0
  4044  0F1B  07A7               	addwf	PACKET_SendPacket@i,f
  4045  0F1C  3000               	movlw	0
  4046  0F1D  3DA8               	addwfc	PACKET_SendPacket@i+1,f
  4047  0F1E  2EF8               	goto	l3201
  4048  0F1F                     __end_of_PACKET_SendPacket:	
  4049                           
  4050                           	psect	text7
  4051  0D58                     __ptext7:	
  4052 ;; *************** function _EUSART_Write *****************
  4053 ;; Defined at:
  4054 ;;		line 125 in file "mcc_generated_files/eusart.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  txData          1    wreg     unsigned char 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  txData          1    0[BANK0 ] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		wreg
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;Total ram usage:        1 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    3
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_PACKET_SendPacket
  4079 ;;		_putch
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function _EUSART_Write
  4085  0D58                     _EUSART_Write:	
  4086                           
  4087                           ;incstack = 0
  4088                           ; Regs used in _EUSART_Write: [wreg]
  4089                           ;EUSART_Write@txData stored from wreg
  4090  0D58  0020               	movlb	0	; select bank0
  4091  0D59  00A0               	movwf	EUSART_Write@txData
  4092  0D5A                     l158:	
  4093                           ;eusart.c: 128: {
  4094                           
  4095                           ;eusart.c: 127: while(0 == PIR1bits.TXIF)
  4096                           
  4097  0D5A  1E11               	btfss	17,4	;volatile
  4098  0D5B  2D5A               	goto	l158
  4099                           
  4100                           ;eusart.c: 129: }
  4101                           ;eusart.c: 131: TXREG = txData;
  4102  0D5C  0820               	movf	EUSART_Write@txData,w
  4103  0D5D  0023               	movlb	3	; select bank3
  4104  0D5E  009A               	movwf	26	;volatile
  4105  0D5F  0008               	return
  4106  0D60                     __end_of_EUSART_Write:	
  4107                           
  4108                           	psect	text8
  4109  0DA5                     __ptext8:	
  4110 ;; *************** function _EEPROM_store_setting *****************
  4111 ;; Defined at:
  4112 ;;		line 32 in file "eeprom.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  s               1    wreg     PTR struct .
  4115 ;;		 -> settings(4), 
  4116 ;;  num             1   11[BANK0 ] unsigned char 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  s               1   13[BANK0 ] PTR struct .
  4119 ;;		 -> settings(4), 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4129 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;Total ram usage:        3 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    5
  4136 ;; This function calls:
  4137 ;;		___itoee
  4138 ;; This function is called by:
  4139 ;;		_handle_rx_packet
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           
  4144                           ;psect for function _EEPROM_store_setting
  4145  0DA5                     _EEPROM_store_setting:	
  4146                           
  4147                           ;incstack = 0
  4148                           ; Regs used in _EEPROM_store_setting: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4149                           ;EEPROM_store_setting@s stored from wreg
  4150  0DA5  0020               	movlb	0	; select bank0
  4151  0DA6  00AD               	movwf	EEPROM_store_setting@s
  4152  0DA7  352B               	lslf	EEPROM_store_setting@num,w
  4153  0DA8  072D               	addwf	EEPROM_store_setting@s,w
  4154  0DA9  00AC               	movwf	??_EEPROM_store_setting
  4155  0DAA  082C               	movf	??_EEPROM_store_setting,w
  4156  0DAB  0086               	movwf	6
  4157  0DAC  0187               	clrf	7
  4158  0DAD  3F40               	moviw [0]fsr1
  4159  0DAE  00A6               	movwf	___itoee@data
  4160  0DAF  3F41               	moviw [1]fsr1
  4161  0DB0  00A7               	movwf	___itoee@data+1
  4162  0DB1  352B               	lslf	EEPROM_store_setting@num,w
  4163  0DB2  3E00               	addlw	low _SETTINGS_stgs
  4164  0DB3  318D  2586         	fcall	___itoee
  4165  0DB5  0008               	return
  4166  0DB6                     __end_of_EEPROM_store_setting:	
  4167                           
  4168                           	psect	text9
  4169  0E7F                     __ptext9:	
  4170 ;; *************** function _EEPROM_store_all_settings *****************
  4171 ;; Defined at:
  4172 ;;		line 21 in file "eeprom.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  s               1    wreg     PTR struct .
  4175 ;;		 -> settings(4), 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  s               1   12[BANK0 ] PTR struct .
  4178 ;;		 -> settings(4), 
  4179 ;;  i               1   13[BANK0 ] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;Total ram usage:        3 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    5
  4196 ;; This function calls:
  4197 ;;		___itoee
  4198 ;; This function is called by:
  4199 ;;		_handle_rx_packet
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           
  4204                           ;psect for function _EEPROM_store_all_settings
  4205  0E7F                     _EEPROM_store_all_settings:	
  4206                           
  4207                           ;incstack = 0
  4208                           ; Regs used in _EEPROM_store_all_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  4209                           ;EEPROM_store_all_settings@s stored from wreg
  4210  0E7F  0020               	movlb	0	; select bank0
  4211  0E80  00AC               	movwf	EEPROM_store_all_settings@s
  4212                           
  4213                           ;eeprom.c: 23: uint8_t i;
  4214                           ;eeprom.c: 24: for (i = 0; i < 2; i++)
  4215  0E81  01AD               	clrf	EEPROM_store_all_settings@i
  4216  0E82                     L1:	
  4217  0E82  3002               	movlw	2
  4218  0E83  022D               	subwf	EEPROM_store_all_settings@i,w
  4219  0E84  1803               	btfsc	3,0
  4220  0E85  0008               	return
  4221  0E86  352D               	lslf	EEPROM_store_all_settings@i,w
  4222  0E87  072C               	addwf	EEPROM_store_all_settings@s,w
  4223  0E88  00AB               	movwf	??_EEPROM_store_all_settings
  4224  0E89  082B               	movf	??_EEPROM_store_all_settings,w
  4225  0E8A  0086               	movwf	6
  4226  0E8B  0187               	clrf	7
  4227  0E8C  3F40               	moviw [0]fsr1
  4228  0E8D  00A6               	movwf	___itoee@data
  4229  0E8E  3F41               	moviw [1]fsr1
  4230  0E8F  00A7               	movwf	___itoee@data+1
  4231  0E90  352D               	lslf	EEPROM_store_all_settings@i,w
  4232  0E91  3E00               	addlw	low _SETTINGS_stgs
  4233  0E92  318D  2586  318E   	fcall	___itoee
  4234  0E95  3001               	movlw	1
  4235  0E96  0020               	movlb	0	; select bank0
  4236  0E97  00AB               	movwf	??_EEPROM_store_all_settings
  4237  0E98  082B               	movf	??_EEPROM_store_all_settings,w
  4238  0E99  07AD               	addwf	EEPROM_store_all_settings@i,f
  4239  0E9A  2E82               	goto	L1
  4240  0E9B                     __end_of_EEPROM_store_all_settings:	
  4241                           
  4242                           	psect	text10
  4243  0D86                     __ptext10:	
  4244 ;; *************** function ___itoee *****************
  4245 ;; Defined at:
  4246 ;;		line 135 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic\eeprom.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  addr            1    wreg     PTR eeprom void 
  4249 ;;		 -> SETTINGS_stgs(4), 
  4250 ;;  data            2    6[BANK0 ] unsigned int 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  addr            1   10[BANK0 ] PTR eeprom void 
  4253 ;;		 -> SETTINGS_stgs(4), 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2    6[BANK0 ] unsigned int 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4263 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4267 ;;Total ram usage:        5 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    4
  4270 ;; This function calls:
  4271 ;;		_memcpyee
  4272 ;; This function is called by:
  4273 ;;		_EEPROM_store_all_settings
  4274 ;;		_EEPROM_store_setting
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function ___itoee
  4280  0D86                     ___itoee:	
  4281                           
  4282                           ;incstack = 0
  4283                           ; Regs used in ___itoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4284                           ;___itoee@addr stored from wreg
  4285  0D86  0020               	movlb	0	; select bank0
  4286  0D87  00AA               	movwf	___itoee@addr
  4287  0D88  3026               	movlw	(low (___itoee@data| 0))& (0+255)
  4288  0D89  00A8               	movwf	??___itoee
  4289  0D8A  0828               	movf	??___itoee,w
  4290  0D8B  00A0               	movwf	memcpyee@from
  4291  0D8C  3002               	movlw	2
  4292  0D8D  00A9               	movwf	??___itoee+1
  4293  0D8E  0829               	movf	??___itoee+1,w
  4294  0D8F  00A1               	movwf	memcpyee@size
  4295  0D90  082A               	movf	___itoee@addr,w
  4296  0D91  318F  27B6         	fcall	_memcpyee
  4297  0D93  0008               	return
  4298  0D94                     __end_of___itoee:	
  4299                           ;	Return value of ___itoee is never used
  4300                           
  4301                           
  4302                           	psect	text11
  4303  0FB6                     __ptext11:	
  4304 ;; *************** function _memcpyee *****************
  4305 ;; Defined at:
  4306 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic\eeprom.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  to              1    wreg     PTR eeprom unsigned char
  4309 ;;		 -> SETTINGS_stgs(4), 
  4310 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  4311 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  4312 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  4313 ;;  size            1    1[BANK0 ] unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  to              1    5[BANK0 ] PTR eeprom unsigned char
  4316 ;;		 -> SETTINGS_stgs(4), 
  4317 ;;  ptr             1    4[BANK0 ] PTR const unsigned char 
  4318 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  4319 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      void 
  4322 ;; Registers used:
  4323 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4332 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4333 ;;Total ram usage:        6 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    3
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		___itoee
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function _memcpyee
  4345  0FB6                     _memcpyee:	
  4346                           
  4347                           ;incstack = 0
  4348                           ; Regs used in _memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
  4349                           ;memcpyee@to stored from wreg
  4350  0FB6  0020               	movlb	0	; select bank0
  4351  0FB7  00A5               	movwf	memcpyee@to
  4352  0FB8  0820               	movf	memcpyee@from,w
  4353  0FB9  00A2               	movwf	??_memcpyee
  4354  0FBA  0822               	movf	??_memcpyee,w
  4355  0FBB  00A4               	movwf	memcpyee@ptr
  4356  0FBC                     l656:	
  4357  0FBC  0023               	movlb	3	; select bank3
  4358  0FBD  1895               	btfsc	21,1	;volsfr
  4359  0FBE  2FBC               	goto	l656
  4360  0FBF  0020               	movlb	0	; select bank0
  4361  0FC0  0825               	movf	memcpyee@to,w
  4362  0FC1  3EFF               	addlw	255
  4363  0FC2  00A2               	movwf	??_memcpyee
  4364  0FC3  30FF               	movlw	255
  4365  0FC4  1803               	skipnc
  4366  0FC5  3000               	movlw	0
  4367  0FC6  00A3               	movwf	??_memcpyee+1
  4368  0FC7  0822               	movf	??_memcpyee,w
  4369  0FC8  0023               	movlb	3	; select bank3
  4370  0FC9  0091               	movwf	17	;volatile
  4371  0FCA  0020               	movlb	0	; select bank0
  4372  0FCB  0823               	movf	??_memcpyee+1,w
  4373  0FCC  0023               	movlb	3	; select bank3
  4374  0FCD  0092               	movwf	18	;volatile
  4375  0FCE  307F               	movlw	127
  4376  0FCF  0020               	movlb	0	; select bank0
  4377  0FD0  00A2               	movwf	??_memcpyee
  4378  0FD1  0822               	movf	??_memcpyee,w
  4379  0FD2  0023               	movlb	3	; select bank3
  4380  0FD3  0595               	andwf	21,f	;volsfr
  4381  0FD4                     l3189:	
  4382  0FD4  3001               	movlw	1
  4383  0FD5  0020               	movlb	0	; select bank0
  4384  0FD6  02A1               	subwf	memcpyee@size,f
  4385  0FD7  0A21               	incf	memcpyee@size,w
  4386  0FD8  1903               	btfsc	3,2
  4387  0FD9  0008               	return
  4388  0FDA                     l661:	
  4389  0FDA  0023               	movlb	3	; select bank3
  4390  0FDB  1895               	btfsc	21,1	;volsfr
  4391  0FDC  2FDA               	goto	l661
  4392  0FDD  0020               	movlb	0	; select bank0
  4393  0FDE  0824               	movf	memcpyee@ptr,w
  4394  0FDF  0086               	movwf	6
  4395  0FE0  0187               	clrf	7
  4396  0FE1  0801               	movf	1,w
  4397  0FE2  0023               	movlb	3	; select bank3
  4398  0FE3  0093               	movwf	19	;volatile
  4399  0FE4  3001               	movlw	1
  4400  0FE5  0020               	movlb	0	; select bank0
  4401  0FE6  00A2               	movwf	??_memcpyee
  4402  0FE7  0822               	movf	??_memcpyee,w
  4403  0FE8  07A4               	addwf	memcpyee@ptr,f
  4404  0FE9  3001               	movlw	1
  4405  0FEA  0023               	movlb	3	; select bank3
  4406  0FEB  0791               	addwf	17,f	;volatile
  4407  0FEC  3000               	movlw	0
  4408  0FED  3D92               	addwfc	18,f	;volatile
  4409  0FEE  0020               	movlb	0	; select bank0
  4410  0FEF  1003               	bcf	3,0	;volatile
  4411  0FF0  1B8B               	btfsc	11,7	;volatile
  4412  0FF1  1403               	bsf	3,0	;volatile
  4413  0FF2  138B               	bcf	11,7	;volatile
  4414  0FF3  0023               	movlb	3	; select bank3
  4415  0FF4  1515               	bsf	21,2	;volsfr
  4416  0FF5  3055               	movlw	85
  4417  0FF6  0096               	movwf	22	;volsfr
  4418  0FF7  30AA               	movlw	170
  4419  0FF8  0096               	movwf	22	;volsfr
  4420  0FF9  1495               	bsf	21,1	;volsfr
  4421  0FFA  1115               	bcf	21,2	;volsfr
  4422  0FFB  0020               	movlb	0	; select bank0
  4423  0FFC  1C03               	btfss	3,0	;volatile
  4424  0FFD  2FD4               	goto	l3189
  4425  0FFE  178B               	bsf	11,7	;volatile
  4426  0FFF  2FD4               	goto	l3189
  4427  1000                     __end_of_memcpyee:	
  4428                           
  4429                           	psect	text12
  4430  0DC8                     __ptext12:	
  4431 ;; *************** function _EEPROM_load_setting *****************
  4432 ;; Defined at:
  4433 ;;		line 16 in file "eeprom.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  s               1    wreg     PTR struct .
  4436 ;;		 -> settings(4), 
  4437 ;;  num             1   13[BANK0 ] unsigned char 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  s               1   15[BANK0 ] PTR struct .
  4440 ;;		 -> settings(4), 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4450 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4453 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;Total ram usage:        3 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    5
  4457 ;; This function calls:
  4458 ;;		___eetoi
  4459 ;; This function is called by:
  4460 ;;		_handle_rx_packet
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function _EEPROM_load_setting
  4466  0DC8                     _EEPROM_load_setting:	
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _EEPROM_load_setting: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4470                           ;EEPROM_load_setting@s stored from wreg
  4471  0DC8  0020               	movlb	0	; select bank0
  4472  0DC9  00AF               	movwf	EEPROM_load_setting@s
  4473                           
  4474                           ;eeprom.c: 18: s->arr[num] = SETTINGS_stgs.arr[num];
  4475  0DCA  352D               	lslf	EEPROM_load_setting@num,w
  4476  0DCB  3E00               	addlw	low _SETTINGS_stgs
  4477  0DCC  318D  25ED         	fcall	___eetoi
  4478  0DCE  0020               	movlb	0	; select bank0
  4479  0DCF  352D               	lslf	EEPROM_load_setting@num,w
  4480  0DD0  072F               	addwf	EEPROM_load_setting@s,w
  4481  0DD1  00AE               	movwf	??_EEPROM_load_setting
  4482  0DD2  082E               	movf	??_EEPROM_load_setting,w
  4483  0DD3  0086               	movwf	6
  4484  0DD4  0187               	clrf	7
  4485  0DD5  0826               	movf	?___eetoi,w
  4486  0DD6  3FC0               	movwi [0]fsr1
  4487  0DD7  0827               	movf	?___eetoi+1,w
  4488  0DD8  3FC1               	movwi [1]fsr1
  4489  0DD9  0008               	return
  4490  0DDA                     __end_of_EEPROM_load_setting:	
  4491                           
  4492                           	psect	text13
  4493  0E63                     __ptext13:	
  4494 ;; *************** function _EEPROM_load_all_settings *****************
  4495 ;; Defined at:
  4496 ;;		line 5 in file "eeprom.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  s               1    wreg     PTR struct .
  4499 ;;		 -> settings(4), 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  s               1   14[BANK0 ] PTR struct .
  4502 ;;		 -> settings(4), 
  4503 ;;  i               1   15[BANK0 ] unsigned char 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      void 
  4506 ;; Registers used:
  4507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;Total ram usage:        3 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:    5
  4520 ;; This function calls:
  4521 ;;		___eetoi
  4522 ;; This function is called by:
  4523 ;;		_main
  4524 ;;		_handle_rx_packet
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           
  4529                           ;psect for function _EEPROM_load_all_settings
  4530  0E63                     _EEPROM_load_all_settings:	
  4531                           
  4532                           ;incstack = 0
  4533                           ; Regs used in _EEPROM_load_all_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  4534                           ;EEPROM_load_all_settings@s stored from wreg
  4535  0E63  0020               	movlb	0	; select bank0
  4536  0E64  00AE               	movwf	EEPROM_load_all_settings@s
  4537                           
  4538                           ;eeprom.c: 7: uint8_t i;
  4539                           ;eeprom.c: 8: for (i = 0; i < 2; i++)
  4540  0E65  01AF               	clrf	EEPROM_load_all_settings@i
  4541  0E66                     L2:	
  4542  0E66  3002               	movlw	2
  4543  0E67  022F               	subwf	EEPROM_load_all_settings@i,w
  4544  0E68  1803               	btfsc	3,0
  4545  0E69  0008               	return
  4546                           
  4547                           ;eeprom.c: 9: {
  4548                           ;eeprom.c: 10: s->arr[i] = SETTINGS_stgs.arr[i];
  4549  0E6A  352F               	lslf	EEPROM_load_all_settings@i,w
  4550  0E6B  3E00               	addlw	low _SETTINGS_stgs
  4551  0E6C  318D  25ED  318E   	fcall	___eetoi
  4552  0E6F  0020               	movlb	0	; select bank0
  4553  0E70  352F               	lslf	EEPROM_load_all_settings@i,w
  4554  0E71  072E               	addwf	EEPROM_load_all_settings@s,w
  4555  0E72  00AD               	movwf	??_EEPROM_load_all_settings
  4556  0E73  082D               	movf	??_EEPROM_load_all_settings,w
  4557  0E74  0086               	movwf	6
  4558  0E75  0187               	clrf	7
  4559  0E76  0826               	movf	?___eetoi,w
  4560  0E77  3FC0               	movwi [0]fsr1
  4561  0E78  0827               	movf	?___eetoi+1,w
  4562  0E79  3FC1               	movwi [1]fsr1
  4563  0E7A  3001               	movlw	1
  4564  0E7B  00AD               	movwf	??_EEPROM_load_all_settings
  4565  0E7C  082D               	movf	??_EEPROM_load_all_settings,w
  4566  0E7D  07AF               	addwf	EEPROM_load_all_settings@i,f
  4567  0E7E  2E66               	goto	L2
  4568  0E7F                     __end_of_EEPROM_load_all_settings:	
  4569                           
  4570                           	psect	text14
  4571  0DED                     __ptext14:	
  4572 ;; *************** function ___eetoi *****************
  4573 ;; Defined at:
  4574 ;;		line 104 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic\eeprom.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  addr            1    wreg     PTR eeprom void 
  4577 ;;		 -> SETTINGS_stgs(4), 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  addr            1   10[BANK0 ] PTR eeprom void 
  4580 ;;		 -> SETTINGS_stgs(4), 
  4581 ;;  data            2   11[BANK0 ] unsigned int 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  2    6[BANK0 ] unsigned int 
  4584 ;; Registers used:
  4585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;Total ram usage:        7 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    4
  4598 ;; This function calls:
  4599 ;;		_eecpymem
  4600 ;; This function is called by:
  4601 ;;		_EEPROM_load_all_settings
  4602 ;;		_EEPROM_load_setting
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           
  4607                           ;psect for function ___eetoi
  4608  0DED                     ___eetoi:	
  4609                           
  4610                           ;incstack = 0
  4611                           ; Regs used in ___eetoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4612                           ;___eetoi@addr stored from wreg
  4613  0DED  0020               	movlb	0	; select bank0
  4614  0DEE  00AA               	movwf	___eetoi@addr
  4615  0DEF  082A               	movf	___eetoi@addr,w
  4616  0DF0  00A8               	movwf	??___eetoi
  4617  0DF1  0828               	movf	??___eetoi,w
  4618  0DF2  00A0               	movwf	eecpymem@from
  4619  0DF3  3002               	movlw	2
  4620  0DF4  00A9               	movwf	??___eetoi+1
  4621  0DF5  0829               	movf	??___eetoi+1,w
  4622  0DF6  00A1               	movwf	eecpymem@size
  4623  0DF7  302B               	movlw	(low (___eetoi@data| 0))& (0+255)
  4624  0DF8  318F  2780         	fcall	_eecpymem
  4625  0DFA  0020               	movlb	0	; select bank0
  4626  0DFB  082C               	movf	___eetoi@data+1,w
  4627  0DFC  00A7               	movwf	?___eetoi+1
  4628  0DFD  082B               	movf	___eetoi@data,w
  4629  0DFE  00A6               	movwf	?___eetoi
  4630  0DFF  0008               	return
  4631  0E00                     __end_of___eetoi:	
  4632                           
  4633                           	psect	text15
  4634  0F80                     __ptext15:	
  4635 ;; *************** function _eecpymem *****************
  4636 ;; Defined at:
  4637 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic\eeprom.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  to              1    wreg     PTR volatile unsigned ch
  4640 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  4641 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  4642 ;;  from            1    0[BANK0 ] PTR eeprom unsigned char
  4643 ;;		 -> SETTINGS_stgs(4), 
  4644 ;;  size            1    1[BANK0 ] unsigned char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  to              1    5[BANK0 ] PTR volatile unsigned ch
  4647 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  4648 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  4649 ;;  cp              1    4[BANK0 ] PTR volatile unsigned ch
  4650 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  4651 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;Total ram usage:        6 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    3
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		___eetoi
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _eecpymem
  4677  0F80                     _eecpymem:	
  4678                           
  4679                           ;incstack = 0
  4680                           ; Regs used in _eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  4681                           ;eecpymem@to stored from wreg
  4682  0F80  0020               	movlb	0	; select bank0
  4683  0F81  00A5               	movwf	eecpymem@to
  4684  0F82  0825               	movf	eecpymem@to,w
  4685  0F83  00A2               	movwf	??_eecpymem
  4686  0F84  0822               	movf	??_eecpymem,w
  4687  0F85  00A4               	movwf	eecpymem@cp
  4688  0F86                     l644:	
  4689  0F86  0023               	movlb	3	; select bank3
  4690  0F87  1895               	btfsc	21,1	;volsfr
  4691  0F88  2F86               	goto	l644
  4692  0F89  0020               	movlb	0	; select bank0
  4693  0F8A  0820               	movf	eecpymem@from,w
  4694  0F8B  00A2               	movwf	??_eecpymem
  4695  0F8C  01A3               	clrf	??_eecpymem+1
  4696  0F8D  0822               	movf	??_eecpymem,w
  4697  0F8E  0023               	movlb	3	; select bank3
  4698  0F8F  0091               	movwf	17	;volatile
  4699  0F90  0020               	movlb	0	; select bank0
  4700  0F91  0823               	movf	??_eecpymem+1,w
  4701  0F92  0023               	movlb	3	; select bank3
  4702  0F93  0092               	movwf	18	;volatile
  4703  0F94                     l3159:	
  4704  0F94  3001               	movlw	1
  4705  0F95  0020               	movlb	0	; select bank0
  4706  0F96  02A1               	subwf	eecpymem@size,f
  4707  0F97  0A21               	incf	eecpymem@size,w
  4708  0F98  1903               	btfsc	3,2
  4709  0F99  0008               	return
  4710  0F9A                     l649:	
  4711  0F9A  0023               	movlb	3	; select bank3
  4712  0F9B  1895               	btfsc	21,1	;volsfr
  4713  0F9C  2F9A               	goto	l649
  4714  0F9D  307F               	movlw	127
  4715  0F9E  0020               	movlb	0	; select bank0
  4716  0F9F  00A2               	movwf	??_eecpymem
  4717  0FA0  0822               	movf	??_eecpymem,w
  4718  0FA1  0023               	movlb	3	; select bank3
  4719  0FA2  0595               	andwf	21,f	;volsfr
  4720  0FA3  1415               	bsf	21,0	;volsfr
  4721  0FA4  0813               	movf	19,w	;volatile
  4722  0FA5  0020               	movlb	0	; select bank0
  4723  0FA6  00A2               	movwf	??_eecpymem
  4724  0FA7  0824               	movf	eecpymem@cp,w
  4725  0FA8  0086               	movwf	6
  4726  0FA9  0187               	clrf	7
  4727  0FAA  0822               	movf	??_eecpymem,w
  4728  0FAB  0081               	movwf	1
  4729  0FAC  3001               	movlw	1
  4730  0FAD  00A2               	movwf	??_eecpymem
  4731  0FAE  0822               	movf	??_eecpymem,w
  4732  0FAF  07A4               	addwf	eecpymem@cp,f
  4733  0FB0  3001               	movlw	1
  4734  0FB1  0023               	movlb	3	; select bank3
  4735  0FB2  0791               	addwf	17,f	;volatile
  4736  0FB3  3000               	movlw	0
  4737  0FB4  3D92               	addwfc	18,f	;volatile
  4738  0FB5  2F94               	goto	l3159
  4739  0FB6                     __end_of_eecpymem:	
  4740                           
  4741                           	psect	text16
  4742  0E00                     __ptext16:	
  4743 ;; *************** function ___lwtoft *****************
  4744 ;; Defined at:
  4745 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  c               2    8[BANK0 ] unsigned int 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  3    8[BANK0 ] float 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0, pclath, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4759 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;Total ram usage:        4 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    4
  4766 ;; This function calls:
  4767 ;;		___ftpack
  4768 ;; This function is called by:
  4769 ;;		_main
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           
  4774                           ;psect for function ___lwtoft
  4775  0E00                     ___lwtoft:	
  4776                           
  4777                           ;incstack = 0
  4778                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4779  0E00  0020               	movlb	0	; select bank0
  4780  0E01  0828               	movf	___lwtoft@c,w
  4781  0E02  00A0               	movwf	___ftpack@arg
  4782  0E03  0829               	movf	___lwtoft@c+1,w
  4783  0E04  00A1               	movwf	___ftpack@arg+1
  4784  0E05  01A2               	clrf	___ftpack@arg+2
  4785  0E06  308E               	movlw	142
  4786  0E07  00AB               	movwf	??___lwtoft
  4787  0E08  082B               	movf	??___lwtoft,w
  4788  0E09  00A3               	movwf	___ftpack@exp
  4789  0E0A  01A4               	clrf	___ftpack@sign
  4790  0E0B  3187  2776         	fcall	___ftpack
  4791  0E0D  0020               	movlb	0	; select bank0
  4792  0E0E  0820               	movf	?___ftpack,w
  4793  0E0F  00A8               	movwf	?___lwtoft
  4794  0E10  0821               	movf	?___ftpack+1,w
  4795  0E11  00A9               	movwf	?___lwtoft+1
  4796  0E12  0822               	movf	?___ftpack+2,w
  4797  0E13  00AA               	movwf	?___lwtoft+2
  4798  0E14  0008               	return
  4799  0E15                     __end_of___lwtoft:	
  4800                           
  4801                           	psect	text17
  4802  0F4B                     __ptext17:	
  4803 ;; *************** function ___lwdiv *****************
  4804 ;; Defined at:
  4805 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  divisor         2    0[BANK0 ] unsigned int 
  4808 ;;  dividend        2    2[BANK0 ] unsigned int 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  quotient        2    6[BANK0 ] unsigned int 
  4811 ;;  counter         1    5[BANK0 ] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  2    0[BANK0 ] unsigned int 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4821 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4822 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;Total ram usage:        8 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:    3
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_main
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           
  4836                           ;psect for function ___lwdiv
  4837  0F4B                     ___lwdiv:	
  4838                           
  4839                           ;incstack = 0
  4840                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4841  0F4B  0020               	movlb	0	; select bank0
  4842  0F4C  01A6               	clrf	___lwdiv@quotient
  4843  0F4D  01A7               	clrf	___lwdiv@quotient+1
  4844  0F4E  0820               	movf	___lwdiv@divisor,w
  4845  0F4F  0421               	iorwf	___lwdiv@divisor+1,w
  4846  0F50  1903               	btfsc	3,2
  4847  0F51  2F7B               	goto	l3803
  4848  0F52  01A5               	clrf	___lwdiv@counter
  4849  0F53  0AA5               	incf	___lwdiv@counter,f
  4850  0F54                     l3791:	
  4851  0F54  1BA1               	btfsc	___lwdiv@divisor+1,7
  4852  0F55  2F60               	goto	l3793
  4853  0F56  3001               	movlw	1
  4854  0F57                     u4175:	
  4855  0F57  35A0               	lslf	___lwdiv@divisor,f
  4856  0F58  0DA1               	rlf	___lwdiv@divisor+1,f
  4857  0F59  0B89               	decfsz	9,f
  4858  0F5A  2F57               	goto	u4175
  4859  0F5B  3001               	movlw	1
  4860  0F5C  00A4               	movwf	??___lwdiv
  4861  0F5D  0824               	movf	??___lwdiv,w
  4862  0F5E  07A5               	addwf	___lwdiv@counter,f
  4863  0F5F  2F54               	goto	l3791
  4864  0F60                     l3793:	
  4865  0F60  3001               	movlw	1
  4866  0F61                     u4195:	
  4867  0F61  35A6               	lslf	___lwdiv@quotient,f
  4868  0F62  0DA7               	rlf	___lwdiv@quotient+1,f
  4869  0F63  0B89               	decfsz	9,f
  4870  0F64  2F61               	goto	u4195
  4871  0F65  0821               	movf	___lwdiv@divisor+1,w
  4872  0F66  0223               	subwf	___lwdiv@dividend+1,w
  4873  0F67  1D03               	skipz
  4874  0F68  2F6B               	goto	u4205
  4875  0F69  0820               	movf	___lwdiv@divisor,w
  4876  0F6A  0222               	subwf	___lwdiv@dividend,w
  4877  0F6B                     u4205:	
  4878  0F6B  1C03               	skipc
  4879  0F6C  2F72               	goto	l3799
  4880  0F6D  0820               	movf	___lwdiv@divisor,w
  4881  0F6E  02A2               	subwf	___lwdiv@dividend,f
  4882  0F6F  0821               	movf	___lwdiv@divisor+1,w
  4883  0F70  3BA3               	subwfb	___lwdiv@dividend+1,f
  4884  0F71  1426               	bsf	___lwdiv@quotient,0
  4885  0F72                     l3799:	
  4886  0F72  3001               	movlw	1
  4887  0F73                     u4215:	
  4888  0F73  36A1               	lsrf	___lwdiv@divisor+1,f
  4889  0F74  0CA0               	rrf	___lwdiv@divisor,f
  4890  0F75  0B89               	decfsz	9,f
  4891  0F76  2F73               	goto	u4215
  4892  0F77  3001               	movlw	1
  4893  0F78  02A5               	subwf	___lwdiv@counter,f
  4894  0F79  1D03               	btfss	3,2
  4895  0F7A  2F60               	goto	l3793
  4896  0F7B                     l3803:	
  4897  0F7B  0827               	movf	___lwdiv@quotient+1,w
  4898  0F7C  00A1               	movwf	?___lwdiv+1
  4899  0F7D  0826               	movf	___lwdiv@quotient,w
  4900  0F7E  00A0               	movwf	?___lwdiv
  4901  0F7F  0008               	return
  4902  0F80                     __end_of___lwdiv:	
  4903                           
  4904                           	psect	text18
  4905  06EF                     __ptext18:	
  4906 ;; *************** function ___fttol *****************
  4907 ;; Defined at:
  4908 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  f1              3   41[BANK0 ] float 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  lval            4   50[BANK0 ] unsigned long 
  4913 ;;  exp1            1   54[BANK0 ] unsigned char 
  4914 ;;  sign1           1   49[BANK0 ] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  4   41[BANK0 ] long 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4925 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;Total ram usage:       14 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    3
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_main
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function ___fttol
  4940  06EF                     ___fttol:	
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4944  06EF  0020               	movlb	0	; select bank0
  4945  06F0  0849               	movf	___fttol@f1,w
  4946  06F1  00CD               	movwf	??___fttol
  4947  06F2  084A               	movf	___fttol@f1+1,w
  4948  06F3  00CE               	movwf	??___fttol+1
  4949  06F4  084B               	movf	___fttol@f1+2,w
  4950  06F5  00CF               	movwf	??___fttol+2
  4951  06F6  1003               	clrc
  4952  06F7  0D4E               	rlf	??___fttol+1,w
  4953  06F8  0D4F               	rlf	??___fttol+2,w
  4954  06F9  00D0               	movwf	??___fttol+3
  4955  06FA  0850               	movf	??___fttol+3,w
  4956  06FB  00D6               	movwf	___fttol@exp1
  4957  06FC  0856               	movf	___fttol@exp1,w
  4958  06FD  1D03               	btfss	3,2
  4959  06FE  2F08               	goto	l3745
  4960  06FF  3000               	movlw	0
  4961  0700  00CC               	movwf	?___fttol+3
  4962  0701  3000               	movlw	0
  4963  0702  00CB               	movwf	?___fttol+2
  4964  0703  3000               	movlw	0
  4965  0704  00CA               	movwf	?___fttol+1
  4966  0705  3000               	movlw	0
  4967  0706  00C9               	movwf	?___fttol
  4968  0707  0008               	return
  4969  0708                     l3745:	
  4970  0708  0849               	movf	___fttol@f1,w
  4971  0709  00CD               	movwf	??___fttol
  4972  070A  084A               	movf	___fttol@f1+1,w
  4973  070B  00CE               	movwf	??___fttol+1
  4974  070C  084B               	movf	___fttol@f1+2,w
  4975  070D  00CF               	movwf	??___fttol+2
  4976  070E  3017               	movlw	23
  4977  070F                     u4075:	
  4978  070F  36CF               	lsrf	??___fttol+2,f
  4979  0710  0CCE               	rrf	??___fttol+1,f
  4980  0711  0CCD               	rrf	??___fttol,f
  4981  0712  0B89               	decfsz	9,f
  4982  0713  2F0F               	goto	u4075
  4983  0714  084D               	movf	??___fttol,w
  4984  0715  00D0               	movwf	??___fttol+3
  4985  0716  0850               	movf	??___fttol+3,w
  4986  0717  00D1               	movwf	___fttol@sign1
  4987  0718  17CA               	bsf	___fttol@f1+1,7
  4988  0719  30FF               	movlw	255
  4989  071A  05C9               	andwf	___fttol@f1,f
  4990  071B  30FF               	movlw	255
  4991  071C  05CA               	andwf	___fttol@f1+1,f
  4992  071D  3000               	movlw	0
  4993  071E  05CB               	andwf	___fttol@f1+2,f
  4994  071F  0849               	movf	___fttol@f1,w
  4995  0720  00D2               	movwf	___fttol@lval
  4996  0721  084A               	movf	___fttol@f1+1,w
  4997  0722  00D3               	movwf	___fttol@lval+1
  4998  0723  084B               	movf	___fttol@f1+2,w
  4999  0724  00D4               	movwf	___fttol@lval+2
  5000  0725  01D5               	clrf	___fttol@lval+3
  5001  0726  308E               	movlw	142
  5002  0727  02D6               	subwf	___fttol@exp1,f
  5003  0728  1FD6               	btfss	___fttol@exp1,7
  5004  0729  2F46               	goto	l3765
  5005  072A  0856               	movf	___fttol@exp1,w
  5006  072B  3A80               	xorlw	128
  5007  072C  3E8F               	addlw	143
  5008  072D  1803               	skipnc
  5009  072E  2F38               	goto	l3763
  5010  072F  3000               	movlw	0
  5011  0730  00CC               	movwf	?___fttol+3
  5012  0731  3000               	movlw	0
  5013  0732  00CB               	movwf	?___fttol+2
  5014  0733  3000               	movlw	0
  5015  0734  00CA               	movwf	?___fttol+1
  5016  0735  3000               	movlw	0
  5017  0736  00C9               	movwf	?___fttol
  5018  0737  0008               	return
  5019  0738                     l3763:	
  5020  0738  3001               	movlw	1
  5021  0739                     u4105:	
  5022  0739  36D5               	lsrf	___fttol@lval+3,f
  5023  073A  0CD4               	rrf	___fttol@lval+2,f
  5024  073B  0CD3               	rrf	___fttol@lval+1,f
  5025  073C  0CD2               	rrf	___fttol@lval,f
  5026  073D  0B89               	decfsz	9,f
  5027  073E  2F39               	goto	u4105
  5028  073F  3001               	movlw	1
  5029  0740  00CD               	movwf	??___fttol
  5030  0741  084D               	movf	??___fttol,w
  5031  0742  07D6               	addwf	___fttol@exp1,f
  5032  0743  1903               	btfsc	3,2
  5033  0744  2F5F               	goto	l3773
  5034  0745  2F38               	goto	l3763
  5035  0746                     l3765:	
  5036  0746  3018               	movlw	24
  5037  0747  0256               	subwf	___fttol@exp1,w
  5038  0748  1C03               	skipc
  5039  0749  2F5C               	goto	l959
  5040  074A  3000               	movlw	0
  5041  074B  00CC               	movwf	?___fttol+3
  5042  074C  3000               	movlw	0
  5043  074D  00CB               	movwf	?___fttol+2
  5044  074E  3000               	movlw	0
  5045  074F  00CA               	movwf	?___fttol+1
  5046  0750  3000               	movlw	0
  5047  0751  00C9               	movwf	?___fttol
  5048  0752  0008               	return
  5049  0753                     l3771:	
  5050  0753  3001               	movlw	1
  5051  0754                     u4135:	
  5052  0754  35D2               	lslf	___fttol@lval,f
  5053  0755  0DD3               	rlf	___fttol@lval+1,f
  5054  0756  0DD4               	rlf	___fttol@lval+2,f
  5055  0757  0DD5               	rlf	___fttol@lval+3,f
  5056  0758  0B89               	decfsz	9,f
  5057  0759  2F54               	goto	u4135
  5058  075A  3001               	movlw	1
  5059  075B  02D6               	subwf	___fttol@exp1,f
  5060  075C                     l959:	
  5061  075C  0856               	movf	___fttol@exp1,w
  5062  075D  1D03               	btfss	3,2
  5063  075E  2F53               	goto	l3771
  5064  075F                     l3773:	
  5065  075F  0851               	movf	___fttol@sign1,w
  5066  0760  1903               	btfsc	3,2
  5067  0761  2F6D               	goto	l3777
  5068  0762  09D2               	comf	___fttol@lval,f
  5069  0763  09D3               	comf	___fttol@lval+1,f
  5070  0764  09D4               	comf	___fttol@lval+2,f
  5071  0765  09D5               	comf	___fttol@lval+3,f
  5072  0766  0AD2               	incf	___fttol@lval,f
  5073  0767  1903               	skipnz
  5074  0768  0AD3               	incf	___fttol@lval+1,f
  5075  0769  1903               	skipnz
  5076  076A  0AD4               	incf	___fttol@lval+2,f
  5077  076B  1903               	skipnz
  5078  076C  0AD5               	incf	___fttol@lval+3,f
  5079  076D                     l3777:	
  5080  076D  0855               	movf	___fttol@lval+3,w
  5081  076E  00CC               	movwf	?___fttol+3
  5082  076F  0854               	movf	___fttol@lval+2,w
  5083  0770  00CB               	movwf	?___fttol+2
  5084  0771  0853               	movf	___fttol@lval+1,w
  5085  0772  00CA               	movwf	?___fttol+1
  5086  0773  0852               	movf	___fttol@lval,w
  5087  0774  00C9               	movwf	?___fttol
  5088  0775  0008               	return
  5089  0776                     __end_of___fttol:	
  5090                           
  5091                           	psect	text19
  5092  063B                     __ptext19:	
  5093 ;; *************** function ___ftmul *****************
  5094 ;; Defined at:
  5095 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  f1              3   12[BANK0 ] float 
  5098 ;;  f2              3   15[BANK0 ] float 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  5101 ;;  sign            1   27[BANK0 ] unsigned char 
  5102 ;;  cntr            1   26[BANK0 ] unsigned char 
  5103 ;;  exp             1   22[BANK0 ] unsigned char 
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  3   12[BANK0 ] float 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2, status,0, pclath, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5113 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5115 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;Total ram usage:       16 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:    4
  5120 ;; This function calls:
  5121 ;;		___ftpack
  5122 ;; This function is called by:
  5123 ;;		_main
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           
  5128                           ;psect for function ___ftmul
  5129  063B                     ___ftmul:	
  5130                           
  5131                           ;incstack = 0
  5132                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5133  063B  0020               	movlb	0	; select bank0
  5134  063C  082C               	movf	___ftmul@f1,w
  5135  063D  00B2               	movwf	??___ftmul
  5136  063E  082D               	movf	___ftmul@f1+1,w
  5137  063F  00B3               	movwf	??___ftmul+1
  5138  0640  082E               	movf	___ftmul@f1+2,w
  5139  0641  00B4               	movwf	??___ftmul+2
  5140  0642  1003               	clrc
  5141  0643  0D33               	rlf	??___ftmul+1,w
  5142  0644  0D34               	rlf	??___ftmul+2,w
  5143  0645  00B5               	movwf	??___ftmul+3
  5144  0646  0835               	movf	??___ftmul+3,w
  5145  0647  00B6               	movwf	___ftmul@exp
  5146  0648  0836               	movf	___ftmul@exp,w
  5147  0649  1D03               	btfss	3,2
  5148  064A  2E52               	goto	l3695
  5149  064B  3000               	movlw	0
  5150  064C  00AC               	movwf	?___ftmul
  5151  064D  3000               	movlw	0
  5152  064E  00AD               	movwf	?___ftmul+1
  5153  064F  3000               	movlw	0
  5154  0650  00AE               	movwf	?___ftmul+2
  5155  0651  0008               	return
  5156  0652                     l3695:	
  5157  0652  082F               	movf	___ftmul@f2,w
  5158  0653  00B2               	movwf	??___ftmul
  5159  0654  0830               	movf	___ftmul@f2+1,w
  5160  0655  00B3               	movwf	??___ftmul+1
  5161  0656  0831               	movf	___ftmul@f2+2,w
  5162  0657  00B4               	movwf	??___ftmul+2
  5163  0658  1003               	clrc
  5164  0659  0D33               	rlf	??___ftmul+1,w
  5165  065A  0D34               	rlf	??___ftmul+2,w
  5166  065B  00B5               	movwf	??___ftmul+3
  5167  065C  0835               	movf	??___ftmul+3,w
  5168  065D  00BB               	movwf	___ftmul@sign
  5169  065E  083B               	movf	___ftmul@sign,w
  5170  065F  1D03               	btfss	3,2
  5171  0660  2E68               	goto	l3701
  5172  0661  3000               	movlw	0
  5173  0662  00AC               	movwf	?___ftmul
  5174  0663  3000               	movlw	0
  5175  0664  00AD               	movwf	?___ftmul+1
  5176  0665  3000               	movlw	0
  5177  0666  00AE               	movwf	?___ftmul+2
  5178  0667  0008               	return
  5179  0668                     l3701:	
  5180  0668  083B               	movf	___ftmul@sign,w
  5181  0669  3E7B               	addlw	123
  5182  066A  00B2               	movwf	??___ftmul
  5183  066B  0832               	movf	??___ftmul,w
  5184  066C  07B6               	addwf	___ftmul@exp,f
  5185  066D  082C               	movf	___ftmul@f1,w
  5186  066E  00B2               	movwf	??___ftmul
  5187  066F  082D               	movf	___ftmul@f1+1,w
  5188  0670  00B3               	movwf	??___ftmul+1
  5189  0671  082E               	movf	___ftmul@f1+2,w
  5190  0672  00B4               	movwf	??___ftmul+2
  5191  0673  3010               	movlw	16
  5192  0674                     u3965:	
  5193  0674  36B4               	lsrf	??___ftmul+2,f
  5194  0675  0CB3               	rrf	??___ftmul+1,f
  5195  0676  0CB2               	rrf	??___ftmul,f
  5196  0677  0B89               	decfsz	9,f
  5197  0678  2E74               	goto	u3965
  5198  0679  0832               	movf	??___ftmul,w
  5199  067A  00B5               	movwf	??___ftmul+3
  5200  067B  0835               	movf	??___ftmul+3,w
  5201  067C  00BB               	movwf	___ftmul@sign
  5202  067D  082F               	movf	___ftmul@f2,w
  5203  067E  00B2               	movwf	??___ftmul
  5204  067F  0830               	movf	___ftmul@f2+1,w
  5205  0680  00B3               	movwf	??___ftmul+1
  5206  0681  0831               	movf	___ftmul@f2+2,w
  5207  0682  00B4               	movwf	??___ftmul+2
  5208  0683  3010               	movlw	16
  5209  0684                     u3975:	
  5210  0684  36B4               	lsrf	??___ftmul+2,f
  5211  0685  0CB3               	rrf	??___ftmul+1,f
  5212  0686  0CB2               	rrf	??___ftmul,f
  5213  0687  0B89               	decfsz	9,f
  5214  0688  2E84               	goto	u3975
  5215  0689  0832               	movf	??___ftmul,w
  5216  068A  00B5               	movwf	??___ftmul+3
  5217  068B  0835               	movf	??___ftmul+3,w
  5218  068C  06BB               	xorwf	___ftmul@sign,f
  5219  068D  3080               	movlw	128
  5220  068E  00B2               	movwf	??___ftmul
  5221  068F  0832               	movf	??___ftmul,w
  5222  0690  05BB               	andwf	___ftmul@sign,f
  5223  0691  17AD               	bsf	___ftmul@f1+1,7
  5224  0692  17B0               	bsf	___ftmul@f2+1,7
  5225  0693  30FF               	movlw	255
  5226  0694  05AF               	andwf	___ftmul@f2,f
  5227  0695  30FF               	movlw	255
  5228  0696  05B0               	andwf	___ftmul@f2+1,f
  5229  0697  3000               	movlw	0
  5230  0698  05B1               	andwf	___ftmul@f2+2,f
  5231  0699  3000               	movlw	0
  5232  069A  00B7               	movwf	___ftmul@f3_as_product
  5233  069B  3000               	movlw	0
  5234  069C  00B8               	movwf	___ftmul@f3_as_product+1
  5235  069D  3000               	movlw	0
  5236  069E  00B9               	movwf	___ftmul@f3_as_product+2
  5237  069F  3007               	movlw	7
  5238  06A0  00B2               	movwf	??___ftmul
  5239  06A1  0832               	movf	??___ftmul,w
  5240  06A2  00BA               	movwf	___ftmul@cntr
  5241  06A3                     l3713:	
  5242  06A3  1C2C               	btfss	___ftmul@f1,0
  5243  06A4  2EAB               	goto	l3717
  5244  06A5  082F               	movf	___ftmul@f2,w
  5245  06A6  07B7               	addwf	___ftmul@f3_as_product,f
  5246  06A7  0830               	movf	___ftmul@f2+1,w
  5247  06A8  3DB8               	addwfc	___ftmul@f3_as_product+1,f
  5248  06A9  0831               	movf	___ftmul@f2+2,w
  5249  06AA  3DB9               	addwfc	___ftmul@f3_as_product+2,f
  5250  06AB                     l3717:	
  5251  06AB  3001               	movlw	1
  5252  06AC                     u3995:	
  5253  06AC  36AE               	lsrf	___ftmul@f1+2,f
  5254  06AD  0CAD               	rrf	___ftmul@f1+1,f
  5255  06AE  0CAC               	rrf	___ftmul@f1,f
  5256  06AF  0B89               	decfsz	9,f
  5257  06B0  2EAC               	goto	u3995
  5258  06B1  3001               	movlw	1
  5259  06B2                     u4005:	
  5260  06B2  35AF               	lslf	___ftmul@f2,f
  5261  06B3  0DB0               	rlf	___ftmul@f2+1,f
  5262  06B4  0DB1               	rlf	___ftmul@f2+2,f
  5263  06B5  0B89               	decfsz	9,f
  5264  06B6  2EB2               	goto	u4005
  5265  06B7  3001               	movlw	1
  5266  06B8  02BA               	subwf	___ftmul@cntr,f
  5267  06B9  1D03               	btfss	3,2
  5268  06BA  2EA3               	goto	l3713
  5269  06BB  3009               	movlw	9
  5270  06BC  00B2               	movwf	??___ftmul
  5271  06BD  0832               	movf	??___ftmul,w
  5272  06BE  00BA               	movwf	___ftmul@cntr
  5273  06BF                     l3725:	
  5274  06BF  1C2C               	btfss	___ftmul@f1,0
  5275  06C0  2EC7               	goto	l3729
  5276  06C1  082F               	movf	___ftmul@f2,w
  5277  06C2  07B7               	addwf	___ftmul@f3_as_product,f
  5278  06C3  0830               	movf	___ftmul@f2+1,w
  5279  06C4  3DB8               	addwfc	___ftmul@f3_as_product+1,f
  5280  06C5  0831               	movf	___ftmul@f2+2,w
  5281  06C6  3DB9               	addwfc	___ftmul@f3_as_product+2,f
  5282  06C7                     l3729:	
  5283  06C7  3001               	movlw	1
  5284  06C8                     u4035:	
  5285  06C8  36AE               	lsrf	___ftmul@f1+2,f
  5286  06C9  0CAD               	rrf	___ftmul@f1+1,f
  5287  06CA  0CAC               	rrf	___ftmul@f1,f
  5288  06CB  0B89               	decfsz	9,f
  5289  06CC  2EC8               	goto	u4035
  5290  06CD  3001               	movlw	1
  5291  06CE                     u4045:	
  5292  06CE  36B9               	lsrf	___ftmul@f3_as_product+2,f
  5293  06CF  0CB8               	rrf	___ftmul@f3_as_product+1,f
  5294  06D0  0CB7               	rrf	___ftmul@f3_as_product,f
  5295  06D1  0B89               	decfsz	9,f
  5296  06D2  2ECE               	goto	u4045
  5297  06D3  3001               	movlw	1
  5298  06D4  02BA               	subwf	___ftmul@cntr,f
  5299  06D5  1D03               	btfss	3,2
  5300  06D6  2EBF               	goto	l3725
  5301  06D7  0837               	movf	___ftmul@f3_as_product,w
  5302  06D8  00A0               	movwf	___ftpack@arg
  5303  06D9  0838               	movf	___ftmul@f3_as_product+1,w
  5304  06DA  00A1               	movwf	___ftpack@arg+1
  5305  06DB  0839               	movf	___ftmul@f3_as_product+2,w
  5306  06DC  00A2               	movwf	___ftpack@arg+2
  5307  06DD  0836               	movf	___ftmul@exp,w
  5308  06DE  00B2               	movwf	??___ftmul
  5309  06DF  0832               	movf	??___ftmul,w
  5310  06E0  00A3               	movwf	___ftpack@exp
  5311  06E1  083B               	movf	___ftmul@sign,w
  5312  06E2  00B3               	movwf	??___ftmul+1
  5313  06E3  0833               	movf	??___ftmul+1,w
  5314  06E4  00A4               	movwf	___ftpack@sign
  5315  06E5  3187  2776         	fcall	___ftpack
  5316  06E7  0020               	movlb	0	; select bank0
  5317  06E8  0820               	movf	?___ftpack,w
  5318  06E9  00AC               	movwf	?___ftmul
  5319  06EA  0821               	movf	?___ftpack+1,w
  5320  06EB  00AD               	movwf	?___ftmul+1
  5321  06EC  0822               	movf	?___ftpack+2,w
  5322  06ED  00AE               	movwf	?___ftmul+2
  5323  06EE  0008               	return
  5324  06EF                     __end_of___ftmul:	
  5325                           
  5326                           	psect	text20
  5327  0545                     __ptext20:	
  5328 ;; *************** function ___ftadd *****************
  5329 ;; Defined at:
  5330 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;  f1              3   28[BANK0 ] float 
  5333 ;;  f2              3   31[BANK0 ] float 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  exp1            1   40[BANK0 ] unsigned char 
  5336 ;;  exp2            1   39[BANK0 ] unsigned char 
  5337 ;;  sign            1   38[BANK0 ] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  3   28[BANK0 ] float 
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, pclath, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5347 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5351 ;;Total ram usage:       13 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    4
  5354 ;; This function calls:
  5355 ;;		___ftpack
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function ___ftadd
  5363  0545                     ___ftadd:	
  5364                           
  5365                           ;incstack = 0
  5366                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5367  0545  0020               	movlb	0	; select bank0
  5368  0546  083C               	movf	___ftadd@f1,w
  5369  0547  00C2               	movwf	??___ftadd
  5370  0548  083D               	movf	___ftadd@f1+1,w
  5371  0549  00C3               	movwf	??___ftadd+1
  5372  054A  083E               	movf	___ftadd@f1+2,w
  5373  054B  00C4               	movwf	??___ftadd+2
  5374  054C  1003               	clrc
  5375  054D  0D43               	rlf	??___ftadd+1,w
  5376  054E  0D44               	rlf	??___ftadd+2,w
  5377  054F  00C5               	movwf	??___ftadd+3
  5378  0550  0845               	movf	??___ftadd+3,w
  5379  0551  00C8               	movwf	___ftadd@exp1
  5380  0552  083F               	movf	___ftadd@f2,w
  5381  0553  00C2               	movwf	??___ftadd
  5382  0554  0840               	movf	___ftadd@f2+1,w
  5383  0555  00C3               	movwf	??___ftadd+1
  5384  0556  0841               	movf	___ftadd@f2+2,w
  5385  0557  00C4               	movwf	??___ftadd+2
  5386  0558  1003               	clrc
  5387  0559  0D43               	rlf	??___ftadd+1,w
  5388  055A  0D44               	rlf	??___ftadd+2,w
  5389  055B  00C5               	movwf	??___ftadd+3
  5390  055C  0845               	movf	??___ftadd+3,w
  5391  055D  00C7               	movwf	___ftadd@exp2
  5392  055E  0848               	movf	___ftadd@exp1,w
  5393  055F  1903               	btfsc	3,2
  5394  0560  2D6D               	goto	l3625
  5395  0561  0847               	movf	___ftadd@exp2,w
  5396  0562  0248               	subwf	___ftadd@exp1,w
  5397  0563  1803               	skipnc
  5398  0564  2D74               	goto	l3629
  5399  0565  0348               	decf	___ftadd@exp1,w
  5400  0566  3AFF               	xorlw	255
  5401  0567  0747               	addwf	___ftadd@exp2,w
  5402  0568  00C2               	movwf	??___ftadd
  5403  0569  3019               	movlw	25
  5404  056A  0242               	subwf	??___ftadd,w
  5405  056B  1C03               	skipc
  5406  056C  2D74               	goto	l3629
  5407  056D                     l3625:	
  5408  056D  083F               	movf	___ftadd@f2,w
  5409  056E  00BC               	movwf	?___ftadd
  5410  056F  0840               	movf	___ftadd@f2+1,w
  5411  0570  00BD               	movwf	?___ftadd+1
  5412  0571  0841               	movf	___ftadd@f2+2,w
  5413  0572  00BE               	movwf	?___ftadd+2
  5414  0573  0008               	return
  5415  0574                     l3629:	
  5416  0574  0847               	movf	___ftadd@exp2,w
  5417  0575  1903               	btfsc	3,2
  5418  0576  0008               	return
  5419  0577  0848               	movf	___ftadd@exp1,w
  5420  0578  0247               	subwf	___ftadd@exp2,w
  5421  0579  1803               	skipnc
  5422  057A  2D83               	goto	l3635
  5423  057B  0347               	decf	___ftadd@exp2,w
  5424  057C  3AFF               	xorlw	255
  5425  057D  0748               	addwf	___ftadd@exp1,w
  5426  057E  00C2               	movwf	??___ftadd
  5427  057F  3019               	movlw	25
  5428  0580  0242               	subwf	??___ftadd,w
  5429  0581  1803               	btfsc	3,0
  5430  0582  0008               	return
  5431  0583                     l3635:	
  5432  0583  3006               	movlw	6
  5433  0584  00C2               	movwf	??___ftadd
  5434  0585  0842               	movf	??___ftadd,w
  5435  0586  00C6               	movwf	___ftadd@sign
  5436  0587  1BBE               	btfsc	___ftadd@f1+2,7
  5437  0588  17C6               	bsf	___ftadd@sign,7
  5438  0589  1BC1               	btfsc	___ftadd@f2+2,7
  5439  058A  1746               	bsf	___ftadd@sign,6
  5440  058B  17BD               	bsf	___ftadd@f1+1,7
  5441  058C  30FF               	movlw	255
  5442  058D  05BC               	andwf	___ftadd@f1,f
  5443  058E  30FF               	movlw	255
  5444  058F  05BD               	andwf	___ftadd@f1+1,f
  5445  0590  3000               	movlw	0
  5446  0591  05BE               	andwf	___ftadd@f1+2,f
  5447  0592  17C0               	bsf	___ftadd@f2+1,7
  5448  0593  30FF               	movlw	255
  5449  0594  05BF               	andwf	___ftadd@f2,f
  5450  0595  30FF               	movlw	255
  5451  0596  05C0               	andwf	___ftadd@f2+1,f
  5452  0597  3000               	movlw	0
  5453  0598  05C1               	andwf	___ftadd@f2+2,f
  5454  0599  0847               	movf	___ftadd@exp2,w
  5455  059A  0248               	subwf	___ftadd@exp1,w
  5456  059B  1803               	skipnc
  5457  059C  2DBF               	goto	l3657
  5458  059D                     l3647:	
  5459  059D  3001               	movlw	1
  5460  059E                     u3805:	
  5461  059E  35BF               	lslf	___ftadd@f2,f
  5462  059F  0DC0               	rlf	___ftadd@f2+1,f
  5463  05A0  0DC1               	rlf	___ftadd@f2+2,f
  5464  05A1  0B89               	decfsz	9,f
  5465  05A2  2D9E               	goto	u3805
  5466  05A3  3001               	movlw	1
  5467  05A4  02C7               	subwf	___ftadd@exp2,f
  5468  05A5  0847               	movf	___ftadd@exp2,w
  5469  05A6  0648               	xorwf	___ftadd@exp1,w
  5470  05A7  1903               	skipnz
  5471  05A8  2DBA               	goto	l3655
  5472  05A9  3001               	movlw	1
  5473  05AA  02C6               	subwf	___ftadd@sign,f
  5474  05AB  0846               	movf	___ftadd@sign,w
  5475  05AC  3907               	andlw	7
  5476  05AD  1903               	btfsc	3,2
  5477  05AE  2DBA               	goto	l3655
  5478  05AF  2D9D               	goto	l3647
  5479  05B0                     l3653:	
  5480  05B0  3001               	movlw	1
  5481  05B1                     u3835:	
  5482  05B1  36BE               	lsrf	___ftadd@f1+2,f
  5483  05B2  0CBD               	rrf	___ftadd@f1+1,f
  5484  05B3  0CBC               	rrf	___ftadd@f1,f
  5485  05B4  0B89               	decfsz	9,f
  5486  05B5  2DB1               	goto	u3835
  5487  05B6  3001               	movlw	1
  5488  05B7  00C2               	movwf	??___ftadd
  5489  05B8  0842               	movf	??___ftadd,w
  5490  05B9  07C8               	addwf	___ftadd@exp1,f
  5491  05BA                     l3655:	
  5492  05BA  0848               	movf	___ftadd@exp1,w
  5493  05BB  0647               	xorwf	___ftadd@exp2,w
  5494  05BC  1903               	btfsc	3,2
  5495  05BD  2DE4               	goto	l899
  5496  05BE  2DB0               	goto	l3653
  5497  05BF                     l3657:	
  5498  05BF  0848               	movf	___ftadd@exp1,w
  5499  05C0  0247               	subwf	___ftadd@exp2,w
  5500  05C1  1803               	skipnc
  5501  05C2  2DE4               	goto	l899
  5502  05C3                     l3659:	
  5503  05C3  3001               	movlw	1
  5504  05C4                     u3865:	
  5505  05C4  35BC               	lslf	___ftadd@f1,f
  5506  05C5  0DBD               	rlf	___ftadd@f1+1,f
  5507  05C6  0DBE               	rlf	___ftadd@f1+2,f
  5508  05C7  0B89               	decfsz	9,f
  5509  05C8  2DC4               	goto	u3865
  5510  05C9  3001               	movlw	1
  5511  05CA  02C8               	subwf	___ftadd@exp1,f
  5512  05CB  0847               	movf	___ftadd@exp2,w
  5513  05CC  0648               	xorwf	___ftadd@exp1,w
  5514  05CD  1903               	skipnz
  5515  05CE  2DE0               	goto	l3667
  5516  05CF  3001               	movlw	1
  5517  05D0  02C6               	subwf	___ftadd@sign,f
  5518  05D1  0846               	movf	___ftadd@sign,w
  5519  05D2  3907               	andlw	7
  5520  05D3  1903               	btfsc	3,2
  5521  05D4  2DE0               	goto	l3667
  5522  05D5  2DC3               	goto	l3659
  5523  05D6                     l3665:	
  5524  05D6  3001               	movlw	1
  5525  05D7                     u3895:	
  5526  05D7  36C1               	lsrf	___ftadd@f2+2,f
  5527  05D8  0CC0               	rrf	___ftadd@f2+1,f
  5528  05D9  0CBF               	rrf	___ftadd@f2,f
  5529  05DA  0B89               	decfsz	9,f
  5530  05DB  2DD7               	goto	u3895
  5531  05DC  3001               	movlw	1
  5532  05DD  00C2               	movwf	??___ftadd
  5533  05DE  0842               	movf	??___ftadd,w
  5534  05DF  07C7               	addwf	___ftadd@exp2,f
  5535  05E0                     l3667:	
  5536  05E0  0848               	movf	___ftadd@exp1,w
  5537  05E1  0647               	xorwf	___ftadd@exp2,w
  5538  05E2  1D03               	skipz
  5539  05E3  2DD6               	goto	l3665
  5540  05E4                     l899:	
  5541  05E4  1FC6               	btfss	___ftadd@sign,7
  5542  05E5  2DF6               	goto	l3671
  5543  05E6  30FF               	movlw	255
  5544  05E7  06BC               	xorwf	___ftadd@f1,f
  5545  05E8  30FF               	movlw	255
  5546  05E9  06BD               	xorwf	___ftadd@f1+1,f
  5547  05EA  30FF               	movlw	255
  5548  05EB  06BE               	xorwf	___ftadd@f1+2,f
  5549  05EC  3001               	movlw	1
  5550  05ED  07BC               	addwf	___ftadd@f1,f
  5551  05EE  3000               	movlw	0
  5552  05EF  1803               	skipnc
  5553  05F0  3001               	movlw	1
  5554  05F1  07BD               	addwf	___ftadd@f1+1,f
  5555  05F2  3000               	movlw	0
  5556  05F3  1803               	skipnc
  5557  05F4  3001               	movlw	1
  5558  05F5  07BE               	addwf	___ftadd@f1+2,f
  5559  05F6                     l3671:	
  5560  05F6  1F46               	btfss	___ftadd@sign,6
  5561  05F7  2E08               	goto	l3675
  5562  05F8  30FF               	movlw	255
  5563  05F9  06BF               	xorwf	___ftadd@f2,f
  5564  05FA  30FF               	movlw	255
  5565  05FB  06C0               	xorwf	___ftadd@f2+1,f
  5566  05FC  30FF               	movlw	255
  5567  05FD  06C1               	xorwf	___ftadd@f2+2,f
  5568  05FE  3001               	movlw	1
  5569  05FF  07BF               	addwf	___ftadd@f2,f
  5570  0600  3000               	movlw	0
  5571  0601  1803               	skipnc
  5572  0602  3001               	movlw	1
  5573  0603  07C0               	addwf	___ftadd@f2+1,f
  5574  0604  3000               	movlw	0
  5575  0605  1803               	skipnc
  5576  0606  3001               	movlw	1
  5577  0607  07C1               	addwf	___ftadd@f2+2,f
  5578  0608                     l3675:	
  5579  0608  01C6               	clrf	___ftadd@sign
  5580  0609  083C               	movf	___ftadd@f1,w
  5581  060A  07BF               	addwf	___ftadd@f2,f
  5582  060B  083D               	movf	___ftadd@f1+1,w
  5583  060C  3DC0               	addwfc	___ftadd@f2+1,f
  5584  060D  083E               	movf	___ftadd@f1+2,w
  5585  060E  3DC1               	addwfc	___ftadd@f2+2,f
  5586  060F  1FC1               	btfss	___ftadd@f2+2,7
  5587  0610  2E23               	goto	l3685
  5588  0611  30FF               	movlw	255
  5589  0612  06BF               	xorwf	___ftadd@f2,f
  5590  0613  30FF               	movlw	255
  5591  0614  06C0               	xorwf	___ftadd@f2+1,f
  5592  0615  30FF               	movlw	255
  5593  0616  06C1               	xorwf	___ftadd@f2+2,f
  5594  0617  3001               	movlw	1
  5595  0618  07BF               	addwf	___ftadd@f2,f
  5596  0619  3000               	movlw	0
  5597  061A  1803               	skipnc
  5598  061B  3001               	movlw	1
  5599  061C  07C0               	addwf	___ftadd@f2+1,f
  5600  061D  3000               	movlw	0
  5601  061E  1803               	skipnc
  5602  061F  3001               	movlw	1
  5603  0620  07C1               	addwf	___ftadd@f2+2,f
  5604  0621  01C6               	clrf	___ftadd@sign
  5605  0622  0AC6               	incf	___ftadd@sign,f
  5606  0623                     l3685:	
  5607  0623  083F               	movf	___ftadd@f2,w
  5608  0624  00A0               	movwf	___ftpack@arg
  5609  0625  0840               	movf	___ftadd@f2+1,w
  5610  0626  00A1               	movwf	___ftpack@arg+1
  5611  0627  0841               	movf	___ftadd@f2+2,w
  5612  0628  00A2               	movwf	___ftpack@arg+2
  5613  0629  0848               	movf	___ftadd@exp1,w
  5614  062A  00C2               	movwf	??___ftadd
  5615  062B  0842               	movf	??___ftadd,w
  5616  062C  00A3               	movwf	___ftpack@exp
  5617  062D  0846               	movf	___ftadd@sign,w
  5618  062E  00C3               	movwf	??___ftadd+1
  5619  062F  0843               	movf	??___ftadd+1,w
  5620  0630  00A4               	movwf	___ftpack@sign
  5621  0631  3187  2776         	fcall	___ftpack
  5622  0633  0020               	movlb	0	; select bank0
  5623  0634  0820               	movf	?___ftpack,w
  5624  0635  00BC               	movwf	?___ftadd
  5625  0636  0821               	movf	?___ftpack+1,w
  5626  0637  00BD               	movwf	?___ftadd+1
  5627  0638  0822               	movf	?___ftpack+2,w
  5628  0639  00BE               	movwf	?___ftadd+2
  5629  063A  0008               	return
  5630  063B                     __end_of___ftadd:	
  5631                           
  5632                           	psect	text21
  5633  0776                     __ptext21:	
  5634 ;; *************** function ___ftpack *****************
  5635 ;; Defined at:
  5636 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  arg             3    0[BANK0 ] unsigned um
  5639 ;;  exp             1    3[BANK0 ] unsigned char 
  5640 ;;  sign            1    4[BANK0 ] unsigned char 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  3    0[BANK0 ] float 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5652 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;Total ram usage:        8 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    3
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		___ftadd
  5663 ;;		___ftmul
  5664 ;;		___lwtoft
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           
  5669                           ;psect for function ___ftpack
  5670  0776                     ___ftpack:	
  5671                           
  5672                           ;incstack = 0
  5673                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5674  0776  0020               	movlb	0	; select bank0
  5675  0777  0823               	movf	___ftpack@exp,w
  5676  0778  1903               	btfsc	3,2
  5677  0779  2F7F               	goto	l3507
  5678  077A  0822               	movf	___ftpack@arg+2,w
  5679  077B  0421               	iorwf	___ftpack@arg+1,w
  5680  077C  0420               	iorwf	___ftpack@arg,w
  5681  077D  1D03               	skipz
  5682  077E  2F90               	goto	l3513
  5683  077F                     l3507:	
  5684  077F  3000               	movlw	0
  5685  0780  00A0               	movwf	?___ftpack
  5686  0781  3000               	movlw	0
  5687  0782  00A1               	movwf	?___ftpack+1
  5688  0783  3000               	movlw	0
  5689  0784  00A2               	movwf	?___ftpack+2
  5690  0785  0008               	return
  5691  0786                     l3511:	
  5692  0786  3001               	movlw	1
  5693  0787  00A5               	movwf	??___ftpack
  5694  0788  0825               	movf	??___ftpack,w
  5695  0789  07A3               	addwf	___ftpack@exp,f
  5696  078A  3001               	movlw	1
  5697  078B                     u3445:	
  5698  078B  36A2               	lsrf	___ftpack@arg+2,f
  5699  078C  0CA1               	rrf	___ftpack@arg+1,f
  5700  078D  0CA0               	rrf	___ftpack@arg,f
  5701  078E  0B89               	decfsz	9,f
  5702  078F  2F8B               	goto	u3445
  5703  0790                     l3513:	
  5704  0790  30FE               	movlw	254
  5705  0791  0522               	andwf	___ftpack@arg+2,w
  5706  0792  1903               	btfsc	3,2
  5707  0793  2FA9               	goto	l868
  5708  0794  2F86               	goto	l3511
  5709  0795                     l3515:	
  5710  0795  3001               	movlw	1
  5711  0796  00A5               	movwf	??___ftpack
  5712  0797  0825               	movf	??___ftpack,w
  5713  0798  07A3               	addwf	___ftpack@exp,f
  5714  0799  3001               	movlw	1
  5715  079A  07A0               	addwf	___ftpack@arg,f
  5716  079B  3000               	movlw	0
  5717  079C  1803               	skipnc
  5718  079D  3001               	movlw	1
  5719  079E  07A1               	addwf	___ftpack@arg+1,f
  5720  079F  3000               	movlw	0
  5721  07A0  1803               	skipnc
  5722  07A1  3001               	movlw	1
  5723  07A2  07A2               	addwf	___ftpack@arg+2,f
  5724  07A3  3001               	movlw	1
  5725  07A4                     u3465:	
  5726  07A4  36A2               	lsrf	___ftpack@arg+2,f
  5727  07A5  0CA1               	rrf	___ftpack@arg+1,f
  5728  07A6  0CA0               	rrf	___ftpack@arg,f
  5729  07A7  0B89               	decfsz	9,f
  5730  07A8  2FA4               	goto	u3465
  5731  07A9                     l868:	
  5732  07A9  30FF               	movlw	255
  5733  07AA  0522               	andwf	___ftpack@arg+2,w
  5734  07AB  1903               	btfsc	3,2
  5735  07AC  2FB6               	goto	l3523
  5736  07AD  2F95               	goto	l3515
  5737  07AE                     l3521:	
  5738  07AE  3001               	movlw	1
  5739  07AF  02A3               	subwf	___ftpack@exp,f
  5740  07B0  3001               	movlw	1
  5741  07B1                     u3485:	
  5742  07B1  35A0               	lslf	___ftpack@arg,f
  5743  07B2  0DA1               	rlf	___ftpack@arg+1,f
  5744  07B3  0DA2               	rlf	___ftpack@arg+2,f
  5745  07B4  0B89               	decfsz	9,f
  5746  07B5  2FB1               	goto	u3485
  5747  07B6                     l3523:	
  5748  07B6  1BA1               	btfsc	___ftpack@arg+1,7
  5749  07B7  2FBC               	goto	l875
  5750  07B8  3002               	movlw	2
  5751  07B9  0223               	subwf	___ftpack@exp,w
  5752  07BA  1803               	skipnc
  5753  07BB  2FAE               	goto	l3521
  5754  07BC                     l875:	
  5755  07BC  1823               	btfsc	___ftpack@exp,0
  5756  07BD  2FC4               	goto	l876
  5757  07BE  30FF               	movlw	255
  5758  07BF  05A0               	andwf	___ftpack@arg,f
  5759  07C0  307F               	movlw	127
  5760  07C1  05A1               	andwf	___ftpack@arg+1,f
  5761  07C2  30FF               	movlw	255
  5762  07C3  05A2               	andwf	___ftpack@arg+2,f
  5763  07C4                     l876:	
  5764  07C4  1003               	clrc
  5765  07C5  0CA3               	rrf	___ftpack@exp,f
  5766  07C6  0823               	movf	___ftpack@exp,w
  5767  07C7  00A5               	movwf	??___ftpack
  5768  07C8  01A6               	clrf	??___ftpack+1
  5769  07C9  01A7               	clrf	??___ftpack+2
  5770  07CA  3010               	movlw	16
  5771  07CB                     u3525:	
  5772  07CB  35A5               	lslf	??___ftpack,f
  5773  07CC  0DA6               	rlf	??___ftpack+1,f
  5774  07CD  0DA7               	rlf	??___ftpack+2,f
  5775  07CE  0B89               	decfsz	9,f
  5776  07CF  2FCB               	goto	u3525
  5777  07D0  0825               	movf	??___ftpack,w
  5778  07D1  04A0               	iorwf	___ftpack@arg,f
  5779  07D2  0826               	movf	??___ftpack+1,w
  5780  07D3  04A1               	iorwf	___ftpack@arg+1,f
  5781  07D4  0827               	movf	??___ftpack+2,w
  5782  07D5  04A2               	iorwf	___ftpack@arg+2,f
  5783  07D6  0824               	movf	___ftpack@sign,w
  5784  07D7  1903               	btfsc	3,2
  5785  07D8  0008               	return
  5786  07D9  17A2               	bsf	___ftpack@arg+2,7
  5787  07DA  0008               	return
  5788  07DB                     __end_of___ftpack:	
  5789                           
  5790                           	psect	text22
  5791  0E15                     __ptext22:	
  5792 ;; *************** function _SYSTEM_Initialize *****************
  5793 ;; Defined at:
  5794 ;;		line 70 in file "mcc_generated_files/mcc.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0, pclath, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    4
  5815 ;; This function calls:
  5816 ;;		_ADC_Initialize
  5817 ;;		_EUSART_Initialize
  5818 ;;		_FVR_Initialize
  5819 ;;		_I2C2_Initialize
  5820 ;;		_OSCILLATOR_Initialize
  5821 ;;		_PIN_MANAGER_Initialize
  5822 ;;		_SPI1_Initialize
  5823 ;;		_WDT_Initialize
  5824 ;; This function is called by:
  5825 ;;		_main
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           
  5830                           ;psect for function _SYSTEM_Initialize
  5831  0E15                     _SYSTEM_Initialize:	
  5832                           
  5833                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  5834                           
  5835                           ;incstack = 0
  5836                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5837  0E15  318E  2647  318E   	fcall	_PIN_MANAGER_Initialize
  5838                           
  5839                           ;mcc.c: 74: OSCILLATOR_Initialize();
  5840  0E18  318D  2549  318E   	fcall	_OSCILLATOR_Initialize
  5841                           
  5842                           ;mcc.c: 75: WDT_Initialize();
  5843  0E1B  318D  2539  318E   	fcall	_WDT_Initialize
  5844                           
  5845                           ;mcc.c: 76: SPI1_Initialize();
  5846  0E1E  318D  253D  318E   	fcall	_SPI1_Initialize
  5847                           
  5848                           ;mcc.c: 77: I2C2_Initialize();
  5849  0E21  318E  269B  318E   	fcall	_I2C2_Initialize
  5850                           
  5851                           ;mcc.c: 78: FVR_Initialize();
  5852  0E24  318D  2535  318E   	fcall	_FVR_Initialize
  5853                           
  5854                           ;mcc.c: 79: ADC_Initialize();
  5855  0E27  318D  2550  318E   	fcall	_ADC_Initialize
  5856                           
  5857                           ;mcc.c: 80: EUSART_Initialize();
  5858  0E2A  318D  25B6         	fcall	_EUSART_Initialize
  5859  0E2C  0008               	return
  5860  0E2D                     __end_of_SYSTEM_Initialize:	
  5861                           
  5862                           	psect	text23
  5863  0D39                     __ptext23:	
  5864 ;; *************** function _WDT_Initialize *****************
  5865 ;; Defined at:
  5866 ;;		line 93 in file "mcc_generated_files/mcc.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;		None
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;Total ram usage:        0 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    3
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		_SYSTEM_Initialize
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           
  5895                           ;psect for function _WDT_Initialize
  5896  0D39                     _WDT_Initialize:	
  5897                           
  5898                           ;mcc.c: 96: WDTCON = 0x16;
  5899                           
  5900                           ;incstack = 0
  5901                           ; Regs used in _WDT_Initialize: [wreg]
  5902  0D39  3016               	movlw	22
  5903  0D3A  0021               	movlb	1	; select bank1
  5904  0D3B  0097               	movwf	23	;volatile
  5905  0D3C  0008               	return
  5906  0D3D                     __end_of_WDT_Initialize:	
  5907                           
  5908                           	psect	text24
  5909  0D3D                     __ptext24:	
  5910 ;; *************** function _SPI1_Initialize *****************
  5911 ;; Defined at:
  5912 ;;		line 63 in file "mcc_generated_files/spi1.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, status,2
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;Total ram usage:        0 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    3
  5933 ;; This function calls:
  5934 ;;		Nothing
  5935 ;; This function is called by:
  5936 ;;		_SYSTEM_Initialize
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           
  5941                           ;psect for function _SPI1_Initialize
  5942  0D3D                     _SPI1_Initialize:	
  5943                           
  5944                           ;spi1.c: 68: SSP1STAT = 0x00;
  5945                           
  5946                           ;incstack = 0
  5947                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  5948  0D3D  0024               	movlb	4	; select bank4
  5949  0D3E  0194               	clrf	20	;volatile
  5950                           
  5951                           ;spi1.c: 71: SSP1CON1 = 0x20;
  5952  0D3F  3020               	movlw	32
  5953  0D40  0095               	movwf	21	;volatile
  5954                           
  5955                           ;spi1.c: 74: SSP1ADD = 0x00;
  5956  0D41  0192               	clrf	18	;volatile
  5957  0D42  0008               	return
  5958  0D43                     __end_of_SPI1_Initialize:	
  5959                           
  5960                           	psect	text25
  5961  0E47                     __ptext25:	
  5962 ;; *************** function _PIN_MANAGER_Initialize *****************
  5963 ;; Defined at:
  5964 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    3
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_SYSTEM_Initialize
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           
  5993                           ;psect for function _PIN_MANAGER_Initialize
  5994  0E47                     _PIN_MANAGER_Initialize:	
  5995                           
  5996                           ;pin_manager.c: 57: LATA = 0x00;
  5997                           
  5998                           ;incstack = 0
  5999                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6000  0E47  0022               	movlb	2	; select bank2
  6001  0E48  018C               	clrf	12	;volatile
  6002                           
  6003                           ;pin_manager.c: 58: LATB = 0x00;
  6004  0E49  018D               	clrf	13	;volatile
  6005                           
  6006                           ;pin_manager.c: 59: LATC = 0x00;
  6007  0E4A  018E               	clrf	14	;volatile
  6008                           
  6009                           ;pin_manager.c: 64: TRISA = 0x3F;
  6010  0E4B  303F               	movlw	63
  6011  0E4C  0021               	movlb	1	; select bank1
  6012  0E4D  008C               	movwf	12	;volatile
  6013                           
  6014                           ;pin_manager.c: 65: TRISB = 0xB0;
  6015  0E4E  30B0               	movlw	176
  6016  0E4F  008D               	movwf	13	;volatile
  6017                           
  6018                           ;pin_manager.c: 66: TRISC = 0x20;
  6019  0E50  3020               	movlw	32
  6020  0E51  008E               	movwf	14	;volatile
  6021                           
  6022                           ;pin_manager.c: 71: ANSELC = 0x4F;
  6023  0E52  304F               	movlw	79
  6024  0E53  0023               	movlb	3	; select bank3
  6025  0E54  008E               	movwf	14	;volatile
  6026                           
  6027                           ;pin_manager.c: 72: ANSELB = 0x00;
  6028  0E55  018D               	clrf	13	;volatile
  6029                           
  6030                           ;pin_manager.c: 73: ANSELA = 0x17;
  6031  0E56  3017               	movlw	23
  6032  0E57  008C               	movwf	12	;volatile
  6033                           
  6034                           ;pin_manager.c: 78: WPUB = 0x00;
  6035  0E58  0024               	movlb	4	; select bank4
  6036  0E59  018D               	clrf	13	;volatile
  6037                           
  6038                           ;pin_manager.c: 79: WPUA = 0x00;
  6039  0E5A  018C               	clrf	12	;volatile
  6040                           
  6041                           ;pin_manager.c: 80: WPUC = 0x00;
  6042  0E5B  018E               	clrf	14	;volatile
  6043                           
  6044                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 1;
  6045  0E5C  0021               	movlb	1	; select bank1
  6046  0E5D  1795               	bsf	21,7	;volatile
  6047                           
  6048                           ;pin_manager.c: 87: APFCON1 = 0x00;
  6049  0E5E  0022               	movlb	2	; select bank2
  6050  0E5F  019E               	clrf	30	;volatile
  6051                           
  6052                           ;pin_manager.c: 88: APFCON0 = 0x84;
  6053  0E60  3084               	movlw	132
  6054  0E61  009D               	movwf	29	;volatile
  6055  0E62  0008               	return
  6056  0E63                     __end_of_PIN_MANAGER_Initialize:	
  6057                           
  6058                           	psect	text26
  6059  0D49                     __ptext26:	
  6060 ;; *************** function _OSCILLATOR_Initialize *****************
  6061 ;; Defined at:
  6062 ;;		line 83 in file "mcc_generated_files/mcc.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;		None
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;		None
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      void 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6080 ;;Total ram usage:        0 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    3
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_SYSTEM_Initialize
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function _OSCILLATOR_Initialize
  6092  0D49                     _OSCILLATOR_Initialize:	
  6093                           
  6094                           ;mcc.c: 86: OSCCON = 0x70;
  6095                           
  6096                           ;incstack = 0
  6097                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6098  0D49  3070               	movlw	112
  6099  0D4A  0021               	movlb	1	; select bank1
  6100  0D4B  0099               	movwf	25	;volatile
  6101                           
  6102                           ;mcc.c: 88: OSCTUNE = 0x00;
  6103  0D4C  0198               	clrf	24	;volatile
  6104                           
  6105                           ;mcc.c: 90: BORCON = 0x00;
  6106  0D4D  0022               	movlb	2	; select bank2
  6107  0D4E  0196               	clrf	22	;volatile
  6108  0D4F  0008               	return
  6109  0D50                     __end_of_OSCILLATOR_Initialize:	
  6110                           
  6111                           	psect	text27
  6112  0E9B                     __ptext27:	
  6113 ;; *************** function _I2C2_Initialize *****************
  6114 ;; Defined at:
  6115 ;;		line 196 in file "mcc_generated_files/i2c2.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;Total ram usage:        1 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    3
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_SYSTEM_Initialize
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           
  6144                           ;psect for function _I2C2_Initialize
  6145  0E9B                     _I2C2_Initialize:	
  6146                           
  6147                           ;i2c2.c: 198: i2c2_object.pTrHead = i2c2_tr_queue;
  6148                           
  6149                           ;incstack = 0
  6150                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  6151  0E9B  30DB               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6152  0E9C  0020               	movlb	0	; select bank0
  6153  0E9D  00A0               	movwf	??_I2C2_Initialize
  6154  0E9E  0820               	movf	??_I2C2_Initialize,w
  6155  0E9F  0021               	movlb	1	; select bank1
  6156  0EA0  00C1               	movwf	(low ((_i2c2_object| 0+1)))^(0+128)
  6157                           
  6158                           ;i2c2.c: 199: i2c2_object.pTrTail = i2c2_tr_queue;
  6159  0EA1  30DB               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  6160  0EA2  0020               	movlb	0	; select bank0
  6161  0EA3  00A0               	movwf	??_I2C2_Initialize
  6162  0EA4  0820               	movf	??_I2C2_Initialize,w
  6163  0EA5  0021               	movlb	1	; select bank1
  6164  0EA6  00C0               	movwf	_i2c2_object^(0+128)
  6165                           
  6166                           ;i2c2.c: 200: i2c2_object.trStatus.s.empty = 1;
  6167  0EA7  14C2               	bsf	(_i2c2_object^(0+128)+2),1
  6168                           
  6169                           ;i2c2.c: 201: i2c2_object.trStatus.s.full = 0;
  6170  0EA8  1042               	bcf	(_i2c2_object^(0+128)+2),0
  6171                           
  6172                           ;i2c2.c: 203: i2c2_object.i2cErrors = 0;
  6173  0EA9  01C4               	clrf	(_i2c2_object^(0+128)+4)
  6174                           
  6175                           ;i2c2.c: 206: SSP2STAT = 0x00;
  6176  0EAA  0024               	movlb	4	; select bank4
  6177  0EAB  019C               	clrf	28	;volatile
  6178                           
  6179                           ;i2c2.c: 208: SSP2CON1 = 0x28;
  6180  0EAC  3028               	movlw	40
  6181  0EAD  009D               	movwf	29	;volatile
  6182                           
  6183                           ;i2c2.c: 210: SSP2CON3 = 0x00;
  6184  0EAE  019F               	clrf	31	;volatile
  6185                           
  6186                           ;i2c2.c: 212: SSP2ADD = 0x03;
  6187  0EAF  3003               	movlw	3
  6188  0EB0  009A               	movwf	26	;volatile
  6189                           
  6190                           ;i2c2.c: 215: PIR4bits.SSP2IF = 0;
  6191  0EB1  0020               	movlb	0	; select bank0
  6192  0EB2  1014               	bcf	20,0	;volatile
  6193                           
  6194                           ;i2c2.c: 216: PIR4bits.BCL2IF = 0;
  6195  0EB3  1094               	bcf	20,1	;volatile
  6196                           
  6197                           ;i2c2.c: 219: PIE4bits.SSP2IE = 1;
  6198  0EB4  0021               	movlb	1	; select bank1
  6199  0EB5  1414               	bsf	20,0	;volatile
  6200                           
  6201                           ;i2c2.c: 220: PIE4bits.BCL2IE = 1;
  6202  0EB6  1494               	bsf	20,1	;volatile
  6203  0EB7  0008               	return
  6204  0EB8                     __end_of_I2C2_Initialize:	
  6205                           
  6206                           	psect	text28
  6207  0D35                     __ptext28:	
  6208 ;; *************** function _FVR_Initialize *****************
  6209 ;; Defined at:
  6210 ;;		line 57 in file "mcc_generated_files/fvr.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      void 
  6217 ;; Registers used:
  6218 ;;		wreg
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;Total ram usage:        0 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    3
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_SYSTEM_Initialize
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           
  6239                           ;psect for function _FVR_Initialize
  6240  0D35                     _FVR_Initialize:	
  6241                           
  6242                           ;fvr.c: 60: FVRCON = 0xB2;
  6243                           
  6244                           ;incstack = 0
  6245                           ; Regs used in _FVR_Initialize: [wreg]
  6246  0D35  30B2               	movlw	178
  6247  0D36  0022               	movlb	2	; select bank2
  6248  0D37  0097               	movwf	23	;volatile
  6249  0D38  0008               	return
  6250  0D39                     __end_of_FVR_Initialize:	
  6251                           
  6252                           	psect	text29
  6253  0DB6                     __ptext29:	
  6254 ;; *************** function _EUSART_Initialize *****************
  6255 ;; Defined at:
  6256 ;;		line 68 in file "mcc_generated_files/eusart.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;		None
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;		None
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  1    wreg      void 
  6263 ;; Registers used:
  6264 ;;		wreg, status,2
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;Total ram usage:        0 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    3
  6277 ;; This function calls:
  6278 ;;		Nothing
  6279 ;; This function is called by:
  6280 ;;		_SYSTEM_Initialize
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           
  6285                           ;psect for function _EUSART_Initialize
  6286  0DB6                     _EUSART_Initialize:	
  6287                           
  6288                           ;eusart.c: 71: PIE1bits.RCIE = 0;
  6289                           
  6290                           ;incstack = 0
  6291                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  6292  0DB6  0021               	movlb	1	; select bank1
  6293  0DB7  1291               	bcf	17,5	;volatile
  6294                           
  6295                           ;eusart.c: 75: BAUDCON = 0x08;
  6296  0DB8  3008               	movlw	8
  6297  0DB9  0023               	movlb	3	; select bank3
  6298  0DBA  009F               	movwf	31	;volatile
  6299                           
  6300                           ;eusart.c: 78: RCSTA = 0x90;
  6301  0DBB  3090               	movlw	144
  6302  0DBC  009D               	movwf	29	;volatile
  6303                           
  6304                           ;eusart.c: 81: TXSTA = 0x24;
  6305  0DBD  3024               	movlw	36
  6306  0DBE  009E               	movwf	30	;volatile
  6307                           
  6308                           ;eusart.c: 84: SPBRGL = 0x22;
  6309  0DBF  3022               	movlw	34
  6310  0DC0  009B               	movwf	27	;volatile
  6311                           
  6312                           ;eusart.c: 87: SPBRGH = 0x00;
  6313  0DC1  019C               	clrf	28	;volatile
  6314                           
  6315                           ;eusart.c: 91: eusartRxHead = 0;
  6316  0DC2  01F3               	clrf	_eusartRxHead	;volatile
  6317                           
  6318                           ;eusart.c: 92: eusartRxTail = 0;
  6319  0DC3  01F2               	clrf	_eusartRxTail	;volatile
  6320                           
  6321                           ;eusart.c: 93: eusartRxCount = 0;
  6322  0DC4  01F1               	clrf	_eusartRxCount	;volatile
  6323                           
  6324                           ;eusart.c: 96: PIE1bits.RCIE = 1;
  6325  0DC5  0021               	movlb	1	; select bank1
  6326  0DC6  1691               	bsf	17,5	;volatile
  6327  0DC7  0008               	return
  6328  0DC8                     __end_of_EUSART_Initialize:	
  6329                           
  6330                           	psect	text30
  6331  0D50                     __ptext30:	
  6332 ;; *************** function _ADC_Initialize *****************
  6333 ;; Defined at:
  6334 ;;		line 62 in file "mcc_generated_files/adc.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;Total ram usage:        0 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    3
  6355 ;; This function calls:
  6356 ;;		Nothing
  6357 ;; This function is called by:
  6358 ;;		_SYSTEM_Initialize
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           
  6363                           ;psect for function _ADC_Initialize
  6364  0D50                     _ADC_Initialize:	
  6365                           
  6366                           ;adc.c: 67: ADCON0 = 0x01;
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6370  0D50  3001               	movlw	1
  6371  0D51  0021               	movlb	1	; select bank1
  6372  0D52  009D               	movwf	29	;volatile
  6373                           
  6374                           ;adc.c: 70: ADCON1 = 0xD3;
  6375  0D53  30D3               	movlw	211
  6376  0D54  009E               	movwf	30	;volatile
  6377                           
  6378                           ;adc.c: 73: ADRESL = 0x00;
  6379  0D55  019B               	clrf	27	;volatile
  6380                           
  6381                           ;adc.c: 76: ADRESH = 0x00;
  6382  0D56  019C               	clrf	28	;volatile
  6383  0D57  0008               	return
  6384  0D58                     __end_of_ADC_Initialize:	
  6385                           
  6386                           	psect	text31
  6387  0D32                     __ptext31:	
  6388 ;; *************** function _PACKET_Initialize *****************
  6389 ;; Defined at:
  6390 ;;		line 19 in file "packet.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;		None
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		status,2
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6408 ;;Total ram usage:        0 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    3
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_main
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           
  6419                           ;psect for function _PACKET_Initialize
  6420  0D32                     _PACKET_Initialize:	
  6421                           
  6422                           ;packet.c: 21: PACKET_RxState = PACKET_State_idle;
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in _PACKET_Initialize: [status,2]
  6426  0D32  0020               	movlb	0	; select bank0
  6427  0D33  01DB               	clrf	_PACKET_RxState
  6428  0D34  0008               	return
  6429  0D35                     __end_of_PACKET_Initialize:	
  6430                           
  6431                           	psect	text32
  6432  0DDA                     __ptext32:	
  6433 ;; *************** function _PACKET_Available *****************
  6434 ;; Defined at:
  6435 ;;		line 106 in file "packet.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  b               1   22[BANK0 ] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      unsigned char 
  6442 ;; Registers used:
  6443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;Total ram usage:        2 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    5
  6456 ;; This function calls:
  6457 ;;		_EUSART_Read
  6458 ;;		_PACKET_EUSART_Bytes_Available
  6459 ;;		_PACKET_handle_byte
  6460 ;; This function is called by:
  6461 ;;		_main
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           
  6466                           ;psect for function _PACKET_Available
  6467  0DDA                     _PACKET_Available:	
  6468                           
  6469                           ;packet.c: 108: uint8_t b;
  6470                           ;packet.c: 109: if (PACKET_EUSART_Bytes_Available())
  6471                           
  6472                           ;incstack = 0
  6473                           ; Regs used in _PACKET_Available: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6474  0DDA  318D  252F  318D   	fcall	_PACKET_EUSART_Bytes_Available
  6475  0DDD  3A00               	xorlw	0
  6476  0DDE  1903               	skipnz
  6477  0DDF  2DEB               	goto	l3557
  6478                           
  6479                           ;packet.c: 110: {
  6480                           ;packet.c: 111: b = EUSART_Read();
  6481  0DE0  318E  26B8  318D   	fcall	_EUSART_Read
  6482  0DE3  0020               	movlb	0	; select bank0
  6483  0DE4  00B5               	movwf	??_PACKET_Available
  6484  0DE5  0835               	movf	??_PACKET_Available,w
  6485  0DE6  00B6               	movwf	PACKET_Available@b
  6486                           
  6487                           ;packet.c: 113: return PACKET_handle_byte(b);
  6488                           
  6489                           ;packet.c: 112: do {} while (0);
  6490  0DE7  0836               	movf	PACKET_Available@b,w
  6491  0DE8  3182  22F7         	fcall	_PACKET_handle_byte
  6492  0DEA  0008               	return
  6493  0DEB                     l3557:	
  6494                           
  6495                           ;packet.c: 114: }
  6496                           ;packet.c: 116: return 0;
  6497  0DEB  3000               	movlw	0
  6498  0DEC  0008               	return
  6499  0DED                     __end_of_PACKET_Available:	
  6500                           
  6501                           	psect	text33
  6502  02F7                     __ptext33:	
  6503 ;; *************** function _PACKET_handle_byte *****************
  6504 ;; Defined at:
  6505 ;;		line 130 in file "packet.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  data_byte       1    wreg     unsigned char 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  data_byte       1   20[BANK0 ] unsigned char 
  6510 ;;  i               2   18[BANK0 ] unsigned int 
  6511 ;;  len             2   15[BANK0 ] unsigned int 
  6512 ;;  cksm            1   17[BANK0 ] unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      unsigned char 
  6515 ;; Registers used:
  6516 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6525 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;Total ram usage:       13 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; Hardware stack levels required when called:    4
  6529 ;; This function calls:
  6530 ;;		_PACKET_calculate_checksum
  6531 ;; This function is called by:
  6532 ;;		_PACKET_Available
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           
  6537                           ;psect for function _PACKET_handle_byte
  6538  02F7                     _PACKET_handle_byte:	
  6539                           
  6540                           ;incstack = 0
  6541                           ; Regs used in _PACKET_handle_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6542                           ;PACKET_handle_byte@data_byte stored from wreg
  6543  02F7  0020               	movlb	0	; select bank0
  6544  02F8  00B4               	movwf	PACKET_handle_byte@data_byte
  6545                           
  6546                           ;packet.c: 132: uint8_t cksm;
  6547                           ;packet.c: 133: uint16_t len;
  6548                           ;packet.c: 134: uint16_t i;
  6549                           ;packet.c: 136: if (PACKET_RxState == PACKET_State_idle)
  6550  02F9  085B               	movf	_PACKET_RxState,w
  6551  02FA  1D03               	btfss	3,2
  6552  02FB  2B02               	goto	l3379
  6553                           
  6554                           ;packet.c: 137: {
  6555                           ;packet.c: 138: PACKET_RxPtr = PACKET_RxPacket;
  6556  02FC  3069               	movlw	105
  6557  02FD  00D9               	movwf	_PACKET_RxPtr
  6558  02FE  3023               	movlw	35
  6559  02FF  00DA               	movwf	_PACKET_RxPtr+1
  6560                           
  6561                           ;packet.c: 139: PACKET_RxState = PACKET_State_start;
  6562  0300  01DB               	clrf	_PACKET_RxState
  6563  0301  0ADB               	incf	_PACKET_RxState,f
  6564  0302                     l3379:	
  6565                           ;packet.c: 140: do {} while (0);
  6566                           
  6567                           
  6568                           ;packet.c: 141: }
  6569                           ;packet.c: 143: if (PACKET_RxState == PACKET_State_start)
  6570  0302  035B               	decf	_PACKET_RxState,w
  6571  0303  1D03               	btfss	3,2
  6572  0304  2B18               	goto	l3395
  6573                           
  6574                           ;packet.c: 146: if (data_byte != 0xAB)
  6575                           
  6576                           ;packet.c: 144: {
  6577                           ;packet.c: 145: do {} while (0);
  6578  0305  30AB               	movlw	171
  6579  0306  0634               	xorwf	PACKET_handle_byte@data_byte,w
  6580  0307  1903               	btfsc	3,2
  6581  0308  2B0C               	goto	l3389
  6582                           
  6583                           ;packet.c: 147: {
  6584                           ;packet.c: 148: PACKET_RxState = PACKET_State_idle;
  6585  0309  01DB               	clrf	_PACKET_RxState
  6586                           
  6587                           ;packet.c: 149: return 0;
  6588  030A  3000               	movlw	0
  6589  030B  0008               	return
  6590  030C                     l3389:	
  6591                           
  6592                           ;packet.c: 150: }
  6593                           ;packet.c: 151: *PACKET_RxPtr = data_byte;
  6594  030C  0859               	movf	_PACKET_RxPtr,w
  6595  030D  0086               	movwf	6
  6596  030E  085A               	movf	_PACKET_RxPtr+1,w
  6597  030F  0087               	movwf	7
  6598  0310  0834               	movf	PACKET_handle_byte@data_byte,w
  6599  0311  0081               	movwf	1
  6600                           
  6601                           ;packet.c: 152: PACKET_RxPtr++;
  6602  0312  3001               	movlw	1
  6603  0313  07D9               	addwf	_PACKET_RxPtr,f
  6604  0314  3000               	movlw	0
  6605  0315  3DDA               	addwfc	_PACKET_RxPtr+1,f
  6606                           
  6607                           ;packet.c: 153: PACKET_RxState = PACKET_State_type;
  6608  0316  3002               	movlw	2
  6609  0317  2BDF               	goto	L8
  6610  0318                     l3395:	
  6611                           ;packet.c: 155: }
  6612                           
  6613                           ;packet.c: 154: do {} while (0);
  6614                           
  6615                           
  6616                           ;packet.c: 165: else if (PACKET_RxState == PACKET_State_type)
  6617  0318  3002               	movlw	2
  6618  0319  065B               	xorwf	_PACKET_RxState,w
  6619  031A  1D03               	btfss	3,2
  6620  031B  2B28               	goto	l3403
  6621                           
  6622                           ;packet.c: 166: {
  6623                           ;packet.c: 167: *PACKET_RxPtr = data_byte;
  6624  031C  0859               	movf	_PACKET_RxPtr,w
  6625  031D  0086               	movwf	6
  6626  031E  085A               	movf	_PACKET_RxPtr+1,w
  6627  031F  0087               	movwf	7
  6628  0320  0834               	movf	PACKET_handle_byte@data_byte,w
  6629  0321  0081               	movwf	1
  6630                           
  6631                           ;packet.c: 168: PACKET_RxPtr++;
  6632  0322  3001               	movlw	1
  6633  0323  07D9               	addwf	_PACKET_RxPtr,f
  6634  0324  3000               	movlw	0
  6635  0325  3DDA               	addwfc	_PACKET_RxPtr+1,f
  6636                           
  6637                           ;packet.c: 169: PACKET_RxState = PACKET_State_length_l;
  6638  0326  3003               	movlw	3
  6639  0327  2BDF               	goto	L8
  6640  0328                     l3403:	
  6641                           ;packet.c: 171: }
  6642                           
  6643                           ;packet.c: 170: do {} while (0);
  6644                           
  6645                           
  6646                           ;packet.c: 173: else if (PACKET_RxState == PACKET_State_length_l)
  6647  0328  3003               	movlw	3
  6648  0329  065B               	xorwf	_PACKET_RxState,w
  6649  032A  1D03               	btfss	3,2
  6650  032B  2B38               	goto	l3411
  6651                           
  6652                           ;packet.c: 174: {
  6653                           ;packet.c: 175: *PACKET_RxPtr = data_byte;
  6654  032C  0859               	movf	_PACKET_RxPtr,w
  6655  032D  0086               	movwf	6
  6656  032E  085A               	movf	_PACKET_RxPtr+1,w
  6657  032F  0087               	movwf	7
  6658  0330  0834               	movf	PACKET_handle_byte@data_byte,w
  6659  0331  0081               	movwf	1
  6660                           
  6661                           ;packet.c: 176: PACKET_RxPtr++;
  6662  0332  3001               	movlw	1
  6663  0333  07D9               	addwf	_PACKET_RxPtr,f
  6664  0334  3000               	movlw	0
  6665  0335  3DDA               	addwfc	_PACKET_RxPtr+1,f
  6666                           
  6667                           ;packet.c: 177: PACKET_RxState = PACKET_State_length_h;
  6668  0336  3004               	movlw	4
  6669  0337  2BDF               	goto	L8
  6670  0338                     l3411:	
  6671                           ;packet.c: 179: }
  6672                           
  6673                           ;packet.c: 178: do {} while (0);
  6674                           
  6675                           
  6676                           ;packet.c: 181: else if (PACKET_RxState == PACKET_State_length_h)
  6677  0338  3004               	movlw	4
  6678  0339  065B               	xorwf	_PACKET_RxState,w
  6679  033A  1D03               	btfss	3,2
  6680  033B  2B48               	goto	l3419
  6681                           
  6682                           ;packet.c: 182: {
  6683                           ;packet.c: 183: *PACKET_RxPtr = data_byte;
  6684  033C  0859               	movf	_PACKET_RxPtr,w
  6685  033D  0086               	movwf	6
  6686  033E  085A               	movf	_PACKET_RxPtr+1,w
  6687  033F  0087               	movwf	7
  6688  0340  0834               	movf	PACKET_handle_byte@data_byte,w
  6689  0341  0081               	movwf	1
  6690                           
  6691                           ;packet.c: 184: PACKET_RxPtr++;
  6692  0342  3001               	movlw	1
  6693  0343  07D9               	addwf	_PACKET_RxPtr,f
  6694  0344  3000               	movlw	0
  6695  0345  3DDA               	addwfc	_PACKET_RxPtr+1,f
  6696                           
  6697                           ;packet.c: 185: PACKET_RxState = PACKET_State_header_checksum;
  6698  0346  3005               	movlw	5
  6699  0347  2BDF               	goto	L8
  6700  0348                     l3419:	
  6701                           ;packet.c: 187: }
  6702                           
  6703                           ;packet.c: 186: do {} while (0);
  6704                           
  6705                           
  6706                           ;packet.c: 189: else if (PACKET_RxState == PACKET_State_header_checksum)
  6707  0348  3005               	movlw	5
  6708  0349  065B               	xorwf	_PACKET_RxState,w
  6709  034A  1D03               	btfss	3,2
  6710  034B  2B8F               	goto	l3441
  6711                           
  6712                           ;packet.c: 190: {
  6713                           ;packet.c: 191: *PACKET_RxPtr = data_byte;
  6714  034C  0859               	movf	_PACKET_RxPtr,w
  6715  034D  0086               	movwf	6
  6716  034E  085A               	movf	_PACKET_RxPtr+1,w
  6717  034F  0087               	movwf	7
  6718  0350  0834               	movf	PACKET_handle_byte@data_byte,w
  6719  0351  0081               	movwf	1
  6720                           
  6721                           ;packet.c: 192: PACKET_RxPtr++;
  6722  0352  3001               	movlw	1
  6723  0353  07D9               	addwf	_PACKET_RxPtr,f
  6724  0354  3000               	movlw	0
  6725  0355  3DDA               	addwfc	_PACKET_RxPtr+1,f
  6726                           
  6727                           ;packet.c: 194: len = PACKET_RxPtr - PACKET_RxPacket;
  6728                           
  6729                           ;packet.c: 193: do {} while (0);
  6730  0356  0859               	movf	_PACKET_RxPtr,w
  6731  0357  3E97               	addlw	151
  6732  0358  00AF               	movwf	PACKET_handle_byte@len
  6733  0359  30DC               	movlw	220
  6734  035A  3D5A               	addwfc	_PACKET_RxPtr+1,w
  6735  035B  00B0               	movwf	PACKET_handle_byte@len+1
  6736                           
  6737                           ;packet.c: 196: cksm = PACKET_calculate_checksum(PACKET_RxPacket, len);
  6738                           
  6739                           ;packet.c: 195: do {} while (0);
  6740  035C  3069               	movlw	105
  6741  035D  00A0               	movwf	PACKET_calculate_checksum@data
  6742  035E  3023               	movlw	35
  6743  035F  00A1               	movwf	PACKET_calculate_checksum@data+1
  6744  0360  0830               	movf	PACKET_handle_byte@len+1,w
  6745  0361  00A3               	movwf	PACKET_calculate_checksum@data_len+1
  6746  0362  082F               	movf	PACKET_handle_byte@len,w
  6747  0363  00A2               	movwf	PACKET_calculate_checksum@data_len
  6748  0364  3187  27DB  3182   	fcall	_PACKET_calculate_checksum
  6749  0367  0020               	movlb	0	; select bank0
  6750  0368  00A8               	movwf	??_PACKET_handle_byte
  6751  0369  0828               	movf	??_PACKET_handle_byte,w
  6752  036A  00B1               	movwf	PACKET_handle_byte@cksm
  6753                           
  6754                           ;packet.c: 198: if (cksm != 0)
  6755                           
  6756                           ;packet.c: 197: do {} while (0);
  6757  036B  0831               	movf	PACKET_handle_byte@cksm,w
  6758  036C  1903               	btfsc	3,2
  6759  036D  2B71               	goto	l3437
  6760                           
  6761                           ;packet.c: 199: {
  6762                           ;packet.c: 200: PACKET_RxState = PACKET_State_idle;
  6763  036E  01DB               	clrf	_PACKET_RxState
  6764                           
  6765                           ;packet.c: 201: return 0;
  6766  036F  3000               	movlw	0
  6767  0370  0008               	return
  6768  0371                     l3437:	
  6769                           
  6770                           ;packet.c: 202: }
  6771                           ;packet.c: 203: PACKET_Len = (uint16_t)((PACKET_RxPacket[3] << 8) | (PACKET_RxPacket[2])
      +                          );
  6772  0371  3069               	movlw	105
  6773  0372  0086               	movwf	6
  6774  0373  3023               	movlw	35
  6775  0374  0087               	movwf	7
  6776  0375  3142               	addfsr 1,2
  6777  0376  0801               	movf	1,w
  6778  0377  00A8               	movwf	??_PACKET_handle_byte
  6779  0378  01A9               	clrf	??_PACKET_handle_byte+1
  6780  0379  3069               	movlw	105
  6781  037A  0086               	movwf	6
  6782  037B  3023               	movlw	35
  6783  037C  0087               	movwf	7
  6784  037D  3143               	addfsr 1,3
  6785  037E  0801               	movf	1,w
  6786  037F  00AA               	movwf	??_PACKET_handle_byte+2
  6787  0380  01AB               	clrf	??_PACKET_handle_byte+3
  6788  0381  082A               	movf	??_PACKET_handle_byte+2,w
  6789  0382  00AB               	movwf	??_PACKET_handle_byte+3
  6790  0383  01AA               	clrf	??_PACKET_handle_byte+2
  6791  0384  0828               	movf	??_PACKET_handle_byte,w
  6792  0385  042A               	iorwf	??_PACKET_handle_byte+2,w
  6793  0386  0021               	movlb	1	; select bank1
  6794  0387  00C5               	movwf	_PACKET_Len^(0+128)
  6795  0388  0020               	movlb	0	; select bank0
  6796  0389  0829               	movf	??_PACKET_handle_byte+1,w
  6797  038A  042B               	iorwf	??_PACKET_handle_byte+3,w
  6798  038B  0021               	movlb	1	; select bank1
  6799  038C  00C6               	movwf	(_PACKET_Len+1)^(0+128)
  6800                           
  6801                           ;packet.c: 204: PACKET_RxState = PACKET_State_payload;
  6802  038D  3007               	movlw	7
  6803  038E  2BDE               	goto	L9
  6804  038F                     l3441:	
  6805                           ;packet.c: 206: }
  6806                           
  6807                           ;packet.c: 205: do {} while (0);
  6808                           
  6809                           
  6810                           ;packet.c: 208: else if (PACKET_RxState == PACKET_State_payload)
  6811  038F  3007               	movlw	7
  6812  0390  065B               	xorwf	_PACKET_RxState,w
  6813  0391  1D03               	btfss	3,2
  6814  0392  2BBB               	goto	l3451
  6815                           
  6816                           ;packet.c: 209: {
  6817                           ;packet.c: 210: *PACKET_RxPtr = data_byte;
  6818  0393  0859               	movf	_PACKET_RxPtr,w
  6819  0394  0086               	movwf	6
  6820  0395  085A               	movf	_PACKET_RxPtr+1,w
  6821  0396  0087               	movwf	7
  6822  0397  0834               	movf	PACKET_handle_byte@data_byte,w
  6823  0398  0081               	movwf	1
  6824                           
  6825                           ;packet.c: 211: PACKET_RxPtr++;
  6826  0399  3001               	movlw	1
  6827  039A  07D9               	addwf	_PACKET_RxPtr,f
  6828  039B  3000               	movlw	0
  6829  039C  3DDA               	addwfc	_PACKET_RxPtr+1,f
  6830                           
  6831                           ;packet.c: 215: if ((PACKET_RxPtr - PACKET_RxPacket) >= (PACKET_Len + 5))
  6832                           
  6833                           ;packet.c: 213: do {} while (0);
  6834  039D  0021               	movlb	1	; select bank1
  6835  039E  0845               	movf	_PACKET_Len^(0+128),w
  6836  039F  3E05               	addlw	5
  6837  03A0  0020               	movlb	0	; select bank0
  6838  03A1  00A8               	movwf	??_PACKET_handle_byte
  6839  03A2  3000               	movlw	0
  6840  03A3  0021               	movlb	1	; select bank1
  6841  03A4  3D46               	addwfc	(_PACKET_Len+1)^(0+128),w
  6842  03A5  0020               	movlb	0	; select bank0
  6843  03A6  00A9               	movwf	??_PACKET_handle_byte+1
  6844  03A7  0859               	movf	_PACKET_RxPtr,w
  6845  03A8  3E97               	addlw	151
  6846  03A9  00AA               	movwf	??_PACKET_handle_byte+2
  6847  03AA  30DC               	movlw	220
  6848  03AB  3D5A               	addwfc	_PACKET_RxPtr+1,w
  6849  03AC  00AB               	movwf	??_PACKET_handle_byte+3
  6850  03AD  082B               	movf	??_PACKET_handle_byte+3,w
  6851  03AE  3A80               	xorlw	128
  6852  03AF  00AC               	movwf	??_PACKET_handle_byte+4
  6853  03B0  0829               	movf	??_PACKET_handle_byte+1,w
  6854  03B1  3A80               	xorlw	128
  6855  03B2  022C               	subwf	??_PACKET_handle_byte+4,w
  6856  03B3  1D03               	skipz
  6857  03B4  2BB7               	goto	u3365
  6858  03B5  0828               	movf	??_PACKET_handle_byte,w
  6859  03B6  022A               	subwf	??_PACKET_handle_byte+2,w
  6860  03B7                     u3365:	
  6861  03B7  1C03               	skipc
  6862  03B8  2C2F               	goto	l3499
  6863                           
  6864                           ;packet.c: 216: {
  6865                           ;packet.c: 217: PACKET_RxState = PACKET_State_checksum;
  6866  03B9  3008               	movlw	8
  6867  03BA  2BDE               	goto	L9
  6868  03BB                     l3451:	
  6869                           ;packet.c: 218: }
  6870                           ;packet.c: 219: }
  6871                           
  6872                           
  6873                           ;packet.c: 221: else if (PACKET_RxState == PACKET_State_checksum)
  6874  03BB  3008               	movlw	8
  6875  03BC  065B               	xorwf	_PACKET_RxState,w
  6876  03BD  1D03               	btfss	3,2
  6877  03BE  2BE3               	goto	l3467
  6878                           
  6879                           ;packet.c: 222: {
  6880                           ;packet.c: 223: *PACKET_RxPtr = data_byte;
  6881  03BF  0859               	movf	_PACKET_RxPtr,w
  6882  03C0  0086               	movwf	6
  6883  03C1  085A               	movf	_PACKET_RxPtr+1,w
  6884  03C2  0087               	movwf	7
  6885  03C3  0834               	movf	PACKET_handle_byte@data_byte,w
  6886  03C4  0081               	movwf	1
  6887                           
  6888                           ;packet.c: 224: PACKET_RxPtr++;
  6889  03C5  3001               	movlw	1
  6890  03C6  07D9               	addwf	_PACKET_RxPtr,f
  6891  03C7  3000               	movlw	0
  6892  03C8  3DDA               	addwfc	_PACKET_RxPtr+1,f
  6893                           
  6894                           ;packet.c: 228: if (PACKET_calculate_checksum(PACKET_RxPacket, (uint16_t)(PACKET_RxPtr -
      +                           PACKET_RxPacket)) != 0)
  6895                           
  6896                           ;packet.c: 226: do {} while (0);
  6897  03C9  3069               	movlw	105
  6898  03CA  00A0               	movwf	PACKET_calculate_checksum@data
  6899  03CB  3023               	movlw	35
  6900  03CC  00A1               	movwf	PACKET_calculate_checksum@data+1
  6901  03CD  0859               	movf	_PACKET_RxPtr,w
  6902  03CE  3E97               	addlw	151
  6903  03CF  00A2               	movwf	PACKET_calculate_checksum@data_len
  6904  03D0  30DC               	movlw	220
  6905  03D1  3D5A               	addwfc	_PACKET_RxPtr+1,w
  6906  03D2  00A3               	movwf	PACKET_calculate_checksum@data_len+1
  6907  03D3  3187  27DB  3182   	fcall	_PACKET_calculate_checksum
  6908  03D6  3A00               	xorlw	0
  6909  03D7  1903               	skipnz
  6910  03D8  2BDD               	goto	l3465
  6911                           
  6912                           ;packet.c: 229: {
  6913                           ;packet.c: 230: PACKET_RxState = PACKET_State_idle;
  6914  03D9  0020               	movlb	0	; select bank0
  6915  03DA  01DB               	clrf	_PACKET_RxState
  6916                           
  6917                           ;packet.c: 231: return 0;
  6918  03DB  3000               	movlw	0
  6919  03DC  0008               	return
  6920  03DD                     l3465:	
  6921                           
  6922                           ;packet.c: 232: }
  6923                           ;packet.c: 234: PACKET_RxState = PACKET_State_end_flag;
  6924  03DD  3009               	movlw	9
  6925  03DE                     L9:	
  6926  03DE  0020               	movlb	0	; select bank0
  6927  03DF                     L8:	
  6928  03DF  00A8               	movwf	??_PACKET_handle_byte
  6929  03E0  0828               	movf	??_PACKET_handle_byte,w
  6930  03E1  00DB               	movwf	_PACKET_RxState
  6931                           
  6932                           ;packet.c: 236: }
  6933                           
  6934                           ;packet.c: 235: do {} while (0);
  6935  03E2  2C2F               	goto	l3499
  6936  03E3                     l3467:	
  6937                           
  6938                           ;packet.c: 238: else if (PACKET_RxState == PACKET_State_end_flag)
  6939  03E3  3009               	movlw	9
  6940  03E4  065B               	xorwf	_PACKET_RxState,w
  6941  03E5  1D03               	btfss	3,2
  6942  03E6  2C2C               	goto	l3493
  6943                           
  6944                           ;packet.c: 239: {
  6945                           ;packet.c: 240: *PACKET_RxPtr = data_byte;
  6946  03E7  0859               	movf	_PACKET_RxPtr,w
  6947  03E8  0086               	movwf	6
  6948  03E9  085A               	movf	_PACKET_RxPtr+1,w
  6949  03EA  0087               	movwf	7
  6950  03EB  0834               	movf	PACKET_handle_byte@data_byte,w
  6951  03EC  0081               	movwf	1
  6952                           
  6953                           ;packet.c: 242: if (data_byte != 0xBA)
  6954                           
  6955                           ;packet.c: 241: do {} while (0);
  6956  03ED  30BA               	movlw	186
  6957  03EE  0634               	xorwf	PACKET_handle_byte@data_byte,w
  6958  03EF  1903               	btfsc	3,2
  6959  03F0  2BF4               	goto	l3479
  6960                           
  6961                           ;packet.c: 243: {
  6962                           ;packet.c: 244: PACKET_RxState = PACKET_State_idle;
  6963  03F1  01DB               	clrf	_PACKET_RxState
  6964                           
  6965                           ;packet.c: 245: return 0;
  6966  03F2  3000               	movlw	0
  6967  03F3  0008               	return
  6968  03F4                     l3479:	
  6969                           ;packet.c: 246: }
  6970                           ;packet.c: 248: do {} while (0);
  6971                           
  6972                           
  6973                           ;packet.c: 249: PACKET_RxState = PACKET_State_idle;
  6974  03F4  01DB               	clrf	_PACKET_RxState
  6975                           
  6976                           ;packet.c: 251: for (i = 0; i < 5 + PACKET_Len + 2; i++)
  6977  03F5  01B2               	clrf	PACKET_handle_byte@i
  6978  03F6  01B3               	clrf	PACKET_handle_byte@i+1
  6979  03F7                     l3485:	
  6980  03F7  0021               	movlb	1	; select bank1
  6981  03F8  0845               	movf	_PACKET_Len^(0+128),w
  6982  03F9  3E07               	addlw	7
  6983  03FA  0020               	movlb	0	; select bank0
  6984  03FB  00A8               	movwf	??_PACKET_handle_byte
  6985  03FC  3000               	movlw	0
  6986  03FD  0021               	movlb	1	; select bank1
  6987  03FE  3D46               	addwfc	(_PACKET_Len+1)^(0+128),w
  6988  03FF  0020               	movlb	0	; select bank0
  6989  0400  00A9               	movwf	??_PACKET_handle_byte+1
  6990  0401  0829               	movf	??_PACKET_handle_byte+1,w
  6991  0402  0233               	subwf	PACKET_handle_byte@i+1,w
  6992  0403  1D03               	skipz
  6993  0404  2C07               	goto	u3415
  6994  0405  0828               	movf	??_PACKET_handle_byte,w
  6995  0406  0232               	subwf	PACKET_handle_byte@i,w
  6996  0407                     u3415:	
  6997  0407  1803               	btfsc	3,0
  6998  0408  2C2A               	goto	l3487
  6999                           
  7000                           ;packet.c: 252: {
  7001                           ;packet.c: 253: PACKET_pkt.packet_arr[i] = PACKET_RxPacket[i];
  7002  0409  3069               	movlw	105
  7003  040A  00A8               	movwf	??_PACKET_handle_byte
  7004  040B  3023               	movlw	35
  7005  040C  00A9               	movwf	??_PACKET_handle_byte+1
  7006  040D  0832               	movf	PACKET_handle_byte@i,w
  7007  040E  0728               	addwf	??_PACKET_handle_byte,w
  7008  040F  0086               	movwf	6
  7009  0410  0833               	movf	PACKET_handle_byte@i+1,w
  7010  0411  3D29               	addwfc	??_PACKET_handle_byte+1,w
  7011  0412  0087               	movwf	7
  7012  0413  0801               	movf	1,w
  7013  0414  00AA               	movwf	??_PACKET_handle_byte+2
  7014  0415  30E2               	movlw	226
  7015  0416  00AB               	movwf	??_PACKET_handle_byte+3
  7016  0417  3022               	movlw	34
  7017  0418  00AC               	movwf	??_PACKET_handle_byte+4
  7018  0419  0832               	movf	PACKET_handle_byte@i,w
  7019  041A  072B               	addwf	??_PACKET_handle_byte+3,w
  7020  041B  00AD               	movwf	??_PACKET_handle_byte+5
  7021  041C  0833               	movf	PACKET_handle_byte@i+1,w
  7022  041D  3D2C               	addwfc	??_PACKET_handle_byte+4,w
  7023  041E  00AE               	movwf	??_PACKET_handle_byte+6
  7024  041F  082D               	movf	??_PACKET_handle_byte+5,w
  7025  0420  0086               	movwf	6
  7026  0421  082E               	movf	??_PACKET_handle_byte+6,w
  7027  0422  0087               	movwf	7
  7028  0423  082A               	movf	??_PACKET_handle_byte+2,w
  7029  0424  0081               	movwf	1
  7030  0425  3001               	movlw	1
  7031  0426  07B2               	addwf	PACKET_handle_byte@i,f
  7032  0427  3000               	movlw	0
  7033  0428  3DB3               	addwfc	PACKET_handle_byte@i+1,f
  7034  0429  2BF7               	goto	l3485
  7035  042A                     l3487:	
  7036                           
  7037                           ;packet.c: 254: }
  7038                           ;packet.c: 263: return 1;
  7039  042A  3001               	movlw	1
  7040  042B  0008               	return
  7041  042C                     l3493:	
  7042                           ;packet.c: 266: else
  7043                           ;packet.c: 267: {
  7044                           ;packet.c: 268: do {} while (0);
  7045                           
  7046                           ;packet.c: 265: }
  7047                           
  7048                           
  7049                           ;packet.c: 269: PACKET_RxState = PACKET_State_idle;
  7050  042C  01DB               	clrf	_PACKET_RxState
  7051                           
  7052                           ;packet.c: 270: return 0;
  7053  042D  3000               	movlw	0
  7054  042E  0008               	return
  7055  042F                     l3499:	
  7056                           
  7057                           ;packet.c: 272: }
  7058                           ;packet.c: 274: return 0;
  7059  042F  3000               	movlw	0
  7060  0430  0008               	return
  7061  0431                     __end_of_PACKET_handle_byte:	
  7062                           
  7063                           	psect	text34
  7064  07DB                     __ptext34:	
  7065 ;; *************** function _PACKET_calculate_checksum *****************
  7066 ;; Defined at:
  7067 ;;		line 93 in file "packet.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  data            2    0[BANK0 ] PTR unsigned char 
  7070 ;;		 -> PACKET_RxPacket(135), PACKET_pkt(135), 
  7071 ;;  data_len        2    2[BANK0 ] unsigned int 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  i               2    6[BANK0 ] unsigned int 
  7074 ;;  checksum        1    5[BANK0 ] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      unsigned char 
  7077 ;; Registers used:
  7078 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7084 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;Total ram usage:        8 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; Hardware stack levels required when called:    3
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_PACKET_UpdateAndSend
  7095 ;;		_PACKET_handle_byte
  7096 ;;		_PACKET_CreatePacket
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _PACKET_calculate_checksum
  7102  07DB                     _PACKET_calculate_checksum:	
  7103                           
  7104                           ;packet.c: 95: uint16_t i = 0;
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in _PACKET_calculate_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  7108  07DB  0020               	movlb	0	; select bank0
  7109  07DC  01A6               	clrf	PACKET_calculate_checksum@i
  7110  07DD  01A7               	clrf	PACKET_calculate_checksum@i+1
  7111                           
  7112                           ;packet.c: 96: uint8_t checksum = 0;
  7113  07DE  01A5               	clrf	PACKET_calculate_checksum@checksum
  7114                           
  7115                           ;packet.c: 97: for (i = 0; i < data_len; i++)
  7116  07DF  01A6               	clrf	PACKET_calculate_checksum@i
  7117  07E0  01A7               	clrf	PACKET_calculate_checksum@i+1
  7118  07E1                     l3209:	
  7119  07E1  0823               	movf	PACKET_calculate_checksum@data_len+1,w
  7120  07E2  0227               	subwf	PACKET_calculate_checksum@i+1,w
  7121  07E3  1D03               	skipz
  7122  07E4  2FE7               	goto	u3205
  7123  07E5  0822               	movf	PACKET_calculate_checksum@data_len,w
  7124  07E6  0226               	subwf	PACKET_calculate_checksum@i,w
  7125  07E7                     u3205:	
  7126  07E7  1803               	btfsc	3,0
  7127  07E8  2FF8               	goto	l3211
  7128                           
  7129                           ;packet.c: 98: {
  7130                           ;packet.c: 99: checksum += data[i];
  7131  07E9  0826               	movf	PACKET_calculate_checksum@i,w
  7132  07EA  0720               	addwf	PACKET_calculate_checksum@data,w
  7133  07EB  0086               	movwf	6
  7134  07EC  0827               	movf	PACKET_calculate_checksum@i+1,w
  7135  07ED  3D21               	addwfc	PACKET_calculate_checksum@data+1,w
  7136  07EE  0087               	movwf	7
  7137  07EF  0801               	movf	1,w
  7138  07F0  00A4               	movwf	??_PACKET_calculate_checksum
  7139  07F1  0824               	movf	??_PACKET_calculate_checksum,w
  7140  07F2  07A5               	addwf	PACKET_calculate_checksum@checksum,f
  7141                           
  7142                           ;packet.c: 100: do {} while (0);
  7143  07F3  3001               	movlw	1
  7144  07F4  07A6               	addwf	PACKET_calculate_checksum@i,f
  7145  07F5  3000               	movlw	0
  7146  07F6  3DA7               	addwfc	PACKET_calculate_checksum@i+1,f
  7147  07F7  2FE1               	goto	l3209
  7148  07F8                     l3211:	
  7149                           
  7150                           ;packet.c: 101: }
  7151                           ;packet.c: 103: return (uint8_t)((~checksum + 0x01) & 0xFF);
  7152  07F8  0325               	decf	PACKET_calculate_checksum@checksum,w
  7153  07F9  3AFF               	xorlw	255
  7154  07FA  0008               	return
  7155  07FB                     __end_of_PACKET_calculate_checksum:	
  7156                           
  7157                           	psect	text35
  7158  0D2F                     __ptext35:	
  7159 ;; *************** function _PACKET_EUSART_Bytes_Available *****************
  7160 ;; Defined at:
  7161 ;;		line 119 in file "packet.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      unsigned char 
  7168 ;; Registers used:
  7169 ;;		wreg, pclath, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;Total ram usage:        0 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:    4
  7182 ;; This function calls:
  7183 ;;		_EUSART_RxBytesAvailable
  7184 ;; This function is called by:
  7185 ;;		_PACKET_Available
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           
  7190                           ;psect for function _PACKET_EUSART_Bytes_Available
  7191  0D2F                     _PACKET_EUSART_Bytes_Available:	
  7192                           
  7193                           ;packet.c: 121: return EUSART_RxBytesAvailable();
  7194                           
  7195                           ;incstack = 0
  7196                           ; Regs used in _PACKET_EUSART_Bytes_Available: [wreg+pclath+cstack]
  7197  0D2F  3180  2002         	fcall	_EUSART_RxBytesAvailable
  7198  0D31  0008               	return
  7199  0D32                     __end_of_PACKET_EUSART_Bytes_Available:	
  7200                           
  7201                           	psect	text36
  7202  0002                     __ptext36:	
  7203 ;; *************** function _EUSART_RxBytesAvailable *****************
  7204 ;; Defined at:
  7205 ;;		line 119 in file "mcc_generated_files/eusart.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      unsigned char 
  7212 ;; Registers used:
  7213 ;;		wreg
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:    3
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_PACKET_EUSART_Bytes_Available
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           
  7234                           ;psect for function _EUSART_RxBytesAvailable
  7235  0002                     _EUSART_RxBytesAvailable:	
  7236                           
  7237                           ;eusart.c: 121: return eusartRxCount;
  7238                           
  7239                           ;incstack = 0
  7240                           ; Regs used in _EUSART_RxBytesAvailable: [wreg]
  7241  0002  0871               	movf	_eusartRxCount,w	;volatile
  7242  0003  0008               	return
  7243  0004                     __end_of_EUSART_RxBytesAvailable:	
  7244                           
  7245                           	psect	text37
  7246  0EB8                     __ptext37:	
  7247 ;; *************** function _EUSART_Read *****************
  7248 ;; Defined at:
  7249 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;		None
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  readValue       1    1[BANK0 ] unsigned char 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  1    wreg      unsigned char 
  7256 ;; Registers used:
  7257 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;Total ram usage:        2 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:    3
  7270 ;; This function calls:
  7271 ;;		Nothing
  7272 ;; This function is called by:
  7273 ;;		_PACKET_Available
  7274 ;;		_getch
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           
  7279                           ;psect for function _EUSART_Read
  7280  0EB8                     _EUSART_Read:	
  7281                           
  7282                           ;eusart.c: 101: uint8_t readValue = 0;
  7283                           
  7284                           ;incstack = 0
  7285                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7286  0EB8  0020               	movlb	0	; select bank0
  7287  0EB9  01A1               	clrf	EUSART_Read@readValue
  7288  0EBA                     l3309:	
  7289                           ;eusart.c: 104: {
  7290                           
  7291                           ;eusart.c: 103: while(0 == eusartRxCount)
  7292                           
  7293  0EBA  0871               	movf	_eusartRxCount,w	;volatile
  7294  0EBB  1903               	btfsc	3,2
  7295  0EBC  2EBA               	goto	l3309
  7296                           
  7297                           ;eusart.c: 105: }
  7298                           ;eusart.c: 107: readValue = eusartRxBuffer[eusartRxTail++];
  7299  0EBD  0872               	movf	_eusartRxTail,w
  7300  0EBE  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7301  0EBF  0086               	movwf	6
  7302  0EC0  0187               	clrf	7
  7303  0EC1  0801               	movf	1,w
  7304  0EC2  0020               	movlb	0	; select bank0
  7305  0EC3  00A0               	movwf	??_EUSART_Read
  7306  0EC4  0820               	movf	??_EUSART_Read,w
  7307  0EC5  00A1               	movwf	EUSART_Read@readValue
  7308  0EC6  3001               	movlw	1
  7309  0EC7  00A0               	movwf	??_EUSART_Read
  7310  0EC8  0820               	movf	??_EUSART_Read,w
  7311  0EC9  07F2               	addwf	_eusartRxTail,f	;volatile
  7312                           
  7313                           ;eusart.c: 108: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  7314  0ECA  3020               	movlw	32
  7315  0ECB  0272               	subwf	_eusartRxTail,w	;volatile
  7316  0ECC  1803               	btfsc	3,0
  7317                           
  7318                           ;eusart.c: 109: {
  7319                           ;eusart.c: 110: eusartRxTail = 0;
  7320  0ECD  01F2               	clrf	_eusartRxTail	;volatile
  7321                           
  7322                           ;eusart.c: 111: }
  7323                           ;eusart.c: 112: PIE1bits.RCIE = 0;
  7324  0ECE  0021               	movlb	1	; select bank1
  7325  0ECF  1291               	bcf	17,5	;volatile
  7326                           
  7327                           ;eusart.c: 113: eusartRxCount--;
  7328  0ED0  3001               	movlw	1
  7329  0ED1  02F1               	subwf	_eusartRxCount,f	;volatile
  7330                           
  7331                           ;eusart.c: 114: PIE1bits.RCIE = 1;
  7332  0ED2  1691               	bsf	17,5	;volatile
  7333                           
  7334                           ;eusart.c: 116: return readValue;
  7335  0ED3  0020               	movlb	0	; select bank0
  7336  0ED4  0821               	movf	EUSART_Read@readValue,w
  7337  0ED5  0008               	return
  7338  0ED6                     __end_of_EUSART_Read:	
  7339                           
  7340                           	psect	text38
  7341  0ED6                     __ptext38:	
  7342 ;; *************** function _ADC_GetConversion *****************
  7343 ;; Defined at:
  7344 ;;		line 107 in file "mcc_generated_files/adc.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  channel         1    wreg     enum E2975
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  channel         1    3[BANK0 ] enum E2975
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  2    0[BANK0 ] unsigned int 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;Total ram usage:        4 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    3
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_main
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           
  7373                           ;psect for function _ADC_GetConversion
  7374  0ED6                     _ADC_GetConversion:	
  7375                           
  7376                           ;incstack = 0
  7377                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7378                           ;ADC_GetConversion@channel stored from wreg
  7379  0ED6  0020               	movlb	0	; select bank0
  7380  0ED7  00A3               	movwf	ADC_GetConversion@channel
  7381                           
  7382                           ;adc.c: 110: ADCON0bits.CHS = channel;
  7383  0ED8  0823               	movf	ADC_GetConversion@channel,w
  7384  0ED9  00A2               	movwf	??_ADC_GetConversion
  7385  0EDA  0DA2               	rlf	??_ADC_GetConversion,f
  7386  0EDB  0DA2               	rlf	??_ADC_GetConversion,f
  7387  0EDC  0021               	movlb	1	; select bank1
  7388  0EDD  081D               	movf	29,w	;volatile
  7389  0EDE  0020               	movlb	0	; select bank0
  7390  0EDF  0622               	xorwf	??_ADC_GetConversion,w
  7391  0EE0  3983               	andlw	-125
  7392  0EE1  0622               	xorwf	??_ADC_GetConversion,w
  7393  0EE2  0021               	movlb	1	; select bank1
  7394  0EE3  009D               	movwf	29	;volatile
  7395                           
  7396                           ;adc.c: 113: ADCON0bits.ADON = 1;
  7397  0EE4  141D               	bsf	29,0	;volatile
  7398                           
  7399                           ;adc.c: 116: _delay((unsigned long)((50)*(8000000/4000000.0)));
  7400  0EE5  3021               	movlw	33
  7401  0EE6                     u4287:	
  7402  0EE6  0B89               	decfsz	9,f
  7403  0EE7  2EE6               	goto	u4287
  7404  0EE8  0000               	nop
  7405                           
  7406                           ;adc.c: 119: ADCON0bits.GO_nDONE = 1;
  7407  0EE9  0021               	movlb	1	; select bank1
  7408  0EEA  149D               	bsf	29,1	;volatile
  7409  0EEB                     l108:	
  7410                           ;adc.c: 123: {
  7411                           
  7412                           ;adc.c: 122: while (ADCON0bits.GO_nDONE)
  7413                           
  7414  0EEB  189D               	btfsc	29,1	;volatile
  7415  0EEC  2EEB               	goto	l108
  7416                           
  7417                           ;adc.c: 124: }
  7418                           ;adc.c: 127: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7419  0EED  081C               	movf	28,w	;volatile
  7420  0EEE  0020               	movlb	0	; select bank0
  7421  0EEF  00A1               	movwf	?_ADC_GetConversion+1
  7422  0EF0  0021               	movlb	1	; select bank1
  7423  0EF1  081B               	movf	27,w	;volatile
  7424  0EF2  0020               	movlb	0	; select bank0
  7425  0EF3  00A0               	movwf	?_ADC_GetConversion
  7426  0EF4  0008               	return
  7427  0EF5                     __end_of_ADC_GetConversion:	
  7428                           
  7429                           	psect	intentry
  7430  0004                     __pintentry:	
  7431 ;; *************** function _INTERRUPT_InterruptManager *****************
  7432 ;; Defined at:
  7433 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;		None
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      void 
  7440 ;; Registers used:
  7441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;Total ram usage:        1 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    2
  7454 ;; This function calls:
  7455 ;;		_EUSART_Receive_ISR
  7456 ;;		_I2C2_BusCollisionISR
  7457 ;;		_I2C2_ISR
  7458 ;; This function is called by:
  7459 ;;		Interrupt level 1
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463  0004                     _INTERRUPT_InterruptManager:	
  7464                           
  7465                           ;incstack = 0
  7466  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7467                           
  7468                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7469  0005  3180               	pagesel	$
  7470  0006  0020               	movlb	0	; select bank0
  7471  0007  087F               	movf	127,w
  7472  0008  00FB               	movwf	??_INTERRUPT_InterruptManager
  7473                           
  7474                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
  7475  0009  1F0B               	btfss	11,6	;volatile
  7476  000A  2827               	goto	i1l237
  7477                           
  7478                           ;interrupt_manager.c: 55: {
  7479                           ;interrupt_manager.c: 56: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  7480  000B  0021               	movlb	1	; select bank1
  7481  000C  1E91               	btfss	17,5	;volatile
  7482  000D  2815               	goto	i1l230
  7483  000E  0020               	movlb	0	; select bank0
  7484  000F  1E91               	btfss	17,5	;volatile
  7485  0010  2815               	goto	i1l230
  7486                           
  7487                           ;interrupt_manager.c: 57: {
  7488                           ;interrupt_manager.c: 58: EUSART_Receive_ISR();
  7489  0011  318E  262D  3180   	fcall	_EUSART_Receive_ISR
  7490                           
  7491                           ;interrupt_manager.c: 59: }
  7492  0014  2827               	goto	i1l237
  7493  0015                     i1l230:	
  7494                           
  7495                           ;interrupt_manager.c: 60: else if(PIE4bits.BCL2IE == 1 && PIR4bits.BCL2IF == 1)
  7496  0015  0021               	movlb	1	; select bank1
  7497  0016  1C94               	btfss	20,1	;volatile
  7498  0017  281F               	goto	i1l232
  7499  0018  0020               	movlb	0	; select bank0
  7500  0019  1C94               	btfss	20,1	;volatile
  7501  001A  281F               	goto	i1l232
  7502                           
  7503                           ;interrupt_manager.c: 61: {
  7504                           ;interrupt_manager.c: 62: I2C2_BusCollisionISR();
  7505  001B  318D  252C  3180   	fcall	_I2C2_BusCollisionISR
  7506                           
  7507                           ;interrupt_manager.c: 63: }
  7508  001E  2827               	goto	i1l237
  7509  001F                     i1l232:	
  7510                           
  7511                           ;interrupt_manager.c: 64: else if(PIE4bits.SSP2IE == 1 && PIR4bits.SSP2IF == 1)
  7512  001F  0021               	movlb	1	; select bank1
  7513  0020  1C14               	btfss	20,0	;volatile
  7514  0021  2827               	goto	i1l237
  7515  0022  0020               	movlb	0	; select bank0
  7516  0023  1C14               	btfss	20,0	;volatile
  7517  0024  2827               	goto	i1l237
  7518                           
  7519                           ;interrupt_manager.c: 65: {
  7520                           ;interrupt_manager.c: 66: I2C2_ISR();
  7521  0025  3181  21B9         	fcall	_I2C2_ISR
  7522  0027                     i1l237:	
  7523                           ;interrupt_manager.c: 73: else
  7524                           ;interrupt_manager.c: 74: {
  7525                           
  7526                           ;interrupt_manager.c: 71: }
  7527                           ;interrupt_manager.c: 72: }
  7528                           
  7529                           ;interrupt_manager.c: 68: else
  7530                           ;interrupt_manager.c: 69: {
  7531                           
  7532                           ;interrupt_manager.c: 67: }
  7533                           
  7534  0027  087B               	movf	??_INTERRUPT_InterruptManager,w
  7535  0028  0020               	movlb	0	; select bank0
  7536  0029  00FF               	movwf	127
  7537  002A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7538  002B  0009               	retfie
  7539  002C                     __end_of_INTERRUPT_InterruptManager:	
  7540                           
  7541                           	psect	text40
  7542  01B9                     __ptext40:	
  7543 ;; *************** function _I2C2_ISR *****************
  7544 ;; Defined at:
  7545 ;;		line 233 in file "mcc_generated_files/i2c2.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;		None
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;		None
  7550 ;; Return value:  Size  Location     Type
  7551 ;;                  1    wreg      void 
  7552 ;; Registers used:
  7553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7554 ;; Tracked objects:
  7555 ;;		On entry : 0/0
  7556 ;;		On exit  : 0/0
  7557 ;;		Unchanged: 0/0
  7558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7561 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;Total ram usage:        4 bytes
  7564 ;; Hardware stack levels used:    1
  7565 ;; Hardware stack levels required when called:    1
  7566 ;; This function calls:
  7567 ;;		_I2C2_FunctionComplete
  7568 ;;		_I2C2_Stop
  7569 ;; This function is called by:
  7570 ;;		_INTERRUPT_InterruptManager
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           
  7575                           ;psect for function _I2C2_ISR
  7576  01B9                     _I2C2_ISR:	
  7577                           
  7578                           ;i2c2.c: 236: static uint8_t *pi2c_buf_ptr;
  7579                           ;i2c2.c: 237: static uint16_t i2c_address = 0;
  7580                           ;i2c2.c: 238: static uint8_t i2c_bytes_left = 0;
  7581                           ;i2c2.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  7582                           ;i2c2.c: 241: PIR4bits.SSP2IF = 0;
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7586  01B9  0020               	movlb	0	; select bank0
  7587  01BA  1014               	bcf	20,0	;volatile
  7588                           
  7589                           ;i2c2.c: 245: if(SSP2CON1bits.WCOL)
  7590  01BB  0024               	movlb	4	; select bank4
  7591  01BC  1F9D               	btfss	29,7	;volatile
  7592  01BD  2AEB               	goto	i1l2729
  7593                           
  7594                           ;i2c2.c: 246: {
  7595                           ;i2c2.c: 248: SSP2CON1bits.WCOL = 0;
  7596  01BE  139D               	bcf	29,7	;volatile
  7597                           
  7598                           ;i2c2.c: 250: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  7599  01BF  0020               	movlb	0	; select bank0
  7600  01C0  01DF               	clrf	_i2c2_state
  7601                           
  7602                           ;i2c2.c: 253: p_i2c2_current = (0);
  7603  01C1  0021               	movlb	1	; select bank1
  7604  01C2  01CC               	clrf	_p_i2c2_current^(0+128)
  7605                           
  7606                           ;i2c2.c: 255: return;
  7607  01C3  0008               	return
  7608  01C4                     i1l297:	
  7609                           ;i2c2.c: 260: {
  7610                           ;i2c2.c: 261: case S_MASTER_IDLE:
  7611                           
  7612                           ;i2c2.c: 256: }
  7613                           ;i2c2.c: 259: switch(i2c2_state)
  7614                           
  7615                           
  7616                           ;i2c2.c: 263: if(i2c2_object.trStatus.s.empty != 1)
  7617  01C4  0021               	movlb	1	; select bank1
  7618  01C5  18C2               	btfsc	(_i2c2_object^(0+128)+2),1
  7619  01C6  0008               	return
  7620                           
  7621                           ;i2c2.c: 264: {
  7622                           ;i2c2.c: 266: p_i2c2_current = i2c2_object.pTrHead;
  7623  01C7  0841               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  7624  01C8  00F7               	movwf	??_I2C2_ISR
  7625  01C9  0877               	movf	??_I2C2_ISR,w
  7626  01CA  00CC               	movwf	_p_i2c2_current^(0+128)
  7627                           
  7628                           ;i2c2.c: 267: i2c2_trb_count = i2c2_object.pTrHead->count;
  7629  01CB  0841               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  7630  01CC  0086               	movwf	6
  7631  01CD  0187               	clrf	7
  7632  01CE  0801               	movf	1,w
  7633  01CF  00F7               	movwf	??_I2C2_ISR
  7634  01D0  0877               	movf	??_I2C2_ISR,w
  7635  01D1  0020               	movlb	0	; select bank0
  7636  01D2  00DE               	movwf	_i2c2_trb_count
  7637                           
  7638                           ;i2c2.c: 268: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  7639  01D3  0021               	movlb	1	; select bank1
  7640  01D4  0841               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  7641  01D5  0086               	movwf	6
  7642  01D6  0187               	clrf	7
  7643  01D7  3F41               	moviw [1]fsr1
  7644  01D8  00F0               	movwf	_p_i2c2_trb_current
  7645                           
  7646                           ;i2c2.c: 270: i2c2_object.pTrHead++;
  7647  01D9  3004               	movlw	4
  7648  01DA  00F7               	movwf	??_I2C2_ISR
  7649  01DB  0877               	movf	??_I2C2_ISR,w
  7650  01DC  07C1               	addwf	(low ((_i2c2_object| 0+1)))^(0+128),f
  7651                           
  7652                           ;i2c2.c: 273: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
  7653  01DD  0841               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  7654  01DE  3ADF               	xorlw	(low ((_i2c2_tr_queue| 0+4)))& (0+255)
  7655  01DF  1D03               	skipz
  7656  01E0  29E5               	goto	i1l2617
  7657                           
  7658                           ;i2c2.c: 274: {
  7659                           ;i2c2.c: 276: i2c2_object.pTrHead = i2c2_tr_queue;
  7660  01E1  30DB               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  7661  01E2  00F7               	movwf	??_I2C2_ISR
  7662  01E3  0877               	movf	??_I2C2_ISR,w
  7663  01E4  00C1               	movwf	(low ((_i2c2_object| 0+1)))^(0+128)
  7664  01E5                     i1l2617:	
  7665                           
  7666                           ;i2c2.c: 277: }
  7667                           ;i2c2.c: 281: i2c2_object.trStatus.s.full = 0;
  7668  01E5  1042               	bcf	(_i2c2_object^(0+128)+2),0
  7669                           
  7670                           ;i2c2.c: 284: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
  7671  01E6  0841               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  7672  01E7  0640               	xorwf	_i2c2_object^(0+128),w
  7673  01E8  1903               	btfsc	3,2
  7674                           
  7675                           ;i2c2.c: 285: {
  7676                           ;i2c2.c: 287: i2c2_object.trStatus.s.empty = 1;
  7677  01E9  14C2               	bsf	(_i2c2_object^(0+128)+2),1
  7678                           
  7679                           ;i2c2.c: 288: }
  7680                           ;i2c2.c: 291: SSP2CON2bits.SEN = 1;
  7681  01EA  0024               	movlb	4	; select bank4
  7682  01EB  141E               	bsf	30,0	;volatile
  7683                           
  7684                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  7685  01EC  3002               	movlw	2
  7686  01ED  00F7               	movwf	??_I2C2_ISR
  7687  01EE  0877               	movf	??_I2C2_ISR,w
  7688  01EF  0020               	movlb	0	; select bank0
  7689  01F0  00DF               	movwf	_i2c2_state
  7690                           
  7691                           ;i2c2.c: 295: }
  7692                           ;i2c2.c: 297: break;
  7693  01F1  0008               	return
  7694  01F2                     i1l302:	
  7695                           ;i2c2.c: 299: case S_MASTER_RESTART:
  7696                           
  7697                           
  7698                           ;i2c2.c: 304: SSP2CON2bits.RSEN = 1;
  7699  01F2  0024               	movlb	4	; select bank4
  7700  01F3  149E               	bsf	30,1	;volatile
  7701                           
  7702                           ;i2c2.c: 307: i2c2_state = S_MASTER_SEND_ADDR;
  7703  01F4  3002               	movlw	2
  7704  01F5  00F7               	movwf	??_I2C2_ISR
  7705  01F6  0877               	movf	??_I2C2_ISR,w
  7706  01F7  0020               	movlb	0	; select bank0
  7707  01F8  00DF               	movwf	_i2c2_state
  7708                           
  7709                           ;i2c2.c: 309: break;
  7710  01F9  0008               	return
  7711  01FA                     i1l303:	
  7712                           ;i2c2.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  7713                           
  7714                           
  7715                           ;i2c2.c: 313: if(SSP2CON2bits.ACKSTAT)
  7716  01FA  0024               	movlb	4	; select bank4
  7717  01FB  1F1E               	btfss	30,6	;volatile
  7718  01FC  2A06               	goto	i1l2629
  7719                           
  7720                           ;i2c2.c: 314: {
  7721                           ;i2c2.c: 315: i2c2_object.i2cErrors++;
  7722  01FD  3001               	movlw	1
  7723  01FE  00F7               	movwf	??_I2C2_ISR
  7724  01FF  0877               	movf	??_I2C2_ISR,w
  7725  0200  0021               	movlb	1	; select bank1
  7726  0201  07C4               	addwf	(_i2c2_object^(0+128)+4),f
  7727                           
  7728                           ;i2c2.c: 316: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7729  0202  3004               	movlw	4
  7730  0203  3187  27FB         	fcall	_I2C2_Stop
  7731                           
  7732                           ;i2c2.c: 317: }
  7733  0205  0008               	return
  7734  0206                     i1l2629:	
  7735                           
  7736                           ;i2c2.c: 318: else
  7737                           ;i2c2.c: 319: {
  7738                           ;i2c2.c: 321: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  7739  0206  0875               	movf	I2C2_ISR@i2c_address+1,w
  7740  0207  00F8               	movwf	??_I2C2_ISR+1
  7741  0208  0874               	movf	I2C2_ISR@i2c_address,w
  7742  0209  00F7               	movwf	??_I2C2_ISR
  7743  020A  36F8               	lsrf	??_I2C2_ISR+1,f
  7744  020B  0CF7               	rrf	??_I2C2_ISR,f
  7745  020C  0877               	movf	??_I2C2_ISR,w
  7746  020D  0024               	movlb	4	; select bank4
  7747  020E  0099               	movwf	25	;volatile
  7748                           
  7749                           ;i2c2.c: 324: if(i2c_address & 0x01)
  7750  020F  1C74               	btfss	I2C2_ISR@i2c_address,0
  7751  0210  2A17               	goto	i1l2635
  7752                           
  7753                           ;i2c2.c: 325: {
  7754                           ;i2c2.c: 328: i2c2_state = S_MASTER_10BIT_RESTART;
  7755  0211  300B               	movlw	11
  7756  0212  00F7               	movwf	??_I2C2_ISR
  7757  0213  0877               	movf	??_I2C2_ISR,w
  7758  0214  0020               	movlb	0	; select bank0
  7759  0215  00DF               	movwf	_i2c2_state
  7760                           
  7761                           ;i2c2.c: 329: }
  7762  0216  0008               	return
  7763  0217                     i1l2635:	
  7764                           
  7765                           ;i2c2.c: 330: else
  7766                           ;i2c2.c: 331: {
  7767                           ;i2c2.c: 333: i2c2_state = S_MASTER_SEND_DATA;
  7768  0217  3003               	movlw	3
  7769  0218  00F7               	movwf	??_I2C2_ISR
  7770  0219  0877               	movf	??_I2C2_ISR,w
  7771  021A  0020               	movlb	0	; select bank0
  7772  021B  00DF               	movwf	_i2c2_state
  7773                           
  7774                           ;i2c2.c: 334: }
  7775                           ;i2c2.c: 335: }
  7776                           ;i2c2.c: 337: break;
  7777  021C  0008               	return
  7778  021D                     i1l308:	
  7779                           ;i2c2.c: 339: case S_MASTER_10BIT_RESTART:
  7780                           
  7781                           
  7782                           ;i2c2.c: 341: if(SSP2CON2bits.ACKSTAT)
  7783  021D  0024               	movlb	4	; select bank4
  7784  021E  1F1E               	btfss	30,6	;volatile
  7785  021F  2A29               	goto	i1l309
  7786                           
  7787                           ;i2c2.c: 342: {
  7788                           ;i2c2.c: 343: i2c2_object.i2cErrors++;
  7789  0220  3001               	movlw	1
  7790  0221  00F7               	movwf	??_I2C2_ISR
  7791  0222  0877               	movf	??_I2C2_ISR,w
  7792  0223  0021               	movlb	1	; select bank1
  7793  0224  07C4               	addwf	(_i2c2_object^(0+128)+4),f
  7794                           
  7795                           ;i2c2.c: 344: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  7796  0225  3004               	movlw	4
  7797  0226  3187  27FB         	fcall	_I2C2_Stop
  7798                           
  7799                           ;i2c2.c: 345: }
  7800  0228  0008               	return
  7801  0229                     i1l309:	
  7802                           
  7803                           ;i2c2.c: 346: else
  7804                           ;i2c2.c: 347: {
  7805                           ;i2c2.c: 350: SSP2CON2bits.RSEN = 1;
  7806  0229  149E               	bsf	30,1	;volatile
  7807                           
  7808                           ;i2c2.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  7809  022A  0875               	movf	I2C2_ISR@i2c_address+1,w
  7810  022B  00F8               	movwf	??_I2C2_ISR+1
  7811  022C  0874               	movf	I2C2_ISR@i2c_address,w
  7812  022D  00F7               	movwf	??_I2C2_ISR
  7813  022E  0878               	movf	??_I2C2_ISR+1,w
  7814  022F  00F7               	movwf	??_I2C2_ISR
  7815  0230  01F8               	clrf	??_I2C2_ISR+1
  7816  0231  3006               	movlw	6
  7817  0232  0577               	andwf	??_I2C2_ISR,w
  7818  0233  00F9               	movwf	??_I2C2_ISR+2
  7819  0234  3000               	movlw	0
  7820  0235  0578               	andwf	??_I2C2_ISR+1,w
  7821  0236  00FA               	movwf	??_I2C2_ISR+3
  7822  0237  30F0               	movlw	240
  7823  0238  0479               	iorwf	??_I2C2_ISR+2,w
  7824  0239  00F4               	movwf	I2C2_ISR@i2c_address
  7825  023A  3000               	movlw	0
  7826  023B  047A               	iorwf	??_I2C2_ISR+3,w
  7827  023C  00F5               	movwf	I2C2_ISR@i2c_address+1
  7828                           
  7829                           ;i2c2.c: 357: i2c_address |= 0x0001;
  7830  023D  1474               	bsf	I2C2_ISR@i2c_address,0
  7831                           
  7832                           ;i2c2.c: 360: i2c_10bit_address_restart = 1;
  7833  023E  0021               	movlb	1	; select bank1
  7834  023F  01CB               	clrf	I2C2_ISR@i2c_10bit_address_restart^(0+128)
  7835  0240  0ACB               	incf	I2C2_ISR@i2c_10bit_address_restart^(0+128),f
  7836                           
  7837                           ;i2c2.c: 363: i2c2_state = S_MASTER_SEND_ADDR;
  7838  0241  3002               	movlw	2
  7839  0242  00F7               	movwf	??_I2C2_ISR
  7840  0243  0877               	movf	??_I2C2_ISR,w
  7841  0244  0020               	movlb	0	; select bank0
  7842  0245  00DF               	movwf	_i2c2_state
  7843                           
  7844                           ;i2c2.c: 364: }
  7845                           ;i2c2.c: 366: break;
  7846  0246  0008               	return
  7847  0247                     i1l2649:	
  7848                           ;i2c2.c: 368: case S_MASTER_SEND_ADDR:
  7849                           
  7850                           
  7851                           ;i2c2.c: 381: if(i2c_10bit_address_restart != 1)
  7852  0247  0021               	movlb	1	; select bank1
  7853  0248  034B               	decf	I2C2_ISR@i2c_10bit_address_restart^(0+128),w
  7854  0249  1903               	btfsc	3,2
  7855  024A  2A5D               	goto	i1l2669
  7856                           
  7857                           ;i2c2.c: 382: {
  7858                           ;i2c2.c: 384: i2c_address = p_i2c2_trb_current->address;
  7859  024B  0870               	movf	_p_i2c2_trb_current,w
  7860  024C  0086               	movwf	6
  7861  024D  0187               	clrf	7
  7862  024E  3F40               	moviw [0]fsr1
  7863  024F  00F4               	movwf	I2C2_ISR@i2c_address
  7864  0250  3F41               	moviw [1]fsr1
  7865  0251  00F5               	movwf	I2C2_ISR@i2c_address+1
  7866                           
  7867                           ;i2c2.c: 385: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  7868  0252  0870               	movf	_p_i2c2_trb_current,w
  7869  0253  0086               	movwf	6
  7870  0254  0187               	clrf	7
  7871  0255  3F43               	moviw [3]fsr1
  7872  0256  0020               	movlb	0	; select bank0
  7873  0257  00DD               	movwf	I2C2_ISR@pi2c_buf_ptr
  7874                           
  7875                           ;i2c2.c: 386: i2c_bytes_left = p_i2c2_trb_current->length;
  7876  0258  0870               	movf	_p_i2c2_trb_current,w
  7877  0259  0086               	movwf	6
  7878  025A  0187               	clrf	7
  7879  025B  3F42               	moviw [2]fsr1
  7880  025C  00DC               	movwf	I2C2_ISR@i2c_bytes_left
  7881  025D                     i1l2669:	
  7882                           ;i2c2.c: 407: }
  7883                           ;i2c2.c: 408: }
  7884                           
  7885                           ;i2c2.c: 406: i2c_10bit_address_restart = 0;
  7886                           
  7887                           ;i2c2.c: 404: i2c2_state = S_MASTER_ACK_ADDR;
  7888                           
  7889                           ;i2c2.c: 400: else
  7890                           ;i2c2.c: 401: {
  7891                           ;i2c2.c: 403: SSP2BUF = i2c_address;
  7892                           
  7893                           ;i2c2.c: 399: }
  7894                           
  7895                           ;i2c2.c: 398: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  7896                           
  7897                           ;i2c2.c: 393: {
  7898                           ;i2c2.c: 397: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  7899                           
  7900                           ;i2c2.c: 391: {
  7901                           ;i2c2.c: 392: if (0 == i2c_10bit_address_restart)
  7902                           
  7903                           ;i2c2.c: 387: }
  7904                           ;i2c2.c: 390: if(!1 && (0x0 != i2c_address))
  7905                           
  7906                           
  7907                           ;i2c2.c: 409: else
  7908                           ;i2c2.c: 410: {
  7909                           ;i2c2.c: 412: SSP2BUF = i2c_address;
  7910  025D  0874               	movf	I2C2_ISR@i2c_address,w
  7911  025E  0024               	movlb	4	; select bank4
  7912  025F  0099               	movwf	25	;volatile
  7913                           
  7914                           ;i2c2.c: 413: if(i2c_address & 0x01)
  7915  0260  1C74               	btfss	I2C2_ISR@i2c_address,0
  7916  0261  2A68               	goto	i1l2675
  7917                           
  7918                           ;i2c2.c: 414: {
  7919                           ;i2c2.c: 416: i2c2_state = S_MASTER_ACK_ADDR;
  7920  0262  3005               	movlw	5
  7921  0263  00F7               	movwf	??_I2C2_ISR
  7922  0264  0877               	movf	??_I2C2_ISR,w
  7923  0265  0020               	movlb	0	; select bank0
  7924  0266  00DF               	movwf	_i2c2_state
  7925                           
  7926                           ;i2c2.c: 417: }
  7927  0267  0008               	return
  7928  0268                     i1l2675:	
  7929                           
  7930                           ;i2c2.c: 418: else
  7931                           ;i2c2.c: 419: {
  7932                           ;i2c2.c: 421: i2c2_state = S_MASTER_SEND_DATA;
  7933  0268  3003               	movlw	3
  7934  0269  00F7               	movwf	??_I2C2_ISR
  7935  026A  0877               	movf	??_I2C2_ISR,w
  7936  026B  0020               	movlb	0	; select bank0
  7937  026C  00DF               	movwf	_i2c2_state
  7938                           
  7939                           ;i2c2.c: 422: }
  7940                           ;i2c2.c: 423: }
  7941                           ;i2c2.c: 424: break;
  7942  026D  0008               	return
  7943  026E                     i1l319:	
  7944                           ;i2c2.c: 426: case S_MASTER_SEND_DATA:
  7945                           
  7946                           
  7947                           ;i2c2.c: 429: if(SSP2CON2bits.ACKSTAT)
  7948  026E  0024               	movlb	4	; select bank4
  7949  026F  1F1E               	btfss	30,6	;volatile
  7950  0270  2A7C               	goto	i1l2683
  7951                           
  7952                           ;i2c2.c: 430: {
  7953                           ;i2c2.c: 432: i2c2_object.i2cErrors++;
  7954  0271  3001               	movlw	1
  7955  0272  00F7               	movwf	??_I2C2_ISR
  7956  0273  0877               	movf	??_I2C2_ISR,w
  7957  0274  0021               	movlb	1	; select bank1
  7958  0275  07C4               	addwf	(_i2c2_object^(0+128)+4),f
  7959                           
  7960                           ;i2c2.c: 435: SSP2CON2bits.ACKSTAT = 0;
  7961  0276  0024               	movlb	4	; select bank4
  7962  0277  131E               	bcf	30,6	;volatile
  7963                           
  7964                           ;i2c2.c: 438: I2C2_Stop(I2C2_DATA_NO_ACK);
  7965  0278  3005               	movlw	5
  7966  0279  3187  27FB         	fcall	_I2C2_Stop
  7967                           
  7968                           ;i2c2.c: 440: }
  7969  027B  0008               	return
  7970  027C                     i1l2683:	
  7971                           
  7972                           ;i2c2.c: 441: else
  7973                           ;i2c2.c: 442: {
  7974                           ;i2c2.c: 444: if(i2c_bytes_left-- == 0U)
  7975  027C  3001               	movlw	1
  7976  027D  0020               	movlb	0	; select bank0
  7977  027E  02DC               	subwf	I2C2_ISR@i2c_bytes_left,f
  7978  027F  0A5C               	incf	I2C2_ISR@i2c_bytes_left,w
  7979  0280  1D03               	btfss	3,2
  7980  0281  2A96               	goto	i1l2691
  7981                           
  7982                           ;i2c2.c: 445: {
  7983                           ;i2c2.c: 449: p_i2c2_trb_current++;
  7984  0282  3005               	movlw	5
  7985  0283  00F7               	movwf	??_I2C2_ISR
  7986  0284  0877               	movf	??_I2C2_ISR,w
  7987  0285  07F0               	addwf	_p_i2c2_trb_current,f
  7988                           
  7989                           ;i2c2.c: 452: if(--i2c2_trb_count == 0)
  7990  0286  3001               	movlw	1
  7991  0287  02DE               	subwf	_i2c2_trb_count,f
  7992  0288  1D03               	btfss	3,2
  7993  0289  2A8E               	goto	i1l323
  7994                           
  7995                           ;i2c2.c: 453: {
  7996                           ;i2c2.c: 454: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  7997  028A  3000               	movlw	0
  7998  028B  3187  27FB         	fcall	_I2C2_Stop
  7999                           
  8000                           ;i2c2.c: 455: }
  8001  028D  0008               	return
  8002  028E                     i1l323:	
  8003                           
  8004                           ;i2c2.c: 456: else
  8005                           ;i2c2.c: 457: {
  8006                           ;i2c2.c: 464: SSP2CON2bits.RSEN = 1;
  8007  028E  0024               	movlb	4	; select bank4
  8008  028F  149E               	bsf	30,1	;volatile
  8009                           
  8010                           ;i2c2.c: 467: i2c2_state = S_MASTER_SEND_ADDR;
  8011  0290  3002               	movlw	2
  8012  0291  00F7               	movwf	??_I2C2_ISR
  8013  0292  0877               	movf	??_I2C2_ISR,w
  8014  0293  0020               	movlb	0	; select bank0
  8015  0294  00DF               	movwf	_i2c2_state
  8016                           
  8017                           ;i2c2.c: 469: }
  8018                           ;i2c2.c: 470: }
  8019  0295  0008               	return
  8020  0296                     i1l2691:	
  8021                           
  8022                           ;i2c2.c: 471: else
  8023                           ;i2c2.c: 472: {
  8024                           ;i2c2.c: 474: SSP2BUF = *pi2c_buf_ptr++;
  8025  0296  085D               	movf	I2C2_ISR@pi2c_buf_ptr,w
  8026  0297  0086               	movwf	6
  8027  0298  0187               	clrf	7
  8028  0299  0801               	movf	1,w
  8029  029A  0024               	movlb	4	; select bank4
  8030  029B  0099               	movwf	25	;volatile
  8031  029C  3001               	movlw	1
  8032  029D  00F7               	movwf	??_I2C2_ISR
  8033  029E  0877               	movf	??_I2C2_ISR,w
  8034  029F  0020               	movlb	0	; select bank0
  8035  02A0  07DD               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  8036                           
  8037                           ;i2c2.c: 475: }
  8038                           ;i2c2.c: 476: }
  8039                           ;i2c2.c: 477: break;
  8040  02A1  0008               	return
  8041  02A2                     i1l326:	
  8042                           ;i2c2.c: 479: case S_MASTER_ACK_ADDR:
  8043                           
  8044                           
  8045                           ;i2c2.c: 482: if(SSP2CON2bits.ACKSTAT)
  8046  02A2  0024               	movlb	4	; select bank4
  8047  02A3  1F1E               	btfss	30,6	;volatile
  8048  02A4  2AB0               	goto	i1l327
  8049                           
  8050                           ;i2c2.c: 483: {
  8051                           ;i2c2.c: 486: i2c2_object.i2cErrors++;
  8052  02A5  3001               	movlw	1
  8053  02A6  00F7               	movwf	??_I2C2_ISR
  8054  02A7  0877               	movf	??_I2C2_ISR,w
  8055  02A8  0021               	movlb	1	; select bank1
  8056  02A9  07C4               	addwf	(_i2c2_object^(0+128)+4),f
  8057                           
  8058                           ;i2c2.c: 489: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  8059  02AA  3004               	movlw	4
  8060  02AB  3187  27FB         	fcall	_I2C2_Stop
  8061                           
  8062                           ;i2c2.c: 492: SSP2CON2bits.ACKSTAT = 0;
  8063  02AD  0024               	movlb	4	; select bank4
  8064  02AE  131E               	bcf	30,6	;volatile
  8065                           
  8066                           ;i2c2.c: 493: }
  8067  02AF  0008               	return
  8068  02B0                     i1l327:	
  8069                           
  8070                           ;i2c2.c: 494: else
  8071                           ;i2c2.c: 495: {
  8072                           ;i2c2.c: 496: SSP2CON2bits.RCEN = 1;
  8073  02B0  159E               	bsf	30,3	;volatile
  8074                           
  8075                           ;i2c2.c: 497: i2c2_state = S_MASTER_ACK_RCV_DATA;
  8076  02B1  3008               	movlw	8
  8077  02B2  00F7               	movwf	??_I2C2_ISR
  8078  02B3  0877               	movf	??_I2C2_ISR,w
  8079  02B4  0020               	movlb	0	; select bank0
  8080  02B5  00DF               	movwf	_i2c2_state
  8081                           
  8082                           ;i2c2.c: 498: }
  8083                           ;i2c2.c: 499: break;
  8084  02B6  0008               	return
  8085  02B7                     i1l2703:	
  8086                           ;i2c2.c: 501: case S_MASTER_RCV_DATA:
  8087                           
  8088                           
  8089                           ;i2c2.c: 506: i2c2_state = S_MASTER_ACK_RCV_DATA;
  8090  02B7  3008               	movlw	8
  8091  02B8  00F7               	movwf	??_I2C2_ISR
  8092  02B9  0877               	movf	??_I2C2_ISR,w
  8093  02BA  00DF               	movwf	_i2c2_state
  8094                           
  8095                           ;i2c2.c: 509: SSP2CON2bits.RCEN = 1;
  8096  02BB  0024               	movlb	4	; select bank4
  8097  02BC  159E               	bsf	30,3	;volatile
  8098                           
  8099                           ;i2c2.c: 511: break;
  8100  02BD  0008               	return
  8101  02BE                     i1l2707:	
  8102                           ;i2c2.c: 513: case S_MASTER_ACK_RCV_DATA:
  8103                           
  8104                           
  8105                           ;i2c2.c: 516: *pi2c_buf_ptr++ = SSP2BUF;
  8106  02BE  0024               	movlb	4	; select bank4
  8107  02BF  0819               	movf	25,w	;volatile
  8108  02C0  00F7               	movwf	??_I2C2_ISR
  8109  02C1  0020               	movlb	0	; select bank0
  8110  02C2  085D               	movf	I2C2_ISR@pi2c_buf_ptr,w
  8111  02C3  0086               	movwf	6
  8112  02C4  0187               	clrf	7
  8113  02C5  0877               	movf	??_I2C2_ISR,w
  8114  02C6  0081               	movwf	1
  8115  02C7  3001               	movlw	1
  8116  02C8  00F7               	movwf	??_I2C2_ISR
  8117  02C9  0877               	movf	??_I2C2_ISR,w
  8118  02CA  07DD               	addwf	I2C2_ISR@pi2c_buf_ptr,f
  8119                           
  8120                           ;i2c2.c: 519: if(--i2c_bytes_left)
  8121  02CB  3001               	movlw	1
  8122  02CC  02DC               	subwf	I2C2_ISR@i2c_bytes_left,f
  8123  02CD  1903               	btfsc	3,2
  8124  02CE  2AD7               	goto	i1l331
  8125                           
  8126                           ;i2c2.c: 520: {
  8127                           ;i2c2.c: 526: SSP2CON2bits.ACKDT = 0;
  8128  02CF  0024               	movlb	4	; select bank4
  8129  02D0  129E               	bcf	30,5	;volatile
  8130                           
  8131                           ;i2c2.c: 529: i2c2_state = S_MASTER_RCV_DATA;
  8132  02D1  3006               	movlw	6
  8133  02D2  00F7               	movwf	??_I2C2_ISR
  8134  02D3  0877               	movf	??_I2C2_ISR,w
  8135  02D4  0020               	movlb	0	; select bank0
  8136  02D5  00DF               	movwf	_i2c2_state
  8137                           
  8138                           ;i2c2.c: 530: }
  8139  02D6  2ADB               	goto	i1l2719
  8140  02D7                     i1l331:	
  8141                           
  8142                           ;i2c2.c: 531: else
  8143                           ;i2c2.c: 532: {
  8144                           ;i2c2.c: 536: SSP2CON2bits.ACKDT = 1;
  8145  02D7  0024               	movlb	4	; select bank4
  8146  02D8  169E               	bsf	30,5	;volatile
  8147                           
  8148                           ;i2c2.c: 538: I2C2_FunctionComplete();
  8149  02D9  318D  2594         	fcall	_I2C2_FunctionComplete
  8150  02DB                     i1l2719:	
  8151                           
  8152                           ;i2c2.c: 539: }
  8153                           ;i2c2.c: 542: SSP2CON2bits.ACKEN = 1;
  8154  02DB  0024               	movlb	4	; select bank4
  8155  02DC  161E               	bsf	30,4	;volatile
  8156                           
  8157                           ;i2c2.c: 543: break;
  8158  02DD  0008               	return
  8159  02DE                     i1l2721:	
  8160                           ;i2c2.c: 545: case S_MASTER_RCV_STOP:
  8161                           
  8162                           
  8163                           ;i2c2.c: 546: case S_MASTER_SEND_STOP:
  8164                           ;i2c2.c: 549: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  8165  02DE  3000               	movlw	0
  8166  02DF  3187  27FB         	fcall	_I2C2_Stop
  8167                           
  8168                           ;i2c2.c: 550: break;
  8169  02E1  0008               	return
  8170  02E2                     i1l2723:	
  8171                           ;i2c2.c: 552: default:
  8172                           
  8173                           
  8174                           ;i2c2.c: 556: i2c2_object.i2cErrors++;
  8175  02E2  3001               	movlw	1
  8176  02E3  00F7               	movwf	??_I2C2_ISR
  8177  02E4  0877               	movf	??_I2C2_ISR,w
  8178  02E5  0021               	movlb	1	; select bank1
  8179  02E6  07C4               	addwf	(_i2c2_object^(0+128)+4),f
  8180                           
  8181                           ;i2c2.c: 557: I2C2_Stop(I2C2_LOST_STATE);
  8182  02E7  3006               	movlw	6
  8183  02E8  3187  27FB         	fcall	_I2C2_Stop
  8184                           
  8185                           ;i2c2.c: 560: }
  8186                           
  8187                           ;i2c2.c: 558: break;
  8188  02EA  0008               	return
  8189  02EB                     i1l2729:	
  8190  02EB  0020               	movlb	0	; select bank0
  8191  02EC  085F               	movf	_i2c2_state,w
  8192                           
  8193                           ; Switch size 1, requested type "space"
  8194                           ; Number of cases is 11, Range of values is 0 to 11
  8195                           ; switch strategies available:
  8196                           ; Name         Instructions Cycles
  8197                           ; direct_byte           30     6 (fixed)
  8198                           ; simple_byte           34    18 (average)
  8199                           ; jumptable            260     6 (fixed)
  8200                           ;	Chosen strategy is direct_byte
  8201  02ED  0084               	movwf	4
  8202  02EE  300C               	movlw	12
  8203  02EF  0204               	subwf	4,w
  8204  02F0  1803               	skipnc
  8205  02F1  2AE2               	goto	i1l2723
  8206  02F2  3188               	movlp	high i1S3903
  8207  02F3  3504               	lslf	4,w
  8208  02F4  3E00               	addlw	low i1S3903
  8209  02F5  0082               	movwf	2
  8210  02F6  0008               	return
  8211  02F7                     __end_of_I2C2_ISR:	
  8212                           
  8213                           	psect	swtext1
  8214  0800                     __pswtext1:	
  8215  0800                     i1S3903:	
  8216  0800  3181  29C4         	ljmp	i1l297
  8217  0802  3181  29F2         	ljmp	i1l302
  8218  0804  3182  2A47         	ljmp	i1l2649
  8219  0806  3182  2A6E         	ljmp	i1l319
  8220  0808  3182  2ADE         	ljmp	i1l2721
  8221  080A  3182  2AA2         	ljmp	i1l326
  8222  080C  3182  2AB7         	ljmp	i1l2703
  8223  080E  3182  2ADE         	ljmp	i1l2721
  8224  0810  3182  2ABE         	ljmp	i1l2707
  8225  0812  3182  2AE2         	ljmp	i1l2723
  8226  0814  3181  29FA         	ljmp	i1l303
  8227  0816  3182  2A1D         	ljmp	i1l308
  8228                           
  8229                           	psect	text41
  8230  07FB                     __ptext41:	
  8231 ;; *************** function _I2C2_Stop *****************
  8232 ;; Defined at:
  8233 ;;		line 581 in file "mcc_generated_files/i2c2.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  completion_c    1    wreg     enum E2972
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  completion_c    1    0[COMMON] enum E2972
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  1    wreg      void 
  8240 ;; Registers used:
  8241 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;Total ram usage:        0 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_I2C2_ISR
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           
  8261                           ;psect for function _I2C2_Stop
  8262  07FB                     _I2C2_Stop:	
  8263                           
  8264                           ;i2c2.c: 584: SSP2CON2bits.PEN = 1;
  8265                           
  8266                           ;incstack = 0
  8267                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  8268  07FB  0024               	movlb	4	; select bank4
  8269  07FC  151E               	bsf	30,2	;volatile
  8270                           
  8271                           ;i2c2.c: 591: }
  8272                           ;i2c2.c: 594: i2c2_state = S_MASTER_IDLE;
  8273  07FD  0020               	movlb	0	; select bank0
  8274  07FE  01DF               	clrf	_i2c2_state
  8275  07FF  0008               	return
  8276  0800                     __end_of_I2C2_Stop:	
  8277                           
  8278                           	psect	text42
  8279  0D94                     __ptext42:	
  8280 ;; *************** function _I2C2_FunctionComplete *****************
  8281 ;; Defined at:
  8282 ;;		line 563 in file "mcc_generated_files/i2c2.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;		None
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;		None
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1    wreg      void 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;Total ram usage:        1 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; This function calls:
  8303 ;;		Nothing
  8304 ;; This function is called by:
  8305 ;;		_I2C2_ISR
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           
  8310                           ;psect for function _I2C2_FunctionComplete
  8311  0D94                     _I2C2_FunctionComplete:	
  8312                           
  8313                           ;i2c2.c: 567: p_i2c2_trb_current++;
  8314                           
  8315                           ;incstack = 0
  8316                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  8317  0D94  3005               	movlw	5
  8318  0D95  00F6               	movwf	??_I2C2_FunctionComplete
  8319  0D96  0876               	movf	??_I2C2_FunctionComplete,w
  8320  0D97  07F0               	addwf	_p_i2c2_trb_current,f
  8321                           
  8322                           ;i2c2.c: 570: if(--i2c2_trb_count == 0)
  8323  0D98  3001               	movlw	1
  8324  0D99  0020               	movlb	0	; select bank0
  8325  0D9A  02DE               	subwf	_i2c2_trb_count,f
  8326  0D9B  1D03               	btfss	3,2
  8327  0D9C  2DA2               	goto	i1l338
  8328                           
  8329                           ;i2c2.c: 571: {
  8330                           ;i2c2.c: 572: i2c2_state = S_MASTER_SEND_STOP;
  8331  0D9D  3004               	movlw	4
  8332  0D9E  00F6               	movwf	??_I2C2_FunctionComplete
  8333  0D9F  0876               	movf	??_I2C2_FunctionComplete,w
  8334  0DA0  00DF               	movwf	_i2c2_state
  8335                           
  8336                           ;i2c2.c: 573: }
  8337  0DA1  0008               	return
  8338  0DA2                     i1l338:	
  8339                           
  8340                           ;i2c2.c: 574: else
  8341                           ;i2c2.c: 575: {
  8342                           ;i2c2.c: 576: i2c2_state = S_MASTER_RESTART;
  8343  0DA2  01DF               	clrf	_i2c2_state
  8344  0DA3  0ADF               	incf	_i2c2_state,f
  8345  0DA4  0008               	return
  8346  0DA5                     __end_of_I2C2_FunctionComplete:	
  8347                           
  8348                           	psect	text43
  8349  0D2C                     __ptext43:	
  8350 ;; *************** function _I2C2_BusCollisionISR *****************
  8351 ;; Defined at:
  8352 ;;		line 728 in file "mcc_generated_files/i2c2.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;		None
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;		None
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  1    wreg      void 
  8359 ;; Registers used:
  8360 ;;		None
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;Total ram usage:        0 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; This function calls:
  8373 ;;		Nothing
  8374 ;; This function is called by:
  8375 ;;		_INTERRUPT_InterruptManager
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           
  8380                           ;psect for function _I2C2_BusCollisionISR
  8381  0D2C                     _I2C2_BusCollisionISR:	
  8382                           
  8383                           ;i2c2.c: 731: PIR4bits.BCL2IF = 0;
  8384                           
  8385                           ;incstack = 0
  8386                           ; Regs used in _I2C2_BusCollisionISR: []
  8387  0D2C  0020               	movlb	0	; select bank0
  8388  0D2D  1094               	bcf	20,1	;volatile
  8389  0D2E  0008               	return
  8390  0D2F                     __end_of_I2C2_BusCollisionISR:	
  8391                           
  8392                           	psect	text44
  8393  0E2D                     __ptext44:	
  8394 ;; *************** function _EUSART_Receive_ISR *****************
  8395 ;; Defined at:
  8396 ;;		line 145 in file "mcc_generated_files/eusart.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;		None
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;		None
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;Total ram usage:        1 bytes
  8415 ;; Hardware stack levels used:    1
  8416 ;; This function calls:
  8417 ;;		Nothing
  8418 ;; This function is called by:
  8419 ;;		_INTERRUPT_InterruptManager
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423                           
  8424                           ;psect for function _EUSART_Receive_ISR
  8425  0E2D                     _EUSART_Receive_ISR:	
  8426                           
  8427                           ;eusart.c: 148: if(1 == RCSTAbits.OERR)
  8428                           
  8429                           ;incstack = 0
  8430                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  8431  0E2D  0023               	movlb	3	; select bank3
  8432  0E2E  1C9D               	btfss	29,1	;volatile
  8433  0E2F  2E32               	goto	i1l2587
  8434                           
  8435                           ;eusart.c: 149: {
  8436                           ;eusart.c: 152: RCSTAbits.CREN = 0;
  8437  0E30  121D               	bcf	29,4	;volatile
  8438                           
  8439                           ;eusart.c: 153: RCSTAbits.CREN = 1;
  8440  0E31  161D               	bsf	29,4	;volatile
  8441  0E32                     i1l2587:	
  8442                           
  8443                           ;eusart.c: 154: }
  8444                           ;eusart.c: 157: eusartRxBuffer[eusartRxHead++] = RCREG;
  8445  0E32  0819               	movf	25,w	;volatile
  8446  0E33  00F6               	movwf	??_EUSART_Receive_ISR
  8447  0E34  0873               	movf	_eusartRxHead,w
  8448  0E35  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8449  0E36  0086               	movwf	6
  8450  0E37  0187               	clrf	7
  8451  0E38  0876               	movf	??_EUSART_Receive_ISR,w
  8452  0E39  0081               	movwf	1
  8453  0E3A  3001               	movlw	1
  8454  0E3B  00F6               	movwf	??_EUSART_Receive_ISR
  8455  0E3C  0876               	movf	??_EUSART_Receive_ISR,w
  8456  0E3D  07F3               	addwf	_eusartRxHead,f	;volatile
  8457                           
  8458                           ;eusart.c: 158: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8459  0E3E  3020               	movlw	32
  8460  0E3F  0273               	subwf	_eusartRxHead,w	;volatile
  8461  0E40  1803               	btfsc	3,0
  8462                           
  8463                           ;eusart.c: 159: {
  8464                           ;eusart.c: 160: eusartRxHead = 0;
  8465  0E41  01F3               	clrf	_eusartRxHead	;volatile
  8466                           
  8467                           ;eusart.c: 161: }
  8468                           ;eusart.c: 162: eusartRxCount++;
  8469  0E42  3001               	movlw	1
  8470  0E43  00F6               	movwf	??_EUSART_Receive_ISR
  8471  0E44  0876               	movf	??_EUSART_Receive_ISR,w
  8472  0E45  07F1               	addwf	_eusartRxCount,f	;volatile
  8473  0E46  0008               	return
  8474  0E47                     __end_of_EUSART_Receive_ISR:	
  8475  007E                     btemp	set	126	;btemp
  8476  007E                     int$flags	set	126
  8477  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     57      64
    BANK1            80     17      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            18      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c2_tr_queue.pTrFlag	PTR enum E2972 size(1) Largest target is 0

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 4
		 -> SETTINGS_stgs(EEDATA[4]), 

    memcpyee@from	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(BANK0[2]), __ctoee@data(COMMON[1]), 

    memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(BANK0[2]), __ctoee@data(COMMON[1]), 

    eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 4
		 -> SETTINGS_stgs(EEDATA[4]), 

    eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    SETTINGS_read@stgs	PTR struct . size(1) Largest target is 4
		 -> settings(BANK1[4]), 

    SETTINGS_write@stgs	PTR struct . size(1) Largest target is 4
		 -> settings(BANK1[4]), 

    EEPROM_store_setting@s	PTR struct . size(1) Largest target is 4
		 -> settings(BANK1[4]), 

    EEPROM_store_all_settings@s	PTR struct . size(1) Largest target is 4
		 -> settings(BANK1[4]), 

    EEPROM_load_setting@s	PTR struct . size(1) Largest target is 4
		 -> settings(BANK1[4]), 

    EEPROM_load_all_settings@s	PTR struct . size(1) Largest target is 4
		 -> settings(BANK1[4]), 

    PACKET_RxPtr	PTR unsigned char  size(2) Largest target is 135
		 -> PACKET_RxPacket(BIGRAM[135]), NULL(NULL[0]), 

    PACKET_calculate_checksum@data	PTR unsigned char  size(2) Largest target is 135
		 -> PACKET_RxPacket(BIGRAM[135]), PACKET_pkt(BIGRAM[135]), 

    PACKET_UpdateAndSend@pkt	PTR struct . size(2) Largest target is 135
		 -> PACKET_pkt(BIGRAM[135]), 

    PACKET_SendPacket@pkt	PTR struct . size(2) Largest target is 135
		 -> PACKET_pkt(BIGRAM[135]), 

    handle_rx_packet@stgs_pld_p	PTR struct . size(2) Largest target is 128
		 -> PACKET_pkt...stgs_payload(BIGRAM[4]), handle_rx_packet@pkt_p..(COMMON[128]), 

    sp__PACKET_get_rx_packet_ptr	PTR struct . size(2) Largest target is 135
		 -> PACKET_pkt(BIGRAM[135]), 

    handle_rx_packet@pkt_p	PTR struct . size(2) Largest target is 135
		 -> PACKET_pkt(BIGRAM[135]), 

    main@send_data_ptr	PTR unsigned char  size(1) Largest target is 8
		 -> main@send_data(BANK1[8]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c2_object.pTrTail.pTrFlag	PTR enum E2972 size(1) Largest target is 0

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    F3084.pbuffer	PTR unsigned char  size(1) Largest target is 0

    F3079.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E2972 size(1) Largest target is 0

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    S476$pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c2_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    S488$pTrFlag	PTR enum E2972 size(1) Largest target is 0

    p_i2c2_current.pTrFlag	PTR enum E2972 size(1) Largest target is 0

    S488$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), NULL(NULL[0]), 

    S499$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), 

    S499$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C2_ISR
    _I2C2_ISR->_I2C2_FunctionComplete

Critical Paths under _main in BANK0

    _main->___fttol
    _handle_rx_packet->_EEPROM_load_all_settings
    _handle_rx_packet->_EEPROM_load_setting
    _handle_rx_packet->_PACKET_UpdateAndSend
    _PACKET_UpdateAndSend->_PACKET_SendPacket
    _PACKET_SendPacket->_EUSART_Write
    _EEPROM_store_setting->___itoee
    _EEPROM_store_all_settings->___itoee
    ___itoee->_memcpyee
    _EEPROM_load_setting->___eetoi
    _EEPROM_load_all_settings->___eetoi
    ___eetoi->_eecpymem
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    _SYSTEM_Initialize->_I2C2_Initialize
    _PACKET_Available->_PACKET_handle_byte
    _PACKET_handle_byte->_PACKET_calculate_checksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   36591
                                             55 BANK0      2     2      0
                                              0 BANK1     17    17      0
                  _ADC_GetConversion
           _EEPROM_load_all_settings
                   _PACKET_Available
                  _PACKET_Initialize
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                   _handle_rx_packet
 ---------------------------------------------------------------------------------
 (1) _handle_rx_packet                                     7     7      0   14752
                                             16 BANK0      7     7      0
           _EEPROM_load_all_settings
                _EEPROM_load_setting
          _EEPROM_store_all_settings
               _EEPROM_store_setting
                  _PACKET_SendPacket
               _PACKET_UpdateAndSend
           _PACKET_get_rx_packet_ptr
                      _SETTINGS_read
                     _SETTINGS_write
 ---------------------------------------------------------------------------------
 (2) _SETTINGS_write                                       5     2      3     408
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _SETTINGS_read                                        4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _PACKET_get_rx_packet_ptr                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PACKET_UpdateAndSend                                 8     6      2    3155
                                              9 BANK0      7     5      2
                  _PACKET_SendPacket
          _PACKET_calculate_checksum
 ---------------------------------------------------------------------------------
 (3) _PACKET_SendPacket                                    8     6      2     431
                                              1 BANK0      8     6      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_store_setting                                 3     2      1    2565
                                             11 BANK0      3     2      1
                            ___itoee
 ---------------------------------------------------------------------------------
 (2) _EEPROM_store_all_settings                            3     3      0    2498
                                             11 BANK0      3     3      0
                            ___itoee
 ---------------------------------------------------------------------------------
 (3) ___itoee                                              5     3      2    2292
                                              6 BANK0      5     3      2
                           _memcpyee
 ---------------------------------------------------------------------------------
 (4) _memcpyee                                             6     4      2    2150
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_load_setting                                  3     2      1    2192
                                             13 BANK0      3     2      1
                            ___eetoi
 ---------------------------------------------------------------------------------
 (2) _EEPROM_load_all_settings                             3     3      0    2170
                                             13 BANK0      3     3      0
                            ___eetoi
 ---------------------------------------------------------------------------------
 (3) ___eetoi                                              7     5      2    1919
                                              6 BANK0      7     5      2
                           _eecpymem
 ---------------------------------------------------------------------------------
 (4) _eecpymem                                             6     4      2    1820
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    4484
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     781
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     506
                                             41 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    5076
                                             12 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    6043
                                             28 BANK0     13     7      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    4318
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PACKET_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PACKET_Available                                     2     2      0    2068
                                             21 BANK0      2     2      0
                        _EUSART_Read
      _PACKET_EUSART_Bytes_Available
                 _PACKET_handle_byte
 ---------------------------------------------------------------------------------
 (2) _PACKET_handle_byte                                  13    13      0    1997
                                              8 BANK0     13    13      0
          _PACKET_calculate_checksum
 ---------------------------------------------------------------------------------
 (3) _PACKET_calculate_checksum                            8     4      4    1520
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _PACKET_EUSART_Bytes_Available                        0     0      0       0
            _EUSART_RxBytesAvailable
 ---------------------------------------------------------------------------------
 (3) _EUSART_RxBytesAvailable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              5 COMMON     1     1      0
                 _EUSART_Receive_ISR
               _I2C2_BusCollisionISR
                           _I2C2_ISR
 ---------------------------------------------------------------------------------
 (6) _I2C2_ISR                                             4     4      0       0
                                              1 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C2_Stop                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EEPROM_load_all_settings
     ___eetoi
       _eecpymem
   _PACKET_Available
     _EUSART_Read
     _PACKET_EUSART_Bytes_Available
       _EUSART_RxBytesAvailable
     _PACKET_handle_byte
       _PACKET_calculate_checksum
   _PACKET_Initialize
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _WDT_Initialize
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwdiv
   ___lwtoft
     ___ftpack
   _handle_rx_packet
     _EEPROM_load_all_settings
       ___eetoi
         _eecpymem
     _EEPROM_load_setting
       ___eetoi
         _eecpymem
     _EEPROM_store_all_settings
       ___itoee
         _memcpyee
     _EEPROM_store_setting
       ___itoee
         _memcpyee
     _PACKET_SendPacket
       _EUSART_Write
     _PACKET_UpdateAndSend
       _PACKET_SendPacket
         _EUSART_Write
       _PACKET_calculate_checksum
     _PACKET_get_rx_packet_ptr
     _SETTINGS_read
     _SETTINGS_write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       4       0        1.6%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               12      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Mar 13 23:07:17 2018

                                     pc 0002                 __size_of_SETTINGS_write 000D  
                           __CFG_CP$OFF 0000                                      _RD 0CA8  
                                    _WR 0CA9                  __end_of_FVR_Initialize 0D39  
                          ___ftadd@exp1 0048                            ___ftadd@exp2 0047  
                           __CFG_LVP$ON 0000                            ___ftadd@sign 0046  
                                   l108 0EEB                                     l158 0D5A  
                                   l438 04C2                                     l644 0F86  
                                   l661 0FDA                                     l656 0FBC  
                                   l649 0F9A                                     l875 07BC  
                                   l876 07C4                                     l868 07A9  
                                   l959 075C                                     l899 05E4  
                                   _GIE 005F                            __CFG_CPD$OFF 0000  
                          __CFG_BORV$LO 0000                                     wreg 0009  
                          __CFG_IESO$ON 0000                            ?_EUSART_Read 0076  
                ??_EEPROM_store_setting 002C                        __end_of_I2C2_ISR 02F7  
                                  l3201 0EF8                                    l3211 07F8  
                                  l3209 07E1                                    l3411 0338  
                                  l3403 0328                                    l3309 0EBA  
                                  l3511 0786                                    l3159 0F94  
                                  l3441 038F                                    l3521 07AE  
                                  l3513 0790                                    l3451 03BB  
                                  l3419 0348                                    l3523 07B6  
                                  l3515 0795                                    l3507 077F  
                                  l3603 0150                                    l3437 0371  
                                  l3701 0668                                    l3189 0FD4  
                                  l3613 018D                                    l3465 03DD  
                                  l3625 056D                                    l3713 06A3  
                                  l3467 03E3                                    l3395 0318  
                                  l3379 0302                                    l3635 0583  
                                  l3803 0F7B                                    l3485 03F7  
                                  l3493 042C                                    l3389 030C  
                                  l3557 0DEB                                    l3653 05B0  
                                  l3629 0574                                    l3725 06BF  
                                  l3717 06AB                                    l3581 00AA  
                                  l3487 042A                                    l3479 03F4  
                                  l3671 05F6                                    l3655 05BA  
                                  l3647 059D                                    l3591 00E4  
                                  l3567 006C                                    l3665 05D6  
                                  l3657 05BF                                    l3729 06C7  
                                  l3745 0708                                    l3585 00C8  
                                  l3499 042F                                    l3675 0608  
                                  l3667 05E0                                    l3659 05C3  
                                  l3771 0753                                    l3763 0738  
                                  l3595 0102                                    l3827 043D  
                                  l3685 0623                                    l3773 075F  
                                  l3765 0746                                    l3845 04CD  
                                  l3695 0652                                    l3791 0F54  
                                  l3599 0129                                    l3847 04D8  
                                  l3777 076D                                    l3793 0F60  
                                  l3799 0F72                                    _LATA 010C  
                                  _LATB 010D                                    _LATC 010E  
                                  u3205 07E7                                    u4005 06B2  
                                  u4105 0739                                    u4035 06C8  
                                  u4045 06CE                                    u4205 0F6B  
                                  u3415 0407                                    u4135 0754  
                                  u4215 0F73                                    u4075 070F  
                                  u3195 0F0D                                    u3365 03B7  
                                  u3525 07CB                                    u3445 078B  
                                  u4245 04C8                                    u4175 0F57  
                                  u4255 04D4                                    u3465 07A4  
                                  u4195 0F61                                    u3485 07B1  
                                  u3805 059E                                    u4287 0EE6  
                                  u3835 05B1                                    u3865 05C4  
                                  u3965 0674                                    u3895 05D7  
                                  u3975 0684                                    u3995 06AC  
           ??_EEPROM_store_all_settings 002B                                    _WREN 0CAA  
                                  _WPUA 020C                                    _WPUB 020D  
                                  _WPUC 020E                            __CFG_WRT$OFF 0000  
                         __CFG_FCMEN$ON 0000                                    _main 0431  
                          ___ftpack@arg 0020                            ___ftpack@exp 0023  
                                  fsr0h 0005                                    fsr1h 0007  
                                  indf0 0000                                    fsr0l 0004  
                                  indf1 0001                                    fsr1l 0006  
                                  btemp 007E                           __CFG_BOREN$ON 0000  
                                  start 002C                           __CFG_MCLRE$ON 0000  
                          ___ftmul@cntr 003A                            ___ftmul@sign 003B  
                          ___itoee@addr 002A                            ___itoee@data 0026  
                          ___fttol@exp1 0056                            ___fttol@lval 0052  
                            _i2c2_state 005F                         ?_FVR_Initialize 0076  
                         ?_EUSART_Write 0076          __size_of_OSCILLATOR_Initialize 0007  
         __end_of_OSCILLATOR_Initialize 0D50                                   ?_main 0076  
                       __end_of___eetoi 0E00                                   _EEADR 0191  
                       __end_of___ftadd 063B                           __CFG_WDTE$OFF 0000  
                     __end_of_I2C2_Stop 0800                                   _CARRY 0018  
                       __end_of___ftmul 06EF                         __end_of___fttol 0776  
                       __end_of___itoee 0D94                         __end_of___lwdiv 0F80  
        __size_of_I2C2_FunctionComplete 0011                                   i1l302 01F2  
                                 i1l230 0015                                   i1l303 01FA  
                                 i1l232 001F                                   i1l331 02D7  
                                 i1l323 028E                                   i1l308 021D  
                                 i1l309 0229                                   i1l237 0027  
                                 i1l326 02A2                                   i1l327 02B0  
                                 i1l319 026E                                   i1l338 0DA2  
                                 i1l297 01C4                                   _RCREG 0199  
         __end_of_I2C2_FunctionComplete 0DA5                                   _RCSTA 019D  
                                 _TRISA 008C                                   _TRISB 008D  
                                 _TRISC 008E                                   _TXREG 019A  
                                 _TXSTA 019E                            main@level_ft 00E9  
                  _PACKET_UpdateAndSend 0F1F   __end_of_PACKET_EUSART_Bytes_Available 0D32  
__size_of_PACKET_EUSART_Bytes_Available 0003           _PACKET_EUSART_Bytes_Available 0D2F  
                        _WDT_Initialize 0D39                           ___ftpack@sign 0024  
             __size_of_PACKET_Available 0013               __size_of_handle_rx_packet 0164  
                                 status 0003                                   wtemp0 007E  
              _EEPROM_load_all_settings 0E63                __size_of_SPI1_Initialize 0006  
                 handle_rx_packet@pkt_p 0035                   __end_of_SETTINGS_read 0D79  
                     ??_I2C2_Initialize 0020                         __initialization 002E  
                          __end_of_main 0545        __size_of_EUSART_RxBytesAvailable 0002  
             _EEPROM_store_all_settings 0E7F                          ??_EUSART_Write 0020  
           ?_INTERRUPT_InterruptManager 0076        __end_of_PACKET_get_rx_packet_ptr 0D49  
               EEPROM_store_setting@num 002B                         _curr_tank_level 00C9  
                EEPROM_load_setting@num 002D             __size_of_PACKET_handle_byte 013A  
                                ??_main 0057                           ___fttol@sign1 0051  
                           _i2c2_object 00C0                          __CFG_PLLEN$OFF 0000  
                __end_of_WDT_Initialize 0D3D                   ?_PACKET_UpdateAndSend 0029  
                                _ADCON0 009D                                  _ADCON1 009E  
                                i1S3903 0800                                  _ADRESH 009C  
                                _ADRESL 009B                                  _EEDATA 0193  
                                _EECON1 0195                                  _EECON2 0196  
                                _ANSELA 018C                                  _ANSELB 018D  
                                _ANSELC 018E                        __end_of___ftpack 07DB  
                                _BORCON 0116            __end_of_I2C2_BusCollisionISR 0D2F  
                                i1l2703 02B7                                  i1l2721 02DE  
                                i1l2617 01E5                                  i1l2723 02E2  
                                i1l2707 02BE                                  i1l2635 0217  
                                i1l2629 0206                      SETTINGS_write@stgs 0024  
                                i1l2719 02DB                                  i1l2649 0247  
                                i1l2729 02EB                                  i1l2587 0E32  
                                i1l2691 0296                                  i1l2683 027C  
                                i1l2675 0268                                  i1l2669 025D  
                                _FVRCON 0117                        __end_of___lwtoft 0E15  
                                _OSCCON 0099                                  _SPBRGH 019C  
                                _SPBRGL 019B                                  _WDTCON 0097  
               PACKET_UpdateAndSend@pkt 0029                          __CFG_PWRTE$OFF 0000  
                      __end_of_eecpymem 0FB6            __size_of_EEPROM_load_setting 0012  
                        _SETTINGS_write 0D79                               ??___eetoi 0028  
                             ??___ftadd 0042                          _p_i2c2_current 00CC  
                        __CFG_STVREN$ON 0000                               ??___ftmul 0032  
                             ??___fttol 004D                               ??___itoee 0028  
                         main@send_data 00DF                               ??___lwdiv 0024  
                           memcpyee@ptr 0024                        __end_of_memcpyee 1000  
                             ?_I2C2_ISR 0076                I2C2_Stop@completion_code 0076  
                 ___ftmul@f3_as_product 0037                         ?_WDT_Initialize 0076  
              ADC_GetConversion@channel 0023                    __size_of_EUSART_Read 001E  
                     _SYSTEM_Initialize 0E15                 __end_of__initialization 0051  
                            ___ftadd@f1 003C                              ___ftadd@f2 003F  
                    ?_SYSTEM_Initialize 0076                  __end_of_SETTINGS_write 0D86  
                            ___ftmul@f1 002C                              ___ftmul@f2 002F  
                            ___fttol@f1 0049                          __pcstackCOMMON 0076  
                   ??_SYSTEM_Initialize 0021                       ??_SPI1_Initialize 0020  
                        _i2c2_trb_count 005E                              ??_I2C2_ISR 0077  
    __size_of_PACKET_calculate_checksum 0020                              ___lwtoft@c 0028  
                  EEPROM_load_setting@s 002F              ?_PACKET_calculate_checksum 0020  
                ??_PACKET_UpdateAndSend 002B                          _OPTION_REGbits 0095  
              _PACKET_get_rx_packet_ptr 0D43               __end_of_SYSTEM_Initialize 0E2D  
                      _PACKET_Available 0DDA                              __pbssBANK0 0059  
                            __pbssBANK1 00A0                        _handle_rx_packet 0055  
                  __end_of_EUSART_Write 0D60             __size_of_EUSART_Receive_ISR 001A  
                       ?_SETTINGS_write 0020                        ??_FVR_Initialize 0020  
                            __pmaintext 0431               EEPROM_load_all_settings@i 002F  
             EEPROM_load_all_settings@s 002E                 _EUSART_RxBytesAvailable 0002  
                     main@send_data_ptr 00ED                              __pintentry 0004  
                               _BAUDCON 019F                               ?___ftpack 0020  
                               _APFCON0 011D                                 _APFCON1 011E  
                  _I2C2_BusCollisionISR 0D2C                 __size_of_ADC_Initialize 0008  
                             ?___lwtoft 0028                           _eusartRxCount 0071  
     __end_of_PACKET_calculate_checksum 07FB                     PACKET_handle_byte@i 0032  
     I2C2_ISR@i2c_10bit_address_restart 00CB                               _I2C2_Stop 07FB  
                             ?_eecpymem 0020                                 _OSCTUNE 0098  
                               _SSP1ADD 0212                                 _SSP2ADD 021A  
            ??_EEPROM_load_all_settings 002D                                 _SSP1BUF 0211  
                               _SSP2BUF 0219                         _I2C2_Initialize 0E9B  
         __size_of_EEPROM_store_setting 0011                  I2C2_MasterRead@trBlock 00CD  
                             ?_memcpyee 0020       PACKET_calculate_checksum@data_len 0022  
     PACKET_calculate_checksum@checksum 0025                                 ___eetoi 0DED  
                               ___ftadd 0545                                 ___ftmul 063B  
                               ___fttol 06EF                                 ___itoee 0D86  
                               ___lwdiv 0F4B                   ?_I2C2_BusCollisionISR 0076  
                            ??___ftpack 0025                            memcpyee@from 0020  
                               __ptext0 0000                                 __ptext1 0055  
                               __ptext2 0D79                                 __ptext3 0D6C  
                               __ptext4 0D43                                 __ptext5 0F1F  
                               __ptext6 0EF5                                 __ptext7 0D58  
                               __ptext8 0DA5                                 __ptext9 0E7F  
                          memcpyee@size 0021                              ??___lwtoft 002B  
                 _OSCILLATOR_Initialize 0D49                     _EEPROM_load_setting 0DC8  
              ??_PIN_MANAGER_Initialize 0020                              ?_I2C2_Stop 0076  
                 _I2C2_FunctionComplete 0D94                              ??_eecpymem 0022  
            __size_of_SYSTEM_Initialize 0018                                 clrloop0 0D61  
                 PACKET_handle_byte@len 002F                    end_of_initialization 0051  
                            ??_memcpyee 0022                              eecpymem@cp 0024  
                            eecpymem@to 0025                       _EUSART_Initialize 0DB6  
             ??_EUSART_RxBytesAvailable 0020                            _PACKET_RxPtr 0059  
                  ?_EEPROM_load_setting 002D                      ?_EUSART_Initialize 0076  
                    _p_i2c2_trb_current 0070                               _RCSTAbits 019D  
                I2C2_ISR@i2c_bytes_left 005C                      PACKET_SendPacket@i 0027  
            __end_of_PACKET_handle_byte 0431                     ??_EUSART_Initialize 0020  
                      ??_WDT_Initialize 0020                       __size_of_I2C2_ISR 013E  
                      __CFG_FOSC$INTOSC 0000                 __end_of_I2C2_Initialize 0EB8  
                 __size_of_EUSART_Write 0008                  __size_of_SETTINGS_read 000D  
             __end_of_EUSART_Initialize 0DC8                       SETTINGS_read@stgs 0023  
                       _SPI1_Initialize 0D3D                   ??_EEPROM_load_setting 002E  
                            main@temp_f 00E7                             ___ftmul@exp 0036  
                 EEPROM_store_setting@s 002D              ??_PACKET_get_rx_packet_ptr 0022  
                ??_I2C2_BusCollisionISR 0076                __end_of_PACKET_Available 0DED  
              __end_of_handle_rx_packet 01B9                            _EUSART_Write 0D58  
                        _ADC_Initialize 0D50                  ?_OSCILLATOR_Initialize 0076  
           ??_PACKET_calculate_checksum 0024                       PACKET_Available@b 0036  
                ?_I2C2_FunctionComplete 0076                     start_initialization 002E  
                           ??_I2C2_Stop 0076         __size_of_PIN_MANAGER_Initialize 001C  
                         ??_EUSART_Read 0020               SETTINGS_write@setting_val 0021  
             SETTINGS_write@setting_num 0020                        ??_SETTINGS_write 0023  
                         _SETTINGS_read 0D6C                           _SETTINGS_stgs 0000  
                            memcpyee@to 0025                    I2C2_ISR@pi2c_buf_ptr 005D  
           PACKET_handle_byte@data_byte 0034                  __end_of_ADC_Initialize 0D58  
                     __size_of___ftpack 0065                             __pbssEEDATA 0000  
                           __pbssBIGRAM 22E2                             __pbssCOMMON 0070  
                      ?_I2C2_Initialize 0076                               ___latbits 0002  
                     __size_of___lwtoft 0015                           __pcstackBANK0 0020  
                         __pcstackBANK1 00DF           __size_of_PACKET_UpdateAndSend 002C  
               __end_of_SPI1_Initialize 0D43                SETTINGS_read@setting_num 0020  
                         _i2c2_tr_queue 00DB                       __size_of_eecpymem 0036  
            __end_of_EUSART_Receive_ISR 0E47              __size_of_EUSART_Initialize 0012  
             _PACKET_calculate_checksum 07DB                     __end_of_EUSART_Read 0ED6  
        ?_PACKET_EUSART_Bytes_Available 0076                       __size_of_memcpyee 004A  
                        ?_SETTINGS_read 0020                        ___lwdiv@dividend 0022  
                _PIN_MANAGER_Initialize 0E47                    EUSART_Read@readValue 0021  
                              ?___eetoi 0026                                ?___ftadd 003C  
                              ?___ftmul 002C                                ?___fttol 0049  
                              ?___itoee 0026                                ?___lwdiv 0020  
                       ?_ADC_Initialize 0076                            _eusartRxHead 0073  
          __end_of_EEPROM_store_setting 0DB6                            _eusartRxTail 0072  
                              _I2C2_ISR 01B9                         _PACKET_RxPacket 2369  
                     _PACKET_Initialize 0D32            ??_INTERRUPT_InterruptManager 007B  
                             __pswtext1 0800                      ?_PACKET_Initialize 0076  
         PACKET_calculate_checksum@data 0020                        ___lwdiv@quotient 0026  
                   ??_PACKET_Initialize 0020                       _PACKET_SendPacket 0EF5  
                        _eusartRxBuffer 00A0                      ?_PACKET_SendPacket 0021  
                              _LATCbits 010E                               clear_ram0 0D60  
                              _PIE1bits 0091                                _PIE4bits 0094  
   __size_of_INTERRUPT_InterruptManager 0028                                _PIR1bits 0011  
                   ??_PACKET_SendPacket 0023                                _PIR4bits 0014  
     __size_of_EEPROM_load_all_settings 001C               ?_EEPROM_load_all_settings 0076  
                              _SSP1CON1 0215                                _SSP2CON1 021D  
                              _SSP2CON3 021F               __end_of_PACKET_Initialize 0D35  
                              _SSP1STAT 0214                                _SSP2STAT 021C  
                            _ADCON0bits 009D                 __size_of_FVR_Initialize 0004  
                             main@level 00EE               __end_of_PACKET_SendPacket 0F1F  
                    _PACKET_handle_byte 02F7                             _EUSART_Read 0EB8  
                      ?_SPI1_Initialize 0076      __size_of_EEPROM_store_all_settings 001C  
            ?_EEPROM_store_all_settings 0076                     ?_PACKET_handle_byte 0076  
                       ??_SETTINGS_read 0022                       _ADC_GetConversion 0ED6  
               ??_OSCILLATOR_Initialize 0020                      ?_ADC_GetConversion 0020  
                      __size_of___eetoi 0013                        __size_of___ftadd 00F6  
                      __size_of___ftmul 00B4                        __size_of___fttol 0087  
                      __size_of___itoee 000E                       ?_PACKET_Available 0076  
                      __size_of___lwdiv 0035                                ___ftpack 0776  
                     ?_handle_rx_packet 0076                    ??_PACKET_handle_byte 0028  
               ??_I2C2_FunctionComplete 0076                                ___lwtoft 0E00  
                    ??_PACKET_Available 0035                             _curr_temp_f 00C7  
                    ??_handle_rx_packet 0030                     ??_ADC_GetConversion 0022  
                       ___lwdiv@divisor 0020                            eecpymem@from 0020  
                              _eecpymem 0F80                            eecpymem@size 0021  
                       ___lwdiv@counter 0025                                __ptext10 0D86  
                              __ptext11 0FB6                                __ptext20 0545  
                              __ptext12 0DC8                                __ptext21 0776  
                              __ptext13 0E63                                __ptext30 0D50  
                              __ptext22 0E15                                __ptext14 0DED  
                              __ptext31 0D32                                __ptext23 0D39  
                              __ptext15 0F80                                __ptext40 01B9  
                              __ptext32 0DDA                                __ptext24 0D3D  
                              __ptext16 0E00                                __ptext41 07FB  
                              __ptext33 02F7                                __ptext25 0E47  
                              __ptext17 0F4B                                __ptext42 0D94  
                              __ptext34 07DB                                __ptext26 0D49  
                              __ptext18 06EF                                __ptext43 0D2C  
                              __ptext35 0D2F                                __ptext27 0E9B  
                              __ptext19 063B                                __ptext44 0E2D  
                              __ptext36 0002                                __ptext28 0D35  
                              __ptext37 0EB8                                __ptext29 0DB6  
                              __ptext38 0ED6                            _SSP1CON1bits 0215  
                          _SSP2CON1bits 021D                            _SSP2CON2bits 021E  
           __end_of_EEPROM_load_setting 0DDA                          _PACKET_RxState 005B  
              ?_EUSART_RxBytesAvailable 0076       __end_of_EEPROM_store_all_settings 0E9B  
                  _EEPROM_store_setting 0DA5                                _memcpyee 0FB6  
                         __size_of_main 0114               __end_of_ADC_GetConversion 0EF5  
                            _PACKET_Len 00C5                              _PACKET_pkt 22E2  
                              _settings 00D7                                int$flags 007E  
            __size_of_PACKET_Initialize 0003      __end_of_INTERRUPT_InterruptManager 002C  
            _INTERRUPT_InterruptManager 0004              handle_rx_packet@stgs_pld_p 0033  
               I2C2_MasterWrite@trBlock 00D2                            _SSP1STATbits 0214  
                              main@temp 00EB                  PACKET_handle_byte@cksm 0031  
         __size_of_I2C2_BusCollisionISR 0003              EEPROM_store_all_settings@i 002D  
            EEPROM_store_all_settings@s 002C                              _INTCONbits 000B  
                            _FVRCONbits 0117                    PACKET_SendPacket@pkt 0021  
            __size_of_PACKET_SendPacket 002A       __size_of_PACKET_get_rx_packet_ptr 0006  
             ?_PACKET_get_rx_packet_ptr 0020                 __size_of_WDT_Initialize 0004  
                              intlevel1 0000                   ?_EEPROM_store_setting 002B  
                   I2C2_ISR@i2c_address 0074                 ?_PIN_MANAGER_Initialize 0076  
                     __CFG_CLKOUTEN$OFF 0000                        ??_ADC_Initialize 0020  
          __end_of_PACKET_UpdateAndSend 0F4B              PACKET_calculate_checksum@i 0026  
                    _EUSART_Receive_ISR 0E2D                          _FVR_Initialize 0D35  
       ??_PACKET_EUSART_Bytes_Available 0020                     ?_EUSART_Receive_ISR 0076  
       __end_of_EUSART_RxBytesAvailable 0004        __end_of_EEPROM_load_all_settings 0E7F  
                    EUSART_Write@txData 0020          __end_of_PIN_MANAGER_Initialize 0E63  
              __size_of_I2C2_Initialize 001D                      __size_of_I2C2_Stop 0005  
                  ??_EUSART_Receive_ISR 0076              __size_of_ADC_GetConversion 001F  
                          ___eetoi@addr 002A                            ___eetoi@data 002B  
